Tags.Tag001.pushTag((i1: Int, i2: Int) =>  i1)
Tags.Tag002.pushTag((i1: Int, i2: Int) =>  Option.empty)
Tags.Tag003.pushTag((i1: Int, i2: Int) =>  i1 + i2 + 1)
Tags.Tag004.pushTag((i1: Int, i2: Int) =>  i1 + 1)
Tags.Tag005.pushTag((i1: Int, i2: Int) =>  i1 + i2 * 2 + 1)
Tags.Tag006.pushTag((i1: Int, i2: Int) =>  i1 + i2)
Tags.Tag007.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 >= 0) i1 - i2 else 0)
Tags.Tag008.pushTag((i1: Int, i2: Int) =>  i2)
Tags.Tag009.pushTag((i1: Int, i2: Int) =>  0)
Tags.Tag010.pushTag((i1: Int, i2: Int) =>  i2 + 1)
Tags.Tag011.pushTag((i1: Int, i2: Int) =>  1)
Tags.Tag012.pushTag((i1: Int, i2: Int) =>  i2 * 2 + 1)
Tags.Tag013.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option.empty else Option(i2 + 1))
Tags.Tag014.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option.empty else Option(1))
Tags.Tag015.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option(i2 * 2 + 1) else Option.empty)
Tags.Tag016.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option(i2 + 1) else Option.empty)
Tags.Tag017.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else Option.empty)
Tags.Tag018.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i2 + 1)
Tags.Tag019.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i1 * 2 + i2)
Tags.Tag020.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i1 + i2)
Tags.Tag021.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else 1)
Tags.Tag022.pushTag((i1: Int, i2: Int) =>  i1 * 2)
Tags.Tag023.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option.empty else Option(i1 * 2))
Tags.Tag024.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 * 2 + 1 else i1 * 2)
Tags.Tag025.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 >= 0) i1 + i2 else i1 * 2)
Tags.Tag026.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option.empty else Option(i1))
Tags.Tag027.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 + 1 else i1)
Tags.Tag028.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 >= 0) i1 * 2 - i2 else i1)
Tags.Tag029.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) 0 else i2 - i1 + 1)
Tags.Tag030.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) i2 else i2 + 1)
Tags.Tag031.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 * 2 + 1 else i1 + i2)
Tags.Tag032.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 + 1 else i1)
Tags.Tag033.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option.empty else Option(i2))
Tags.Tag034.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option.empty else Option(0))
Tags.Tag035.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option(i2) else Option.empty)
Tags.Tag036.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option(0) else Option.empty)
Tags.Tag037.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i2)
Tags.Tag038.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 else i1)
Tags.Tag039.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) Option.empty else Option(0))
Tags.Tag040.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) i2 + 1 else i2)
Tags.Tag041.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 1 else 0)
Tags.Tag042.pushTag((i1: Int, i2: Int) =>  if (i1 - i2 > 0) i2 else i2 * 2 - i1 + 1)
Tags.Tag043.pushTag((i1: Int, i2: Int) =>  Option.empty)
Tags.Tag044.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option(0) else Option.empty)
Tags.Tag045.pushTag((i1: Int, i2: Int) =>  0)
Tags.Tag046.pushTag((i1: Int, i2: Int) =>  i1)
Tags.Tag047.pushTag((i1: Int, i2: Int) =>  i1 + i2 + 1)
Tags.Tag048.pushTag((i1: Int, i2: Int) =>  i1 + 1)
Tags.Tag049.pushTag((i1: Int, i2: Int) =>  i1 + i2)
Tags.Tag050.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 + 1))
Tags.Tag051.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 + 2))
Tags.Tag052.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) 0 else i1 + 1)
Tags.Tag053.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) i1 else i1 + 1)
Tags.Tag054.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1))
Tags.Tag055.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) 0 else i1)
Tags.Tag056.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) i1 + 1 else i1)
Tags.Tag057.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option(i1 + 1) else Option.empty)
Tags.Tag058.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option(i1) else Option.empty)
Tags.Tag059.pushTag((i1: Int, i2: Int) =>  i1 / (i2 + 1))
Tags.Tag060.pushTag((i1: Int, i2: Int) =>  if (i1 % (i2 + 1) == 0) i1 / (i2 + 1) else i1 / (i2 + 1) + 1)
Tags.Tag061.pushTag((i1: Int, i2: Int) =>  if (i1 % (i2 + 1) == i2) i1 / (i2 + 1) + 1 else i1 / (i2 + 1))
Tags.Tag062.pushTag((i1: Int, i2: Int) =>  i1 / (i2 + 1) + 1)
Tags.Tag063.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(i1 / i2 - 1) else Option(i1 / i2))
Tags.Tag064.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(i1 / i2) else Option(i1 / i2 + 1))
Tags.Tag065.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 / i2))
Tags.Tag066.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 / i2 + 1))
Tags.Tag067.pushTag((i1: Int, i2: Int) =>  i2 + 1)
Tags.Tag068.pushTag((i1: Int, i2: Int) =>  1)
Tags.Tag069.pushTag((i1: Int, i2: Int) =>  i2)
Tags.Tag070.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(1))
Tags.Tag071.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(2))
Tags.Tag072.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) 0 else 1)
Tags.Tag073.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(0))
Tags.Tag074.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) 1 else 0)
Tags.Tag075.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option(1) else Option.empty)
Tags.Tag076.pushTag((i1: Int, i2: Int) =>  if (i1 != 0 && i2 == 0) Option(1) else Option.empty)
Tags.Tag077.pushTag((i1: Int, i2: Int) =>  if (i1 != 0) Option(1) else Option.empty)
Tags.Tag078.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else Option.empty)
Tags.Tag079.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option(1) else Option.empty)
Tags.Tag080.pushTag((i1: Int, i2: Int) =>  i1 * i2 + 2 * i1)
Tags.Tag081.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i1 * i2 + 2 * i1 - i2)
Tags.Tag082.pushTag((i1: Int, i2: Int) =>  i1 * i2 + 2 * i1 + i2 + 1)
Tags.Tag083.pushTag((i1: Int, i2: Int) =>  i1 * i2 + 2 * i1 + 1)
Tags.Tag084.pushTag((i1: Int, i2: Int) =>  i1 * i2 + i1)
Tags.Tag085.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else i1 * i2 + i1 - i2)
Tags.Tag086.pushTag((i1: Int, i2: Int) =>  i1 * i2 + i1 + i2)
Tags.Tag087.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) 0 else 1)
Tags.Tag088.pushTag((i1: Int, i2: Int) =>  2 * i1)
Tags.Tag089.pushTag((i1: Int, i2: Int) =>  2 * i1 + 1)
Tags.Tag090.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(2 * i1 + i1 / i2 - 1) else Option(2 * i1 + i1 / i2))
Tags.Tag091.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(2 * i1 + i1 / i2) else Option(2 * i1 + i1 / i2 + 1))
Tags.Tag092.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(2 * i1 + i1 / i2 + 1))
Tags.Tag093.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(2 * i1 + i1 / i2 + 2))
Tags.Tag094.pushTag((i1: Int, i2: Int) =>  if (i1 != 0 && i2 == 0) 1 else 2 * i1)
Tags.Tag095.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) 0 else 2 * i1 + 1)
Tags.Tag096.pushTag((i1: Int, i2: Int) =>  2 * i1 - i1 / (i2 + 1))
Tags.Tag097.pushTag((i1: Int, i2: Int) =>  if (i1 % (i2 + 1) == 0) 2 * i1 - i1 / (i2 + 1) else 2 * i1 - i1 / (i2 + 1) - 1)
Tags.Tag098.pushTag((i1: Int, i2: Int) =>  2 * i1 - (i1 + 1) / (i2 + 1) + 1)
Tags.Tag099.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(i1 + i1 / i2 - 1) else Option(i1 + i1 / i2))
Tags.Tag100.pushTag((i1: Int, i2: Int) =>  if (i1 == 0) Option(0) else if (i2 == 0) Option.empty else if (i1 % i2 == 0) Option(i1 + i1 / i2) else Option(i1 + i1 / i2 + 1))
Tags.Tag101.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 + i1 / i2))
Tags.Tag102.pushTag((i1: Int, i2: Int) =>  if (i2 == 0) Option.empty else Option(i1 + i1 / i2 + 1))
