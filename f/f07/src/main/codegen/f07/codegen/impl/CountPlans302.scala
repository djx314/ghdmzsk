package f07.codegen.impl
import f07._
object CountPlans302 {
  val plan491084 = CountPlan(index = 491084, planInfo = "olgj", set = CountSetsImpl.b.countSet48)
  val plan491083 = CountPlan(index = 491083, planInfo = "olgi", set = CountSetsImpl.b.countSet48)
  val plan491082 = CountPlan(index = 491082, planInfo = "olgh", set = CountSetsImpl.b.countSet48)
  val plan491081 = CountPlan(index = 491081, planInfo = "olgg", set = CountSetsImpl.b.countSet48)
  val plan491080 = CountPlan(index = 491080, planInfo = "olgf", set = CountSetsImpl.b.countSet48)
  val plan491079 = CountPlan(index = 491079, planInfo = "olge", set = CountSetsImpl.b.countSet48)
  val plan491078 = CountPlan(index = 491078, planInfo = "olgd", set = CountSetsImpl.b.countSet48)
  val plan491077 = CountPlan(index = 491077, planInfo = "olgc", set = CountSetsImpl.b.countSet48)
  val plan491076 = CountPlan(index = 491076, planInfo = "olgb", set = CountSetsImpl.b.countSet48)
  val plan491075 = CountPlan(index = 491075, planInfo = "olga", set = CountSetsImpl.b.countSet48)
  val plan491074 = CountPlan(index = 491074, planInfo = "olfs", set = CountSetsImpl.b.countSet48)
  val plan491073 = CountPlan(index = 491073, planInfo = "olfr", set = CountSetsImpl.b.countSet48)
  val plan491072 = CountPlan(index = 491072, planInfo = "olfq", set = CountSetsImpl.b.countSet48)
  val plan491071 = CountPlan(index = 491071, planInfo = "olfp", set = CountSetsImpl.b.countSet48)
  val plan491070 = CountPlan(index = 491070, planInfo = "olfo", set = CountSetsImpl.b.countSet48)
  val plan491069 = CountPlan(index = 491069, planInfo = "olfn", set = CountSetsImpl.b.countSet48)
  val plan491068 = CountPlan(index = 491068, planInfo = "olfm", set = CountSetsImpl.b.countSet48)
  val plan491067 = CountPlan(index = 491067, planInfo = "olfl", set = CountSetsImpl.b.countSet48)
  val plan491066 = CountPlan(index = 491066, planInfo = "olfk", set = CountSetsImpl.b.countSet48)
  val plan491065 = CountPlan(index = 491065, planInfo = "olfj", set = CountSetsImpl.b.countSet48)
  val plan491064 = CountPlan(index = 491064, planInfo = "olfi", set = CountSetsImpl.b.countSet48)
  val plan491063 = CountPlan(index = 491063, planInfo = "olfh", set = CountSetsImpl.b.countSet48)
  val plan491062 = CountPlan(index = 491062, planInfo = "olfg", set = CountSetsImpl.b.countSet48)
  val plan491061 = CountPlan(index = 491061, planInfo = "olff", set = CountSetsImpl.b.countSet48)
  val plan491060 = CountPlan(index = 491060, planInfo = "olfe", set = CountSetsImpl.b.countSet48)
  val plan491059 = CountPlan(index = 491059, planInfo = "olfd", set = CountSetsImpl.b.countSet48)
  val plan491058 = CountPlan(index = 491058, planInfo = "olfc", set = CountSetsImpl.b.countSet48)
  val plan491057 = CountPlan(index = 491057, planInfo = "olfb", set = CountSetsImpl.b.countSet48)
  val plan491056 = CountPlan(index = 491056, planInfo = "olfa", set = CountSetsImpl.b.countSet48)
  val plan491055 = CountPlan(index = 491055, planInfo = "oles", set = CountSetsImpl.b.countSet48)
  val plan491054 = CountPlan(index = 491054, planInfo = "oler", set = CountSetsImpl.b.countSet48)
  val plan491053 = CountPlan(index = 491053, planInfo = "oleq", set = CountSetsImpl.b.countSet48)
  val plan491052 = CountPlan(index = 491052, planInfo = "olep", set = CountSetsImpl.b.countSet48)
  val plan491051 = CountPlan(index = 491051, planInfo = "oleo", set = CountSetsImpl.b.countSet48)
  val plan491050 = CountPlan(index = 491050, planInfo = "olen", set = CountSetsImpl.b.countSet48)
  val plan491049 = CountPlan(index = 491049, planInfo = "olem", set = CountSetsImpl.b.countSet48)
  val plan491048 = CountPlan(index = 491048, planInfo = "olel", set = CountSetsImpl.b.countSet48)
  val plan491047 = CountPlan(index = 491047, planInfo = "olek", set = CountSetsImpl.b.countSet48)
  val plan491046 = CountPlan(index = 491046, planInfo = "olej", set = CountSetsImpl.b.countSet48)
  val plan491045 = CountPlan(index = 491045, planInfo = "olei", set = CountSetsImpl.b.countSet48)
  val plan491044 = CountPlan(index = 491044, planInfo = "oleh", set = CountSetsImpl.b.countSet48)
  val plan491043 = CountPlan(index = 491043, planInfo = "oleg", set = CountSetsImpl.b.countSet48)
  val plan491042 = CountPlan(index = 491042, planInfo = "olef", set = CountSetsImpl.b.countSet48)
  val plan491041 = CountPlan(index = 491041, planInfo = "olee", set = CountSetsImpl.b.countSet48)
  val plan491040 = CountPlan(index = 491040, planInfo = "oled", set = CountSetsImpl.b.countSet48)
  val plan491039 = CountPlan(index = 491039, planInfo = "olec", set = CountSetsImpl.b.countSet48)
  val plan491038 = CountPlan(index = 491038, planInfo = "oleb", set = CountSetsImpl.b.countSet48)
  val plan491037 = CountPlan(index = 491037, planInfo = "olea", set = CountSetsImpl.b.countSet48)
  val plan491036 = CountPlan(index = 491036, planInfo = "olds", set = CountSetsImpl.b.countSet48)
  val plan491035 = CountPlan(index = 491035, planInfo = "oldr", set = CountSetsImpl.b.countSet48)
  val plan491034 = CountPlan(index = 491034, planInfo = "oldq", set = CountSetsImpl.b.countSet48)
  val plan491033 = CountPlan(index = 491033, planInfo = "oldp", set = CountSetsImpl.b.countSet48)
  val plan491032 = CountPlan(index = 491032, planInfo = "oldo", set = CountSetsImpl.b.countSet48)
  val plan491031 = CountPlan(index = 491031, planInfo = "oldn", set = CountSetsImpl.b.countSet48)
  val plan491030 = CountPlan(index = 491030, planInfo = "oldm", set = CountSetsImpl.b.countSet48)
  val plan491029 = CountPlan(index = 491029, planInfo = "oldl", set = CountSetsImpl.b.countSet48)
  val plan491028 = CountPlan(index = 491028, planInfo = "oldk", set = CountSetsImpl.b.countSet48)
  val plan491027 = CountPlan(index = 491027, planInfo = "oldj", set = CountSetsImpl.b.countSet48)
  val plan491026 = CountPlan(index = 491026, planInfo = "oldi", set = CountSetsImpl.b.countSet48)
  val plan491025 = CountPlan(index = 491025, planInfo = "oldh", set = CountSetsImpl.b.countSet48)
  val plan491024 = CountPlan(index = 491024, planInfo = "oldg", set = CountSetsImpl.b.countSet48)
  val plan491023 = CountPlan(index = 491023, planInfo = "oldf", set = CountSetsImpl.b.countSet48)
  val plan491022 = CountPlan(index = 491022, planInfo = "olde", set = CountSetsImpl.b.countSet48)
  val plan491021 = CountPlan(index = 491021, planInfo = "oldd", set = CountSetsImpl.b.countSet48)
  val plan491020 = CountPlan(index = 491020, planInfo = "oldc", set = CountSetsImpl.b.countSet48)
  val plan491019 = CountPlan(index = 491019, planInfo = "oldb", set = CountSetsImpl.b.countSet48)
  val plan491018 = CountPlan(index = 491018, planInfo = "olda", set = CountSetsImpl.b.countSet48)
  val plan491017 = CountPlan(index = 491017, planInfo = "olcs", set = CountSetsImpl.b.countSet48)
  val plan491016 = CountPlan(index = 491016, planInfo = "olcr", set = CountSetsImpl.b.countSet48)
  val plan491015 = CountPlan(index = 491015, planInfo = "olcq", set = CountSetsImpl.b.countSet48)
  val plan491014 = CountPlan(index = 491014, planInfo = "olcp", set = CountSetsImpl.b.countSet48)
  val plan491013 = CountPlan(index = 491013, planInfo = "olco", set = CountSetsImpl.b.countSet48)
  val plan491012 = CountPlan(index = 491012, planInfo = "olcn", set = CountSetsImpl.b.countSet48)
  val plan491011 = CountPlan(index = 491011, planInfo = "olcm", set = CountSetsImpl.b.countSet48)
  val plan491010 = CountPlan(index = 491010, planInfo = "olcl", set = CountSetsImpl.b.countSet48)
  val plan491009 = CountPlan(index = 491009, planInfo = "olck", set = CountSetsImpl.b.countSet48)
  val plan491008 = CountPlan(index = 491008, planInfo = "olcj", set = CountSetsImpl.b.countSet48)
  val plan491007 = CountPlan(index = 491007, planInfo = "olci", set = CountSetsImpl.b.countSet48)
  val plan491006 = CountPlan(index = 491006, planInfo = "olch", set = CountSetsImpl.b.countSet48)
  val plan491005 = CountPlan(index = 491005, planInfo = "olcg", set = CountSetsImpl.b.countSet48)
  val plan491004 = CountPlan(index = 491004, planInfo = "olcf", set = CountSetsImpl.b.countSet48)
  val plan491003 = CountPlan(index = 491003, planInfo = "olce", set = CountSetsImpl.b.countSet48)
  val plan491002 = CountPlan(index = 491002, planInfo = "olcd", set = CountSetsImpl.b.countSet48)
  val plan491001 = CountPlan(index = 491001, planInfo = "olcc", set = CountSetsImpl.b.countSet48)
  val plan491000 = CountPlan(index = 491000, planInfo = "olcb", set = CountSetsImpl.b.countSet48)
  val plan490999 = CountPlan(index = 490999, planInfo = "olca", set = CountSetsImpl.b.countSet48)
  val plan490998 = CountPlan(index = 490998, planInfo = "olbs", set = CountSetsImpl.b.countSet48)
  val plan490997 = CountPlan(index = 490997, planInfo = "olbr", set = CountSetsImpl.b.countSet48)
  val plan490996 = CountPlan(index = 490996, planInfo = "olbq", set = CountSetsImpl.b.countSet48)
  val plan490995 = CountPlan(index = 490995, planInfo = "olbp", set = CountSetsImpl.b.countSet48)
  val plan490994 = CountPlan(index = 490994, planInfo = "olbo", set = CountSetsImpl.b.countSet48)
  val plan490993 = CountPlan(index = 490993, planInfo = "olbn", set = CountSetsImpl.b.countSet48)
  val plan490992 = CountPlan(index = 490992, planInfo = "olbm", set = CountSetsImpl.b.countSet48)
  val plan490991 = CountPlan(index = 490991, planInfo = "olbl", set = CountSetsImpl.b.countSet48)
  val plan490990 = CountPlan(index = 490990, planInfo = "olbk", set = CountSetsImpl.b.countSet48)
  val plan490989 = CountPlan(index = 490989, planInfo = "olbj", set = CountSetsImpl.b.countSet48)
  val plan490988 = CountPlan(index = 490988, planInfo = "olbi", set = CountSetsImpl.b.countSet48)
  val plan490987 = CountPlan(index = 490987, planInfo = "olbh", set = CountSetsImpl.b.countSet48)
  val plan490986 = CountPlan(index = 490986, planInfo = "olbg", set = CountSetsImpl.b.countSet48)
  val plan490985 = CountPlan(index = 490985, planInfo = "olbf", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan491084,plan491083,plan491082,plan491081,plan491080,plan491079,plan491078,plan491077,plan491076,plan491075,plan491074,plan491073,plan491072,plan491071,plan491070,plan491069,plan491068,plan491067,plan491066,plan491065,plan491064,plan491063,plan491062,plan491061,plan491060,plan491059,plan491058,plan491057,plan491056,plan491055,plan491054,plan491053,plan491052,plan491051,plan491050,plan491049,plan491048,plan491047,plan491046,plan491045,plan491044,plan491043,plan491042,plan491041,plan491040,plan491039,plan491038,plan491037,plan491036,plan491035,plan491034,plan491033,plan491032,plan491031,plan491030,plan491029,plan491028,plan491027,plan491026,plan491025,plan491024,plan491023,plan491022,plan491021,plan491020,plan491019,plan491018,plan491017,plan491016,plan491015,plan491014,plan491013,plan491012,plan491011,plan491010,plan491009,plan491008,plan491007,plan491006,plan491005,plan491004,plan491003,plan491002,plan491001,plan491000,plan490999,plan490998,plan490997,plan490996,plan490995,plan490994,plan490993,plan490992,plan490991,plan490990,plan490989,plan490988,plan490987,plan490986,plan490985)
}
