package f07.codegen.impl
import f07._
object CountPlans358 {
  val plan485484 = CountPlan(index = 485484, planInfo = "nopo", set = CountSetsImpl.b.countSet48)
  val plan485483 = CountPlan(index = 485483, planInfo = "nopn", set = CountSetsImpl.b.countSet48)
  val plan485482 = CountPlan(index = 485482, planInfo = "nopm", set = CountSetsImpl.b.countSet48)
  val plan485481 = CountPlan(index = 485481, planInfo = "nopl", set = CountSetsImpl.b.countSet48)
  val plan485480 = CountPlan(index = 485480, planInfo = "nopk", set = CountSetsImpl.b.countSet48)
  val plan485479 = CountPlan(index = 485479, planInfo = "nopj", set = CountSetsImpl.b.countSet48)
  val plan485478 = CountPlan(index = 485478, planInfo = "nopi", set = CountSetsImpl.b.countSet48)
  val plan485477 = CountPlan(index = 485477, planInfo = "noph", set = CountSetsImpl.b.countSet48)
  val plan485476 = CountPlan(index = 485476, planInfo = "nopg", set = CountSetsImpl.b.countSet48)
  val plan485475 = CountPlan(index = 485475, planInfo = "nopf", set = CountSetsImpl.b.countSet48)
  val plan485474 = CountPlan(index = 485474, planInfo = "nope", set = CountSetsImpl.b.countSet48)
  val plan485473 = CountPlan(index = 485473, planInfo = "nopd", set = CountSetsImpl.b.countSet48)
  val plan485472 = CountPlan(index = 485472, planInfo = "nopc", set = CountSetsImpl.b.countSet48)
  val plan485471 = CountPlan(index = 485471, planInfo = "nopb", set = CountSetsImpl.b.countSet48)
  val plan485470 = CountPlan(index = 485470, planInfo = "nopa", set = CountSetsImpl.b.countSet48)
  val plan485469 = CountPlan(index = 485469, planInfo = "noos", set = CountSetsImpl.b.countSet48)
  val plan485468 = CountPlan(index = 485468, planInfo = "noor", set = CountSetsImpl.b.countSet48)
  val plan485467 = CountPlan(index = 485467, planInfo = "nooq", set = CountSetsImpl.b.countSet48)
  val plan485466 = CountPlan(index = 485466, planInfo = "noop", set = CountSetsImpl.b.countSet48)
  val plan485465 = CountPlan(index = 485465, planInfo = "nooo", set = CountSetsImpl.b.countSet48)
  val plan485464 = CountPlan(index = 485464, planInfo = "noon", set = CountSetsImpl.b.countSet48)
  val plan485463 = CountPlan(index = 485463, planInfo = "noom", set = CountSetsImpl.b.countSet48)
  val plan485462 = CountPlan(index = 485462, planInfo = "nool", set = CountSetsImpl.b.countSet48)
  val plan485461 = CountPlan(index = 485461, planInfo = "nook", set = CountSetsImpl.b.countSet48)
  val plan485460 = CountPlan(index = 485460, planInfo = "nooj", set = CountSetsImpl.b.countSet48)
  val plan485459 = CountPlan(index = 485459, planInfo = "nooi", set = CountSetsImpl.b.countSet48)
  val plan485458 = CountPlan(index = 485458, planInfo = "nooh", set = CountSetsImpl.b.countSet48)
  val plan485457 = CountPlan(index = 485457, planInfo = "noog", set = CountSetsImpl.b.countSet48)
  val plan485456 = CountPlan(index = 485456, planInfo = "noof", set = CountSetsImpl.b.countSet48)
  val plan485455 = CountPlan(index = 485455, planInfo = "nooe", set = CountSetsImpl.b.countSet48)
  val plan485454 = CountPlan(index = 485454, planInfo = "nood", set = CountSetsImpl.b.countSet48)
  val plan485453 = CountPlan(index = 485453, planInfo = "nooc", set = CountSetsImpl.b.countSet48)
  val plan485452 = CountPlan(index = 485452, planInfo = "noob", set = CountSetsImpl.b.countSet48)
  val plan485451 = CountPlan(index = 485451, planInfo = "nooa", set = CountSetsImpl.b.countSet48)
  val plan485450 = CountPlan(index = 485450, planInfo = "nons", set = CountSetsImpl.b.countSet48)
  val plan485449 = CountPlan(index = 485449, planInfo = "nonr", set = CountSetsImpl.b.countSet48)
  val plan485448 = CountPlan(index = 485448, planInfo = "nonq", set = CountSetsImpl.b.countSet48)
  val plan485447 = CountPlan(index = 485447, planInfo = "nonp", set = CountSetsImpl.b.countSet48)
  val plan485446 = CountPlan(index = 485446, planInfo = "nono", set = CountSetsImpl.b.countSet48)
  val plan485445 = CountPlan(index = 485445, planInfo = "nonn", set = CountSetsImpl.b.countSet48)
  val plan485444 = CountPlan(index = 485444, planInfo = "nonm", set = CountSetsImpl.b.countSet48)
  val plan485443 = CountPlan(index = 485443, planInfo = "nonl", set = CountSetsImpl.b.countSet48)
  val plan485442 = CountPlan(index = 485442, planInfo = "nonk", set = CountSetsImpl.b.countSet48)
  val plan485441 = CountPlan(index = 485441, planInfo = "nonj", set = CountSetsImpl.b.countSet48)
  val plan485440 = CountPlan(index = 485440, planInfo = "noni", set = CountSetsImpl.b.countSet48)
  val plan485439 = CountPlan(index = 485439, planInfo = "nonh", set = CountSetsImpl.b.countSet48)
  val plan485438 = CountPlan(index = 485438, planInfo = "nong", set = CountSetsImpl.b.countSet48)
  val plan485437 = CountPlan(index = 485437, planInfo = "nonf", set = CountSetsImpl.b.countSet48)
  val plan485436 = CountPlan(index = 485436, planInfo = "none", set = CountSetsImpl.b.countSet48)
  val plan485435 = CountPlan(index = 485435, planInfo = "nond", set = CountSetsImpl.b.countSet48)
  val plan485434 = CountPlan(index = 485434, planInfo = "nonc", set = CountSetsImpl.b.countSet48)
  val plan485433 = CountPlan(index = 485433, planInfo = "nonb", set = CountSetsImpl.b.countSet48)
  val plan485432 = CountPlan(index = 485432, planInfo = "nona", set = CountSetsImpl.b.countSet48)
  val plan485431 = CountPlan(index = 485431, planInfo = "noms", set = CountSetsImpl.b.countSet48)
  val plan485430 = CountPlan(index = 485430, planInfo = "nomr", set = CountSetsImpl.b.countSet48)
  val plan485429 = CountPlan(index = 485429, planInfo = "nomq", set = CountSetsImpl.b.countSet48)
  val plan485428 = CountPlan(index = 485428, planInfo = "nomp", set = CountSetsImpl.b.countSet48)
  val plan485427 = CountPlan(index = 485427, planInfo = "nomo", set = CountSetsImpl.b.countSet48)
  val plan485426 = CountPlan(index = 485426, planInfo = "nomn", set = CountSetsImpl.b.countSet48)
  val plan485425 = CountPlan(index = 485425, planInfo = "nomm", set = CountSetsImpl.b.countSet48)
  val plan485424 = CountPlan(index = 485424, planInfo = "noml", set = CountSetsImpl.b.countSet48)
  val plan485423 = CountPlan(index = 485423, planInfo = "nomk", set = CountSetsImpl.b.countSet48)
  val plan485422 = CountPlan(index = 485422, planInfo = "nomj", set = CountSetsImpl.b.countSet48)
  val plan485421 = CountPlan(index = 485421, planInfo = "nomi", set = CountSetsImpl.b.countSet48)
  val plan485420 = CountPlan(index = 485420, planInfo = "nomh", set = CountSetsImpl.b.countSet48)
  val plan485419 = CountPlan(index = 485419, planInfo = "nomg", set = CountSetsImpl.b.countSet48)
  val plan485418 = CountPlan(index = 485418, planInfo = "nomf", set = CountSetsImpl.b.countSet48)
  val plan485417 = CountPlan(index = 485417, planInfo = "nome", set = CountSetsImpl.b.countSet48)
  val plan485416 = CountPlan(index = 485416, planInfo = "nomd", set = CountSetsImpl.b.countSet48)
  val plan485415 = CountPlan(index = 485415, planInfo = "nomc", set = CountSetsImpl.b.countSet48)
  val plan485414 = CountPlan(index = 485414, planInfo = "nomb", set = CountSetsImpl.b.countSet48)
  val plan485413 = CountPlan(index = 485413, planInfo = "noma", set = CountSetsImpl.b.countSet48)
  val plan485412 = CountPlan(index = 485412, planInfo = "nols", set = CountSetsImpl.b.countSet48)
  val plan485411 = CountPlan(index = 485411, planInfo = "nolr", set = CountSetsImpl.b.countSet48)
  val plan485410 = CountPlan(index = 485410, planInfo = "nolq", set = CountSetsImpl.b.countSet48)
  val plan485409 = CountPlan(index = 485409, planInfo = "nolp", set = CountSetsImpl.b.countSet48)
  val plan485408 = CountPlan(index = 485408, planInfo = "nolo", set = CountSetsImpl.b.countSet48)
  val plan485407 = CountPlan(index = 485407, planInfo = "noln", set = CountSetsImpl.b.countSet48)
  val plan485406 = CountPlan(index = 485406, planInfo = "nolm", set = CountSetsImpl.b.countSet48)
  val plan485405 = CountPlan(index = 485405, planInfo = "noll", set = CountSetsImpl.b.countSet48)
  val plan485404 = CountPlan(index = 485404, planInfo = "nolk", set = CountSetsImpl.b.countSet48)
  val plan485403 = CountPlan(index = 485403, planInfo = "nolj", set = CountSetsImpl.b.countSet48)
  val plan485402 = CountPlan(index = 485402, planInfo = "noli", set = CountSetsImpl.b.countSet48)
  val plan485401 = CountPlan(index = 485401, planInfo = "nolh", set = CountSetsImpl.b.countSet48)
  val plan485400 = CountPlan(index = 485400, planInfo = "nolg", set = CountSetsImpl.b.countSet48)
  val plan485399 = CountPlan(index = 485399, planInfo = "nolf", set = CountSetsImpl.b.countSet48)
  val plan485398 = CountPlan(index = 485398, planInfo = "nole", set = CountSetsImpl.b.countSet48)
  val plan485397 = CountPlan(index = 485397, planInfo = "nold", set = CountSetsImpl.b.countSet48)
  val plan485396 = CountPlan(index = 485396, planInfo = "nolc", set = CountSetsImpl.b.countSet48)
  val plan485395 = CountPlan(index = 485395, planInfo = "nolb", set = CountSetsImpl.b.countSet48)
  val plan485394 = CountPlan(index = 485394, planInfo = "nola", set = CountSetsImpl.b.countSet48)
  val plan485393 = CountPlan(index = 485393, planInfo = "noks", set = CountSetsImpl.b.countSet48)
  val plan485392 = CountPlan(index = 485392, planInfo = "nokr", set = CountSetsImpl.b.countSet48)
  val plan485391 = CountPlan(index = 485391, planInfo = "nokq", set = CountSetsImpl.b.countSet48)
  val plan485390 = CountPlan(index = 485390, planInfo = "nokp", set = CountSetsImpl.b.countSet48)
  val plan485389 = CountPlan(index = 485389, planInfo = "noko", set = CountSetsImpl.b.countSet48)
  val plan485388 = CountPlan(index = 485388, planInfo = "nokn", set = CountSetsImpl.b.countSet48)
  val plan485387 = CountPlan(index = 485387, planInfo = "nokm", set = CountSetsImpl.b.countSet48)
  val plan485386 = CountPlan(index = 485386, planInfo = "nokl", set = CountSetsImpl.b.countSet48)
  val plan485385 = CountPlan(index = 485385, planInfo = "nokk", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan485484,plan485483,plan485482,plan485481,plan485480,plan485479,plan485478,plan485477,plan485476,plan485475,plan485474,plan485473,plan485472,plan485471,plan485470,plan485469,plan485468,plan485467,plan485466,plan485465,plan485464,plan485463,plan485462,plan485461,plan485460,plan485459,plan485458,plan485457,plan485456,plan485455,plan485454,plan485453,plan485452,plan485451,plan485450,plan485449,plan485448,plan485447,plan485446,plan485445,plan485444,plan485443,plan485442,plan485441,plan485440,plan485439,plan485438,plan485437,plan485436,plan485435,plan485434,plan485433,plan485432,plan485431,plan485430,plan485429,plan485428,plan485427,plan485426,plan485425,plan485424,plan485423,plan485422,plan485421,plan485420,plan485419,plan485418,plan485417,plan485416,plan485415,plan485414,plan485413,plan485412,plan485411,plan485410,plan485409,plan485408,plan485407,plan485406,plan485405,plan485404,plan485403,plan485402,plan485401,plan485400,plan485399,plan485398,plan485397,plan485396,plan485395,plan485394,plan485393,plan485392,plan485391,plan485390,plan485389,plan485388,plan485387,plan485386,plan485385)
}
