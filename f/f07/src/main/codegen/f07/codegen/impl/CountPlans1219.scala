package f07.codegen.impl
import f07._
object CountPlans1219 {
  val plan399384 = CountPlan(index = 399384, planInfo = "begd", set = CountSetsImpl.b.countSet59)
  val plan399383 = CountPlan(index = 399383, planInfo = "begc", set = CountSetsImpl.b.countSet59)
  val plan399382 = CountPlan(index = 399382, planInfo = "begb", set = CountSetsImpl.b.countSet59)
  val plan399381 = CountPlan(index = 399381, planInfo = "bega", set = CountSetsImpl.b.countSet59)
  val plan399380 = CountPlan(index = 399380, planInfo = "befs", set = CountSetsImpl.b.countSet59)
  val plan399379 = CountPlan(index = 399379, planInfo = "befr", set = CountSetsImpl.b.countSet59)
  val plan399378 = CountPlan(index = 399378, planInfo = "befq", set = CountSetsImpl.b.countSet59)
  val plan399377 = CountPlan(index = 399377, planInfo = "befp", set = CountSetsImpl.b.countSet59)
  val plan399376 = CountPlan(index = 399376, planInfo = "befo", set = CountSetsImpl.b.countSet59)
  val plan399375 = CountPlan(index = 399375, planInfo = "befn", set = CountSetsImpl.b.countSet59)
  val plan399374 = CountPlan(index = 399374, planInfo = "befm", set = CountSetsImpl.b.countSet59)
  val plan399373 = CountPlan(index = 399373, planInfo = "befl", set = CountSetsImpl.b.countSet59)
  val plan399372 = CountPlan(index = 399372, planInfo = "befk", set = CountSetsImpl.b.countSet59)
  val plan399371 = CountPlan(index = 399371, planInfo = "befj", set = CountSetsImpl.b.countSet59)
  val plan399370 = CountPlan(index = 399370, planInfo = "befi", set = CountSetsImpl.b.countSet59)
  val plan399369 = CountPlan(index = 399369, planInfo = "befh", set = CountSetsImpl.b.countSet59)
  val plan399368 = CountPlan(index = 399368, planInfo = "befg", set = CountSetsImpl.b.countSet59)
  val plan399367 = CountPlan(index = 399367, planInfo = "beff", set = CountSetsImpl.b.countSet59)
  val plan399366 = CountPlan(index = 399366, planInfo = "befe", set = CountSetsImpl.b.countSet59)
  val plan399365 = CountPlan(index = 399365, planInfo = "befd", set = CountSetsImpl.b.countSet59)
  val plan399364 = CountPlan(index = 399364, planInfo = "befc", set = CountSetsImpl.b.countSet59)
  val plan399363 = CountPlan(index = 399363, planInfo = "befb", set = CountSetsImpl.b.countSet59)
  val plan399362 = CountPlan(index = 399362, planInfo = "befa", set = CountSetsImpl.b.countSet59)
  val plan399361 = CountPlan(index = 399361, planInfo = "bees", set = CountSetsImpl.b.countSet59)
  val plan399360 = CountPlan(index = 399360, planInfo = "beer", set = CountSetsImpl.b.countSet59)
  val plan399359 = CountPlan(index = 399359, planInfo = "beeq", set = CountSetsImpl.b.countSet59)
  val plan399358 = CountPlan(index = 399358, planInfo = "beep", set = CountSetsImpl.b.countSet59)
  val plan399357 = CountPlan(index = 399357, planInfo = "beeo", set = CountSetsImpl.b.countSet59)
  val plan399356 = CountPlan(index = 399356, planInfo = "been", set = CountSetsImpl.b.countSet59)
  val plan399355 = CountPlan(index = 399355, planInfo = "beem", set = CountSetsImpl.b.countSet59)
  val plan399354 = CountPlan(index = 399354, planInfo = "beel", set = CountSetsImpl.b.countSet59)
  val plan399353 = CountPlan(index = 399353, planInfo = "beek", set = CountSetsImpl.b.countSet59)
  val plan399352 = CountPlan(index = 399352, planInfo = "beej", set = CountSetsImpl.b.countSet59)
  val plan399351 = CountPlan(index = 399351, planInfo = "beei", set = CountSetsImpl.b.countSet59)
  val plan399350 = CountPlan(index = 399350, planInfo = "beeh", set = CountSetsImpl.b.countSet59)
  val plan399349 = CountPlan(index = 399349, planInfo = "beeg", set = CountSetsImpl.b.countSet59)
  val plan399348 = CountPlan(index = 399348, planInfo = "beef", set = CountSetsImpl.b.countSet59)
  val plan399347 = CountPlan(index = 399347, planInfo = "beee", set = CountSetsImpl.b.countSet59)
  val plan399346 = CountPlan(index = 399346, planInfo = "beed", set = CountSetsImpl.b.countSet59)
  val plan399345 = CountPlan(index = 399345, planInfo = "beec", set = CountSetsImpl.b.countSet59)
  val plan399344 = CountPlan(index = 399344, planInfo = "beeb", set = CountSetsImpl.b.countSet59)
  val plan399343 = CountPlan(index = 399343, planInfo = "beea", set = CountSetsImpl.b.countSet59)
  val plan399342 = CountPlan(index = 399342, planInfo = "beds", set = CountSetsImpl.b.countSet59)
  val plan399341 = CountPlan(index = 399341, planInfo = "bedr", set = CountSetsImpl.b.countSet59)
  val plan399340 = CountPlan(index = 399340, planInfo = "bedq", set = CountSetsImpl.b.countSet59)
  val plan399339 = CountPlan(index = 399339, planInfo = "bedp", set = CountSetsImpl.b.countSet59)
  val plan399338 = CountPlan(index = 399338, planInfo = "bedo", set = CountSetsImpl.b.countSet59)
  val plan399337 = CountPlan(index = 399337, planInfo = "bedn", set = CountSetsImpl.b.countSet59)
  val plan399336 = CountPlan(index = 399336, planInfo = "bedm", set = CountSetsImpl.b.countSet59)
  val plan399335 = CountPlan(index = 399335, planInfo = "bedl", set = CountSetsImpl.b.countSet59)
  val plan399334 = CountPlan(index = 399334, planInfo = "bedk", set = CountSetsImpl.b.countSet59)
  val plan399333 = CountPlan(index = 399333, planInfo = "bedj", set = CountSetsImpl.b.countSet59)
  val plan399332 = CountPlan(index = 399332, planInfo = "bedi", set = CountSetsImpl.b.countSet59)
  val plan399331 = CountPlan(index = 399331, planInfo = "bedh", set = CountSetsImpl.b.countSet59)
  val plan399330 = CountPlan(index = 399330, planInfo = "bedg", set = CountSetsImpl.b.countSet59)
  val plan399329 = CountPlan(index = 399329, planInfo = "bedf", set = CountSetsImpl.b.countSet59)
  val plan399328 = CountPlan(index = 399328, planInfo = "bede", set = CountSetsImpl.b.countSet59)
  val plan399327 = CountPlan(index = 399327, planInfo = "bedd", set = CountSetsImpl.b.countSet59)
  val plan399326 = CountPlan(index = 399326, planInfo = "bedc", set = CountSetsImpl.b.countSet59)
  val plan399325 = CountPlan(index = 399325, planInfo = "bedb", set = CountSetsImpl.b.countSet59)
  val plan399324 = CountPlan(index = 399324, planInfo = "beda", set = CountSetsImpl.b.countSet59)
  val plan399323 = CountPlan(index = 399323, planInfo = "becs", set = CountSetsImpl.b.countSet59)
  val plan399322 = CountPlan(index = 399322, planInfo = "becr", set = CountSetsImpl.b.countSet59)
  val plan399321 = CountPlan(index = 399321, planInfo = "becq", set = CountSetsImpl.b.countSet59)
  val plan399320 = CountPlan(index = 399320, planInfo = "becp", set = CountSetsImpl.b.countSet59)
  val plan399319 = CountPlan(index = 399319, planInfo = "beco", set = CountSetsImpl.b.countSet59)
  val plan399318 = CountPlan(index = 399318, planInfo = "becn", set = CountSetsImpl.b.countSet59)
  val plan399317 = CountPlan(index = 399317, planInfo = "becm", set = CountSetsImpl.b.countSet59)
  val plan399316 = CountPlan(index = 399316, planInfo = "becl", set = CountSetsImpl.b.countSet59)
  val plan399315 = CountPlan(index = 399315, planInfo = "beck", set = CountSetsImpl.b.countSet59)
  val plan399314 = CountPlan(index = 399314, planInfo = "becj", set = CountSetsImpl.b.countSet59)
  val plan399313 = CountPlan(index = 399313, planInfo = "beci", set = CountSetsImpl.b.countSet59)
  val plan399312 = CountPlan(index = 399312, planInfo = "bech", set = CountSetsImpl.b.countSet59)
  val plan399311 = CountPlan(index = 399311, planInfo = "becg", set = CountSetsImpl.b.countSet59)
  val plan399310 = CountPlan(index = 399310, planInfo = "becf", set = CountSetsImpl.b.countSet59)
  val plan399309 = CountPlan(index = 399309, planInfo = "bece", set = CountSetsImpl.b.countSet59)
  val plan399308 = CountPlan(index = 399308, planInfo = "becd", set = CountSetsImpl.b.countSet59)
  val plan399307 = CountPlan(index = 399307, planInfo = "becc", set = CountSetsImpl.b.countSet59)
  val plan399306 = CountPlan(index = 399306, planInfo = "becb", set = CountSetsImpl.b.countSet59)
  val plan399305 = CountPlan(index = 399305, planInfo = "beca", set = CountSetsImpl.b.countSet59)
  val plan399304 = CountPlan(index = 399304, planInfo = "bebs", set = CountSetsImpl.b.countSet59)
  val plan399303 = CountPlan(index = 399303, planInfo = "bebr", set = CountSetsImpl.b.countSet59)
  val plan399302 = CountPlan(index = 399302, planInfo = "bebq", set = CountSetsImpl.b.countSet59)
  val plan399301 = CountPlan(index = 399301, planInfo = "bebp", set = CountSetsImpl.b.countSet59)
  val plan399300 = CountPlan(index = 399300, planInfo = "bebo", set = CountSetsImpl.b.countSet59)
  val plan399299 = CountPlan(index = 399299, planInfo = "bebn", set = CountSetsImpl.b.countSet59)
  val plan399298 = CountPlan(index = 399298, planInfo = "bebm", set = CountSetsImpl.b.countSet59)
  val plan399297 = CountPlan(index = 399297, planInfo = "bebl", set = CountSetsImpl.b.countSet59)
  val plan399296 = CountPlan(index = 399296, planInfo = "bebk", set = CountSetsImpl.b.countSet59)
  val plan399295 = CountPlan(index = 399295, planInfo = "bebj", set = CountSetsImpl.b.countSet59)
  val plan399294 = CountPlan(index = 399294, planInfo = "bebi", set = CountSetsImpl.b.countSet59)
  val plan399293 = CountPlan(index = 399293, planInfo = "bebh", set = CountSetsImpl.b.countSet59)
  val plan399292 = CountPlan(index = 399292, planInfo = "bebg", set = CountSetsImpl.b.countSet59)
  val plan399291 = CountPlan(index = 399291, planInfo = "bebf", set = CountSetsImpl.b.countSet59)
  val plan399290 = CountPlan(index = 399290, planInfo = "bebe", set = CountSetsImpl.b.countSet59)
  val plan399289 = CountPlan(index = 399289, planInfo = "bebd", set = CountSetsImpl.b.countSet59)
  val plan399288 = CountPlan(index = 399288, planInfo = "bebc", set = CountSetsImpl.b.countSet59)
  val plan399287 = CountPlan(index = 399287, planInfo = "bebb", set = CountSetsImpl.b.countSet59)
  val plan399286 = CountPlan(index = 399286, planInfo = "beba", set = CountSetsImpl.b.countSet59)
  val plan399285 = CountPlan(index = 399285, planInfo = "beas", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan399384,plan399383,plan399382,plan399381,plan399380,plan399379,plan399378,plan399377,plan399376,plan399375,plan399374,plan399373,plan399372,plan399371,plan399370,plan399369,plan399368,plan399367,plan399366,plan399365,plan399364,plan399363,plan399362,plan399361,plan399360,plan399359,plan399358,plan399357,plan399356,plan399355,plan399354,plan399353,plan399352,plan399351,plan399350,plan399349,plan399348,plan399347,plan399346,plan399345,plan399344,plan399343,plan399342,plan399341,plan399340,plan399339,plan399338,plan399337,plan399336,plan399335,plan399334,plan399333,plan399332,plan399331,plan399330,plan399329,plan399328,plan399327,plan399326,plan399325,plan399324,plan399323,plan399322,plan399321,plan399320,plan399319,plan399318,plan399317,plan399316,plan399315,plan399314,plan399313,plan399312,plan399311,plan399310,plan399309,plan399308,plan399307,plan399306,plan399305,plan399304,plan399303,plan399302,plan399301,plan399300,plan399299,plan399298,plan399297,plan399296,plan399295,plan399294,plan399293,plan399292,plan399291,plan399290,plan399289,plan399288,plan399287,plan399286,plan399285)
}
