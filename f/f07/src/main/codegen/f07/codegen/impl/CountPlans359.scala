package f07.codegen.impl
import f07._
object CountPlans359 {
  val plan485384 = CountPlan(index = 485384, planInfo = "nokj", set = CountSetsImpl.b.countSet48)
  val plan485383 = CountPlan(index = 485383, planInfo = "noki", set = CountSetsImpl.b.countSet48)
  val plan485382 = CountPlan(index = 485382, planInfo = "nokh", set = CountSetsImpl.b.countSet48)
  val plan485381 = CountPlan(index = 485381, planInfo = "nokg", set = CountSetsImpl.b.countSet48)
  val plan485380 = CountPlan(index = 485380, planInfo = "nokf", set = CountSetsImpl.b.countSet48)
  val plan485379 = CountPlan(index = 485379, planInfo = "noke", set = CountSetsImpl.b.countSet48)
  val plan485378 = CountPlan(index = 485378, planInfo = "nokd", set = CountSetsImpl.b.countSet48)
  val plan485377 = CountPlan(index = 485377, planInfo = "nokc", set = CountSetsImpl.b.countSet48)
  val plan485376 = CountPlan(index = 485376, planInfo = "nokb", set = CountSetsImpl.b.countSet48)
  val plan485375 = CountPlan(index = 485375, planInfo = "noka", set = CountSetsImpl.b.countSet48)
  val plan485374 = CountPlan(index = 485374, planInfo = "nojs", set = CountSetsImpl.b.countSet48)
  val plan485373 = CountPlan(index = 485373, planInfo = "nojr", set = CountSetsImpl.b.countSet48)
  val plan485372 = CountPlan(index = 485372, planInfo = "nojq", set = CountSetsImpl.b.countSet48)
  val plan485371 = CountPlan(index = 485371, planInfo = "nojp", set = CountSetsImpl.b.countSet48)
  val plan485370 = CountPlan(index = 485370, planInfo = "nojo", set = CountSetsImpl.b.countSet48)
  val plan485369 = CountPlan(index = 485369, planInfo = "nojn", set = CountSetsImpl.b.countSet48)
  val plan485368 = CountPlan(index = 485368, planInfo = "nojm", set = CountSetsImpl.b.countSet48)
  val plan485367 = CountPlan(index = 485367, planInfo = "nojl", set = CountSetsImpl.b.countSet48)
  val plan485366 = CountPlan(index = 485366, planInfo = "nojk", set = CountSetsImpl.b.countSet48)
  val plan485365 = CountPlan(index = 485365, planInfo = "nojj", set = CountSetsImpl.b.countSet48)
  val plan485364 = CountPlan(index = 485364, planInfo = "noji", set = CountSetsImpl.b.countSet48)
  val plan485363 = CountPlan(index = 485363, planInfo = "nojh", set = CountSetsImpl.b.countSet48)
  val plan485362 = CountPlan(index = 485362, planInfo = "nojg", set = CountSetsImpl.b.countSet48)
  val plan485361 = CountPlan(index = 485361, planInfo = "nojf", set = CountSetsImpl.b.countSet48)
  val plan485360 = CountPlan(index = 485360, planInfo = "noje", set = CountSetsImpl.b.countSet48)
  val plan485359 = CountPlan(index = 485359, planInfo = "nojd", set = CountSetsImpl.b.countSet48)
  val plan485358 = CountPlan(index = 485358, planInfo = "nojc", set = CountSetsImpl.b.countSet48)
  val plan485357 = CountPlan(index = 485357, planInfo = "nojb", set = CountSetsImpl.b.countSet48)
  val plan485356 = CountPlan(index = 485356, planInfo = "noja", set = CountSetsImpl.b.countSet48)
  val plan485355 = CountPlan(index = 485355, planInfo = "nois", set = CountSetsImpl.b.countSet48)
  val plan485354 = CountPlan(index = 485354, planInfo = "noir", set = CountSetsImpl.b.countSet48)
  val plan485353 = CountPlan(index = 485353, planInfo = "noiq", set = CountSetsImpl.b.countSet48)
  val plan485352 = CountPlan(index = 485352, planInfo = "noip", set = CountSetsImpl.b.countSet48)
  val plan485351 = CountPlan(index = 485351, planInfo = "noio", set = CountSetsImpl.b.countSet48)
  val plan485350 = CountPlan(index = 485350, planInfo = "noin", set = CountSetsImpl.b.countSet48)
  val plan485349 = CountPlan(index = 485349, planInfo = "noim", set = CountSetsImpl.b.countSet48)
  val plan485348 = CountPlan(index = 485348, planInfo = "noil", set = CountSetsImpl.b.countSet48)
  val plan485347 = CountPlan(index = 485347, planInfo = "noik", set = CountSetsImpl.b.countSet48)
  val plan485346 = CountPlan(index = 485346, planInfo = "noij", set = CountSetsImpl.b.countSet48)
  val plan485345 = CountPlan(index = 485345, planInfo = "noii", set = CountSetsImpl.b.countSet48)
  val plan485344 = CountPlan(index = 485344, planInfo = "noih", set = CountSetsImpl.b.countSet48)
  val plan485343 = CountPlan(index = 485343, planInfo = "noig", set = CountSetsImpl.b.countSet48)
  val plan485342 = CountPlan(index = 485342, planInfo = "noif", set = CountSetsImpl.b.countSet48)
  val plan485341 = CountPlan(index = 485341, planInfo = "noie", set = CountSetsImpl.b.countSet48)
  val plan485340 = CountPlan(index = 485340, planInfo = "noid", set = CountSetsImpl.b.countSet48)
  val plan485339 = CountPlan(index = 485339, planInfo = "noic", set = CountSetsImpl.b.countSet48)
  val plan485338 = CountPlan(index = 485338, planInfo = "noib", set = CountSetsImpl.b.countSet48)
  val plan485337 = CountPlan(index = 485337, planInfo = "noia", set = CountSetsImpl.b.countSet48)
  val plan485336 = CountPlan(index = 485336, planInfo = "nohs", set = CountSetsImpl.b.countSet48)
  val plan485335 = CountPlan(index = 485335, planInfo = "nohr", set = CountSetsImpl.b.countSet48)
  val plan485334 = CountPlan(index = 485334, planInfo = "nohq", set = CountSetsImpl.b.countSet48)
  val plan485333 = CountPlan(index = 485333, planInfo = "nohp", set = CountSetsImpl.b.countSet48)
  val plan485332 = CountPlan(index = 485332, planInfo = "noho", set = CountSetsImpl.b.countSet48)
  val plan485331 = CountPlan(index = 485331, planInfo = "nohn", set = CountSetsImpl.b.countSet48)
  val plan485330 = CountPlan(index = 485330, planInfo = "nohm", set = CountSetsImpl.b.countSet48)
  val plan485329 = CountPlan(index = 485329, planInfo = "nohl", set = CountSetsImpl.b.countSet48)
  val plan485328 = CountPlan(index = 485328, planInfo = "nohk", set = CountSetsImpl.b.countSet48)
  val plan485327 = CountPlan(index = 485327, planInfo = "nohj", set = CountSetsImpl.b.countSet48)
  val plan485326 = CountPlan(index = 485326, planInfo = "nohi", set = CountSetsImpl.b.countSet48)
  val plan485325 = CountPlan(index = 485325, planInfo = "nohh", set = CountSetsImpl.b.countSet48)
  val plan485324 = CountPlan(index = 485324, planInfo = "nohg", set = CountSetsImpl.b.countSet48)
  val plan485323 = CountPlan(index = 485323, planInfo = "nohf", set = CountSetsImpl.b.countSet48)
  val plan485322 = CountPlan(index = 485322, planInfo = "nohe", set = CountSetsImpl.b.countSet48)
  val plan485321 = CountPlan(index = 485321, planInfo = "nohd", set = CountSetsImpl.b.countSet48)
  val plan485320 = CountPlan(index = 485320, planInfo = "nohc", set = CountSetsImpl.b.countSet48)
  val plan485319 = CountPlan(index = 485319, planInfo = "nohb", set = CountSetsImpl.b.countSet48)
  val plan485318 = CountPlan(index = 485318, planInfo = "noha", set = CountSetsImpl.b.countSet48)
  val plan485317 = CountPlan(index = 485317, planInfo = "nogs", set = CountSetsImpl.b.countSet48)
  val plan485316 = CountPlan(index = 485316, planInfo = "nogr", set = CountSetsImpl.b.countSet48)
  val plan485315 = CountPlan(index = 485315, planInfo = "nogq", set = CountSetsImpl.b.countSet48)
  val plan485314 = CountPlan(index = 485314, planInfo = "nogp", set = CountSetsImpl.b.countSet48)
  val plan485313 = CountPlan(index = 485313, planInfo = "nogo", set = CountSetsImpl.b.countSet48)
  val plan485312 = CountPlan(index = 485312, planInfo = "nogn", set = CountSetsImpl.b.countSet48)
  val plan485311 = CountPlan(index = 485311, planInfo = "nogm", set = CountSetsImpl.b.countSet48)
  val plan485310 = CountPlan(index = 485310, planInfo = "nogl", set = CountSetsImpl.b.countSet48)
  val plan485309 = CountPlan(index = 485309, planInfo = "nogk", set = CountSetsImpl.b.countSet48)
  val plan485308 = CountPlan(index = 485308, planInfo = "nogj", set = CountSetsImpl.b.countSet48)
  val plan485307 = CountPlan(index = 485307, planInfo = "nogi", set = CountSetsImpl.b.countSet48)
  val plan485306 = CountPlan(index = 485306, planInfo = "nogh", set = CountSetsImpl.b.countSet48)
  val plan485305 = CountPlan(index = 485305, planInfo = "nogg", set = CountSetsImpl.b.countSet48)
  val plan485304 = CountPlan(index = 485304, planInfo = "nogf", set = CountSetsImpl.b.countSet48)
  val plan485303 = CountPlan(index = 485303, planInfo = "noge", set = CountSetsImpl.b.countSet48)
  val plan485302 = CountPlan(index = 485302, planInfo = "nogd", set = CountSetsImpl.b.countSet48)
  val plan485301 = CountPlan(index = 485301, planInfo = "nogc", set = CountSetsImpl.b.countSet48)
  val plan485300 = CountPlan(index = 485300, planInfo = "nogb", set = CountSetsImpl.b.countSet48)
  val plan485299 = CountPlan(index = 485299, planInfo = "noga", set = CountSetsImpl.b.countSet48)
  val plan485298 = CountPlan(index = 485298, planInfo = "nofs", set = CountSetsImpl.b.countSet48)
  val plan485297 = CountPlan(index = 485297, planInfo = "nofr", set = CountSetsImpl.b.countSet48)
  val plan485296 = CountPlan(index = 485296, planInfo = "nofq", set = CountSetsImpl.b.countSet48)
  val plan485295 = CountPlan(index = 485295, planInfo = "nofp", set = CountSetsImpl.b.countSet48)
  val plan485294 = CountPlan(index = 485294, planInfo = "nofo", set = CountSetsImpl.b.countSet48)
  val plan485293 = CountPlan(index = 485293, planInfo = "nofn", set = CountSetsImpl.b.countSet48)
  val plan485292 = CountPlan(index = 485292, planInfo = "nofm", set = CountSetsImpl.b.countSet48)
  val plan485291 = CountPlan(index = 485291, planInfo = "nofl", set = CountSetsImpl.b.countSet48)
  val plan485290 = CountPlan(index = 485290, planInfo = "nofk", set = CountSetsImpl.b.countSet48)
  val plan485289 = CountPlan(index = 485289, planInfo = "nofj", set = CountSetsImpl.b.countSet48)
  val plan485288 = CountPlan(index = 485288, planInfo = "nofi", set = CountSetsImpl.b.countSet48)
  val plan485287 = CountPlan(index = 485287, planInfo = "nofh", set = CountSetsImpl.b.countSet48)
  val plan485286 = CountPlan(index = 485286, planInfo = "nofg", set = CountSetsImpl.b.countSet48)
  val plan485285 = CountPlan(index = 485285, planInfo = "noff", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan485384,plan485383,plan485382,plan485381,plan485380,plan485379,plan485378,plan485377,plan485376,plan485375,plan485374,plan485373,plan485372,plan485371,plan485370,plan485369,plan485368,plan485367,plan485366,plan485365,plan485364,plan485363,plan485362,plan485361,plan485360,plan485359,plan485358,plan485357,plan485356,plan485355,plan485354,plan485353,plan485352,plan485351,plan485350,plan485349,plan485348,plan485347,plan485346,plan485345,plan485344,plan485343,plan485342,plan485341,plan485340,plan485339,plan485338,plan485337,plan485336,plan485335,plan485334,plan485333,plan485332,plan485331,plan485330,plan485329,plan485328,plan485327,plan485326,plan485325,plan485324,plan485323,plan485322,plan485321,plan485320,plan485319,plan485318,plan485317,plan485316,plan485315,plan485314,plan485313,plan485312,plan485311,plan485310,plan485309,plan485308,plan485307,plan485306,plan485305,plan485304,plan485303,plan485302,plan485301,plan485300,plan485299,plan485298,plan485297,plan485296,plan485295,plan485294,plan485293,plan485292,plan485291,plan485290,plan485289,plan485288,plan485287,plan485286,plan485285)
}
