package f07.codegen.impl
import f07._
object CountPlans1273 {
  val plan393984 = CountPlan(index = 393984, planInfo = "aigs", set = CountSetsImpl.b.countSet47)
  val plan393983 = CountPlan(index = 393983, planInfo = "aigr", set = CountSetsImpl.b.countSet47)
  val plan393982 = CountPlan(index = 393982, planInfo = "aigq", set = CountSetsImpl.b.countSet47)
  val plan393981 = CountPlan(index = 393981, planInfo = "aigp", set = CountSetsImpl.b.countSet47)
  val plan393980 = CountPlan(index = 393980, planInfo = "aigo", set = CountSetsImpl.b.countSet47)
  val plan393979 = CountPlan(index = 393979, planInfo = "aign", set = CountSetsImpl.b.countSet47)
  val plan393978 = CountPlan(index = 393978, planInfo = "aigm", set = CountSetsImpl.b.countSet47)
  val plan393977 = CountPlan(index = 393977, planInfo = "aigl", set = CountSetsImpl.b.countSet47)
  val plan393976 = CountPlan(index = 393976, planInfo = "aigk", set = CountSetsImpl.b.countSet47)
  val plan393975 = CountPlan(index = 393975, planInfo = "aigj", set = CountSetsImpl.b.countSet47)
  val plan393974 = CountPlan(index = 393974, planInfo = "aigi", set = CountSetsImpl.b.countSet47)
  val plan393973 = CountPlan(index = 393973, planInfo = "aigh", set = CountSetsImpl.b.countSet47)
  val plan393972 = CountPlan(index = 393972, planInfo = "aigg", set = CountSetsImpl.b.countSet47)
  val plan393971 = CountPlan(index = 393971, planInfo = "aigf", set = CountSetsImpl.b.countSet47)
  val plan393970 = CountPlan(index = 393970, planInfo = "aige", set = CountSetsImpl.b.countSet47)
  val plan393969 = CountPlan(index = 393969, planInfo = "aigd", set = CountSetsImpl.b.countSet47)
  val plan393968 = CountPlan(index = 393968, planInfo = "aigc", set = CountSetsImpl.b.countSet47)
  val plan393967 = CountPlan(index = 393967, planInfo = "aigb", set = CountSetsImpl.b.countSet47)
  val plan393966 = CountPlan(index = 393966, planInfo = "aiga", set = CountSetsImpl.b.countSet47)
  val plan393965 = CountPlan(index = 393965, planInfo = "aifs", set = CountSetsImpl.b.countSet47)
  val plan393964 = CountPlan(index = 393964, planInfo = "aifr", set = CountSetsImpl.b.countSet47)
  val plan393963 = CountPlan(index = 393963, planInfo = "aifq", set = CountSetsImpl.b.countSet47)
  val plan393962 = CountPlan(index = 393962, planInfo = "aifp", set = CountSetsImpl.b.countSet47)
  val plan393961 = CountPlan(index = 393961, planInfo = "aifo", set = CountSetsImpl.b.countSet47)
  val plan393960 = CountPlan(index = 393960, planInfo = "aifn", set = CountSetsImpl.b.countSet47)
  val plan393959 = CountPlan(index = 393959, planInfo = "aifm", set = CountSetsImpl.b.countSet47)
  val plan393958 = CountPlan(index = 393958, planInfo = "aifl", set = CountSetsImpl.b.countSet47)
  val plan393957 = CountPlan(index = 393957, planInfo = "aifk", set = CountSetsImpl.b.countSet47)
  val plan393956 = CountPlan(index = 393956, planInfo = "aifj", set = CountSetsImpl.b.countSet47)
  val plan393955 = CountPlan(index = 393955, planInfo = "aifi", set = CountSetsImpl.b.countSet47)
  val plan393954 = CountPlan(index = 393954, planInfo = "aifh", set = CountSetsImpl.b.countSet47)
  val plan393953 = CountPlan(index = 393953, planInfo = "aifg", set = CountSetsImpl.b.countSet47)
  val plan393952 = CountPlan(index = 393952, planInfo = "aiff", set = CountSetsImpl.b.countSet47)
  val plan393951 = CountPlan(index = 393951, planInfo = "aife", set = CountSetsImpl.b.countSet47)
  val plan393950 = CountPlan(index = 393950, planInfo = "aifd", set = CountSetsImpl.b.countSet47)
  val plan393949 = CountPlan(index = 393949, planInfo = "aifc", set = CountSetsImpl.b.countSet47)
  val plan393948 = CountPlan(index = 393948, planInfo = "aifb", set = CountSetsImpl.b.countSet47)
  val plan393947 = CountPlan(index = 393947, planInfo = "aifa", set = CountSetsImpl.b.countSet47)
  val plan393946 = CountPlan(index = 393946, planInfo = "aies", set = CountSetsImpl.b.countSet47)
  val plan393945 = CountPlan(index = 393945, planInfo = "aier", set = CountSetsImpl.b.countSet47)
  val plan393944 = CountPlan(index = 393944, planInfo = "aieq", set = CountSetsImpl.b.countSet47)
  val plan393943 = CountPlan(index = 393943, planInfo = "aiep", set = CountSetsImpl.b.countSet47)
  val plan393942 = CountPlan(index = 393942, planInfo = "aieo", set = CountSetsImpl.b.countSet47)
  val plan393941 = CountPlan(index = 393941, planInfo = "aien", set = CountSetsImpl.b.countSet47)
  val plan393940 = CountPlan(index = 393940, planInfo = "aiem", set = CountSetsImpl.b.countSet47)
  val plan393939 = CountPlan(index = 393939, planInfo = "aiel", set = CountSetsImpl.b.countSet47)
  val plan393938 = CountPlan(index = 393938, planInfo = "aiek", set = CountSetsImpl.b.countSet47)
  val plan393937 = CountPlan(index = 393937, planInfo = "aiej", set = CountSetsImpl.b.countSet47)
  val plan393936 = CountPlan(index = 393936, planInfo = "aiei", set = CountSetsImpl.b.countSet47)
  val plan393935 = CountPlan(index = 393935, planInfo = "aieh", set = CountSetsImpl.b.countSet47)
  val plan393934 = CountPlan(index = 393934, planInfo = "aieg", set = CountSetsImpl.b.countSet47)
  val plan393933 = CountPlan(index = 393933, planInfo = "aief", set = CountSetsImpl.b.countSet47)
  val plan393932 = CountPlan(index = 393932, planInfo = "aiee", set = CountSetsImpl.b.countSet47)
  val plan393931 = CountPlan(index = 393931, planInfo = "aied", set = CountSetsImpl.b.countSet47)
  val plan393930 = CountPlan(index = 393930, planInfo = "aiec", set = CountSetsImpl.b.countSet47)
  val plan393929 = CountPlan(index = 393929, planInfo = "aieb", set = CountSetsImpl.b.countSet47)
  val plan393928 = CountPlan(index = 393928, planInfo = "aiea", set = CountSetsImpl.b.countSet47)
  val plan393927 = CountPlan(index = 393927, planInfo = "aids", set = CountSetsImpl.b.countSet47)
  val plan393926 = CountPlan(index = 393926, planInfo = "aidr", set = CountSetsImpl.b.countSet47)
  val plan393925 = CountPlan(index = 393925, planInfo = "aidq", set = CountSetsImpl.b.countSet47)
  val plan393924 = CountPlan(index = 393924, planInfo = "aidp", set = CountSetsImpl.b.countSet47)
  val plan393923 = CountPlan(index = 393923, planInfo = "aido", set = CountSetsImpl.b.countSet47)
  val plan393922 = CountPlan(index = 393922, planInfo = "aidn", set = CountSetsImpl.b.countSet47)
  val plan393921 = CountPlan(index = 393921, planInfo = "aidm", set = CountSetsImpl.b.countSet47)
  val plan393920 = CountPlan(index = 393920, planInfo = "aidl", set = CountSetsImpl.b.countSet47)
  val plan393919 = CountPlan(index = 393919, planInfo = "aidk", set = CountSetsImpl.b.countSet47)
  val plan393918 = CountPlan(index = 393918, planInfo = "aidj", set = CountSetsImpl.b.countSet47)
  val plan393917 = CountPlan(index = 393917, planInfo = "aidi", set = CountSetsImpl.b.countSet47)
  val plan393916 = CountPlan(index = 393916, planInfo = "aidh", set = CountSetsImpl.b.countSet47)
  val plan393915 = CountPlan(index = 393915, planInfo = "aidg", set = CountSetsImpl.b.countSet47)
  val plan393914 = CountPlan(index = 393914, planInfo = "aidf", set = CountSetsImpl.b.countSet47)
  val plan393913 = CountPlan(index = 393913, planInfo = "aide", set = CountSetsImpl.b.countSet47)
  val plan393912 = CountPlan(index = 393912, planInfo = "aidd", set = CountSetsImpl.b.countSet47)
  val plan393911 = CountPlan(index = 393911, planInfo = "aidc", set = CountSetsImpl.b.countSet47)
  val plan393910 = CountPlan(index = 393910, planInfo = "aidb", set = CountSetsImpl.b.countSet47)
  val plan393909 = CountPlan(index = 393909, planInfo = "aida", set = CountSetsImpl.b.countSet47)
  val plan393908 = CountPlan(index = 393908, planInfo = "aics", set = CountSetsImpl.b.countSet47)
  val plan393907 = CountPlan(index = 393907, planInfo = "aicr", set = CountSetsImpl.b.countSet47)
  val plan393906 = CountPlan(index = 393906, planInfo = "aicq", set = CountSetsImpl.b.countSet47)
  val plan393905 = CountPlan(index = 393905, planInfo = "aicp", set = CountSetsImpl.b.countSet47)
  val plan393904 = CountPlan(index = 393904, planInfo = "aico", set = CountSetsImpl.b.countSet47)
  val plan393903 = CountPlan(index = 393903, planInfo = "aicn", set = CountSetsImpl.b.countSet47)
  val plan393902 = CountPlan(index = 393902, planInfo = "aicm", set = CountSetsImpl.b.countSet47)
  val plan393901 = CountPlan(index = 393901, planInfo = "aicl", set = CountSetsImpl.b.countSet47)
  val plan393900 = CountPlan(index = 393900, planInfo = "aick", set = CountSetsImpl.b.countSet47)
  val plan393899 = CountPlan(index = 393899, planInfo = "aicj", set = CountSetsImpl.b.countSet47)
  val plan393898 = CountPlan(index = 393898, planInfo = "aici", set = CountSetsImpl.b.countSet47)
  val plan393897 = CountPlan(index = 393897, planInfo = "aich", set = CountSetsImpl.b.countSet47)
  val plan393896 = CountPlan(index = 393896, planInfo = "aicg", set = CountSetsImpl.b.countSet47)
  val plan393895 = CountPlan(index = 393895, planInfo = "aicf", set = CountSetsImpl.b.countSet47)
  val plan393894 = CountPlan(index = 393894, planInfo = "aice", set = CountSetsImpl.b.countSet47)
  val plan393893 = CountPlan(index = 393893, planInfo = "aicd", set = CountSetsImpl.b.countSet47)
  val plan393892 = CountPlan(index = 393892, planInfo = "aicc", set = CountSetsImpl.b.countSet47)
  val plan393891 = CountPlan(index = 393891, planInfo = "aicb", set = CountSetsImpl.b.countSet47)
  val plan393890 = CountPlan(index = 393890, planInfo = "aica", set = CountSetsImpl.b.countSet47)
  val plan393889 = CountPlan(index = 393889, planInfo = "aibs", set = CountSetsImpl.b.countSet47)
  val plan393888 = CountPlan(index = 393888, planInfo = "aibr", set = CountSetsImpl.b.countSet47)
  val plan393887 = CountPlan(index = 393887, planInfo = "aibq", set = CountSetsImpl.b.countSet47)
  val plan393886 = CountPlan(index = 393886, planInfo = "aibp", set = CountSetsImpl.b.countSet47)
  val plan393885 = CountPlan(index = 393885, planInfo = "aibo", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan393984,plan393983,plan393982,plan393981,plan393980,plan393979,plan393978,plan393977,plan393976,plan393975,plan393974,plan393973,plan393972,plan393971,plan393970,plan393969,plan393968,plan393967,plan393966,plan393965,plan393964,plan393963,plan393962,plan393961,plan393960,plan393959,plan393958,plan393957,plan393956,plan393955,plan393954,plan393953,plan393952,plan393951,plan393950,plan393949,plan393948,plan393947,plan393946,plan393945,plan393944,plan393943,plan393942,plan393941,plan393940,plan393939,plan393938,plan393937,plan393936,plan393935,plan393934,plan393933,plan393932,plan393931,plan393930,plan393929,plan393928,plan393927,plan393926,plan393925,plan393924,plan393923,plan393922,plan393921,plan393920,plan393919,plan393918,plan393917,plan393916,plan393915,plan393914,plan393913,plan393912,plan393911,plan393910,plan393909,plan393908,plan393907,plan393906,plan393905,plan393904,plan393903,plan393902,plan393901,plan393900,plan393899,plan393898,plan393897,plan393896,plan393895,plan393894,plan393893,plan393892,plan393891,plan393890,plan393889,plan393888,plan393887,plan393886,plan393885)
}
