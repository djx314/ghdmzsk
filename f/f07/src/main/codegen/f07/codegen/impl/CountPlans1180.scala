package f07.codegen.impl
import f07._
object CountPlans1180 {
  val plan403284 = CountPlan(index = 403284, planInfo = "bpci", set = CountSetsImpl.b.countSet59)
  val plan403283 = CountPlan(index = 403283, planInfo = "bpch", set = CountSetsImpl.b.countSet59)
  val plan403282 = CountPlan(index = 403282, planInfo = "bpcg", set = CountSetsImpl.b.countSet59)
  val plan403281 = CountPlan(index = 403281, planInfo = "bpcf", set = CountSetsImpl.b.countSet59)
  val plan403280 = CountPlan(index = 403280, planInfo = "bpce", set = CountSetsImpl.b.countSet59)
  val plan403279 = CountPlan(index = 403279, planInfo = "bpcd", set = CountSetsImpl.b.countSet59)
  val plan403278 = CountPlan(index = 403278, planInfo = "bpcc", set = CountSetsImpl.b.countSet59)
  val plan403277 = CountPlan(index = 403277, planInfo = "bpcb", set = CountSetsImpl.b.countSet59)
  val plan403276 = CountPlan(index = 403276, planInfo = "bpca", set = CountSetsImpl.b.countSet59)
  val plan403275 = CountPlan(index = 403275, planInfo = "bpbs", set = CountSetsImpl.b.countSet59)
  val plan403274 = CountPlan(index = 403274, planInfo = "bpbr", set = CountSetsImpl.b.countSet59)
  val plan403273 = CountPlan(index = 403273, planInfo = "bpbq", set = CountSetsImpl.b.countSet59)
  val plan403272 = CountPlan(index = 403272, planInfo = "bpbp", set = CountSetsImpl.b.countSet59)
  val plan403271 = CountPlan(index = 403271, planInfo = "bpbo", set = CountSetsImpl.b.countSet59)
  val plan403270 = CountPlan(index = 403270, planInfo = "bpbn", set = CountSetsImpl.b.countSet59)
  val plan403269 = CountPlan(index = 403269, planInfo = "bpbm", set = CountSetsImpl.b.countSet59)
  val plan403268 = CountPlan(index = 403268, planInfo = "bpbl", set = CountSetsImpl.b.countSet59)
  val plan403267 = CountPlan(index = 403267, planInfo = "bpbk", set = CountSetsImpl.b.countSet59)
  val plan403266 = CountPlan(index = 403266, planInfo = "bpbj", set = CountSetsImpl.b.countSet59)
  val plan403265 = CountPlan(index = 403265, planInfo = "bpbi", set = CountSetsImpl.b.countSet59)
  val plan403264 = CountPlan(index = 403264, planInfo = "bpbh", set = CountSetsImpl.b.countSet59)
  val plan403263 = CountPlan(index = 403263, planInfo = "bpbg", set = CountSetsImpl.b.countSet59)
  val plan403262 = CountPlan(index = 403262, planInfo = "bpbf", set = CountSetsImpl.b.countSet59)
  val plan403261 = CountPlan(index = 403261, planInfo = "bpbe", set = CountSetsImpl.b.countSet59)
  val plan403260 = CountPlan(index = 403260, planInfo = "bpbd", set = CountSetsImpl.b.countSet59)
  val plan403259 = CountPlan(index = 403259, planInfo = "bpbc", set = CountSetsImpl.b.countSet59)
  val plan403258 = CountPlan(index = 403258, planInfo = "bpbb", set = CountSetsImpl.b.countSet59)
  val plan403257 = CountPlan(index = 403257, planInfo = "bpba", set = CountSetsImpl.b.countSet59)
  val plan403256 = CountPlan(index = 403256, planInfo = "bpas", set = CountSetsImpl.b.countSet59)
  val plan403255 = CountPlan(index = 403255, planInfo = "bpar", set = CountSetsImpl.b.countSet59)
  val plan403254 = CountPlan(index = 403254, planInfo = "bpaq", set = CountSetsImpl.b.countSet59)
  val plan403253 = CountPlan(index = 403253, planInfo = "bpap", set = CountSetsImpl.b.countSet59)
  val plan403252 = CountPlan(index = 403252, planInfo = "bpao", set = CountSetsImpl.b.countSet59)
  val plan403251 = CountPlan(index = 403251, planInfo = "bpan", set = CountSetsImpl.b.countSet59)
  val plan403250 = CountPlan(index = 403250, planInfo = "bpam", set = CountSetsImpl.b.countSet59)
  val plan403249 = CountPlan(index = 403249, planInfo = "bpal", set = CountSetsImpl.b.countSet59)
  val plan403248 = CountPlan(index = 403248, planInfo = "bpak", set = CountSetsImpl.b.countSet59)
  val plan403247 = CountPlan(index = 403247, planInfo = "bpaj", set = CountSetsImpl.b.countSet59)
  val plan403246 = CountPlan(index = 403246, planInfo = "bpai", set = CountSetsImpl.b.countSet59)
  val plan403245 = CountPlan(index = 403245, planInfo = "bpah", set = CountSetsImpl.b.countSet59)
  val plan403244 = CountPlan(index = 403244, planInfo = "bpag", set = CountSetsImpl.b.countSet59)
  val plan403243 = CountPlan(index = 403243, planInfo = "bpaf", set = CountSetsImpl.b.countSet59)
  val plan403242 = CountPlan(index = 403242, planInfo = "bpae", set = CountSetsImpl.b.countSet59)
  val plan403241 = CountPlan(index = 403241, planInfo = "bpad", set = CountSetsImpl.b.countSet59)
  val plan403240 = CountPlan(index = 403240, planInfo = "bpac", set = CountSetsImpl.b.countSet59)
  val plan403239 = CountPlan(index = 403239, planInfo = "bpab", set = CountSetsImpl.b.countSet59)
  val plan403238 = CountPlan(index = 403238, planInfo = "bpaa", set = CountSetsImpl.b.countSet59)
  val plan403237 = CountPlan(index = 403237, planInfo = "boss", set = CountSetsImpl.b.countSet59)
  val plan403236 = CountPlan(index = 403236, planInfo = "bosr", set = CountSetsImpl.b.countSet59)
  val plan403235 = CountPlan(index = 403235, planInfo = "bosq", set = CountSetsImpl.b.countSet59)
  val plan403234 = CountPlan(index = 403234, planInfo = "bosp", set = CountSetsImpl.b.countSet59)
  val plan403233 = CountPlan(index = 403233, planInfo = "boso", set = CountSetsImpl.b.countSet59)
  val plan403232 = CountPlan(index = 403232, planInfo = "bosn", set = CountSetsImpl.b.countSet59)
  val plan403231 = CountPlan(index = 403231, planInfo = "bosm", set = CountSetsImpl.b.countSet59)
  val plan403230 = CountPlan(index = 403230, planInfo = "bosl", set = CountSetsImpl.b.countSet59)
  val plan403229 = CountPlan(index = 403229, planInfo = "bosk", set = CountSetsImpl.b.countSet59)
  val plan403228 = CountPlan(index = 403228, planInfo = "bosj", set = CountSetsImpl.b.countSet59)
  val plan403227 = CountPlan(index = 403227, planInfo = "bosi", set = CountSetsImpl.b.countSet59)
  val plan403226 = CountPlan(index = 403226, planInfo = "bosh", set = CountSetsImpl.b.countSet59)
  val plan403225 = CountPlan(index = 403225, planInfo = "bosg", set = CountSetsImpl.b.countSet59)
  val plan403224 = CountPlan(index = 403224, planInfo = "bosf", set = CountSetsImpl.b.countSet59)
  val plan403223 = CountPlan(index = 403223, planInfo = "bose", set = CountSetsImpl.b.countSet59)
  val plan403222 = CountPlan(index = 403222, planInfo = "bosd", set = CountSetsImpl.b.countSet59)
  val plan403221 = CountPlan(index = 403221, planInfo = "bosc", set = CountSetsImpl.b.countSet59)
  val plan403220 = CountPlan(index = 403220, planInfo = "bosb", set = CountSetsImpl.b.countSet59)
  val plan403219 = CountPlan(index = 403219, planInfo = "bosa", set = CountSetsImpl.b.countSet59)
  val plan403218 = CountPlan(index = 403218, planInfo = "bors", set = CountSetsImpl.b.countSet59)
  val plan403217 = CountPlan(index = 403217, planInfo = "borr", set = CountSetsImpl.b.countSet59)
  val plan403216 = CountPlan(index = 403216, planInfo = "borq", set = CountSetsImpl.b.countSet59)
  val plan403215 = CountPlan(index = 403215, planInfo = "borp", set = CountSetsImpl.b.countSet59)
  val plan403214 = CountPlan(index = 403214, planInfo = "boro", set = CountSetsImpl.b.countSet59)
  val plan403213 = CountPlan(index = 403213, planInfo = "born", set = CountSetsImpl.b.countSet59)
  val plan403212 = CountPlan(index = 403212, planInfo = "borm", set = CountSetsImpl.b.countSet59)
  val plan403211 = CountPlan(index = 403211, planInfo = "borl", set = CountSetsImpl.b.countSet59)
  val plan403210 = CountPlan(index = 403210, planInfo = "bork", set = CountSetsImpl.b.countSet59)
  val plan403209 = CountPlan(index = 403209, planInfo = "borj", set = CountSetsImpl.b.countSet59)
  val plan403208 = CountPlan(index = 403208, planInfo = "bori", set = CountSetsImpl.b.countSet59)
  val plan403207 = CountPlan(index = 403207, planInfo = "borh", set = CountSetsImpl.b.countSet59)
  val plan403206 = CountPlan(index = 403206, planInfo = "borg", set = CountSetsImpl.b.countSet59)
  val plan403205 = CountPlan(index = 403205, planInfo = "borf", set = CountSetsImpl.b.countSet59)
  val plan403204 = CountPlan(index = 403204, planInfo = "bore", set = CountSetsImpl.b.countSet59)
  val plan403203 = CountPlan(index = 403203, planInfo = "bord", set = CountSetsImpl.b.countSet59)
  val plan403202 = CountPlan(index = 403202, planInfo = "borc", set = CountSetsImpl.b.countSet59)
  val plan403201 = CountPlan(index = 403201, planInfo = "borb", set = CountSetsImpl.b.countSet59)
  val plan403200 = CountPlan(index = 403200, planInfo = "bora", set = CountSetsImpl.b.countSet59)
  val plan403199 = CountPlan(index = 403199, planInfo = "boqs", set = CountSetsImpl.b.countSet59)
  val plan403198 = CountPlan(index = 403198, planInfo = "boqr", set = CountSetsImpl.b.countSet59)
  val plan403197 = CountPlan(index = 403197, planInfo = "boqq", set = CountSetsImpl.b.countSet59)
  val plan403196 = CountPlan(index = 403196, planInfo = "boqp", set = CountSetsImpl.b.countSet59)
  val plan403195 = CountPlan(index = 403195, planInfo = "boqo", set = CountSetsImpl.b.countSet59)
  val plan403194 = CountPlan(index = 403194, planInfo = "boqn", set = CountSetsImpl.b.countSet59)
  val plan403193 = CountPlan(index = 403193, planInfo = "boqm", set = CountSetsImpl.b.countSet59)
  val plan403192 = CountPlan(index = 403192, planInfo = "boql", set = CountSetsImpl.b.countSet59)
  val plan403191 = CountPlan(index = 403191, planInfo = "boqk", set = CountSetsImpl.b.countSet59)
  val plan403190 = CountPlan(index = 403190, planInfo = "boqj", set = CountSetsImpl.b.countSet59)
  val plan403189 = CountPlan(index = 403189, planInfo = "boqi", set = CountSetsImpl.b.countSet59)
  val plan403188 = CountPlan(index = 403188, planInfo = "boqh", set = CountSetsImpl.b.countSet59)
  val plan403187 = CountPlan(index = 403187, planInfo = "boqg", set = CountSetsImpl.b.countSet59)
  val plan403186 = CountPlan(index = 403186, planInfo = "boqf", set = CountSetsImpl.b.countSet59)
  val plan403185 = CountPlan(index = 403185, planInfo = "boqe", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan403284,plan403283,plan403282,plan403281,plan403280,plan403279,plan403278,plan403277,plan403276,plan403275,plan403274,plan403273,plan403272,plan403271,plan403270,plan403269,plan403268,plan403267,plan403266,plan403265,plan403264,plan403263,plan403262,plan403261,plan403260,plan403259,plan403258,plan403257,plan403256,plan403255,plan403254,plan403253,plan403252,plan403251,plan403250,plan403249,plan403248,plan403247,plan403246,plan403245,plan403244,plan403243,plan403242,plan403241,plan403240,plan403239,plan403238,plan403237,plan403236,plan403235,plan403234,plan403233,plan403232,plan403231,plan403230,plan403229,plan403228,plan403227,plan403226,plan403225,plan403224,plan403223,plan403222,plan403221,plan403220,plan403219,plan403218,plan403217,plan403216,plan403215,plan403214,plan403213,plan403212,plan403211,plan403210,plan403209,plan403208,plan403207,plan403206,plan403205,plan403204,plan403203,plan403202,plan403201,plan403200,plan403199,plan403198,plan403197,plan403196,plan403195,plan403194,plan403193,plan403192,plan403191,plan403190,plan403189,plan403188,plan403187,plan403186,plan403185)
}
