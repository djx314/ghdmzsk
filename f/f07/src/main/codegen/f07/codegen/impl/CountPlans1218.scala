package f07.codegen.impl
import f07._
object CountPlans1218 {
  val plan399484 = CountPlan(index = 399484, planInfo = "beli", set = CountSetsImpl.b.countSet59)
  val plan399483 = CountPlan(index = 399483, planInfo = "belh", set = CountSetsImpl.b.countSet59)
  val plan399482 = CountPlan(index = 399482, planInfo = "belg", set = CountSetsImpl.b.countSet59)
  val plan399481 = CountPlan(index = 399481, planInfo = "belf", set = CountSetsImpl.b.countSet59)
  val plan399480 = CountPlan(index = 399480, planInfo = "bele", set = CountSetsImpl.b.countSet59)
  val plan399479 = CountPlan(index = 399479, planInfo = "beld", set = CountSetsImpl.b.countSet59)
  val plan399478 = CountPlan(index = 399478, planInfo = "belc", set = CountSetsImpl.b.countSet59)
  val plan399477 = CountPlan(index = 399477, planInfo = "belb", set = CountSetsImpl.b.countSet59)
  val plan399476 = CountPlan(index = 399476, planInfo = "bela", set = CountSetsImpl.b.countSet59)
  val plan399475 = CountPlan(index = 399475, planInfo = "beks", set = CountSetsImpl.b.countSet59)
  val plan399474 = CountPlan(index = 399474, planInfo = "bekr", set = CountSetsImpl.b.countSet59)
  val plan399473 = CountPlan(index = 399473, planInfo = "bekq", set = CountSetsImpl.b.countSet59)
  val plan399472 = CountPlan(index = 399472, planInfo = "bekp", set = CountSetsImpl.b.countSet59)
  val plan399471 = CountPlan(index = 399471, planInfo = "beko", set = CountSetsImpl.b.countSet59)
  val plan399470 = CountPlan(index = 399470, planInfo = "bekn", set = CountSetsImpl.b.countSet59)
  val plan399469 = CountPlan(index = 399469, planInfo = "bekm", set = CountSetsImpl.b.countSet59)
  val plan399468 = CountPlan(index = 399468, planInfo = "bekl", set = CountSetsImpl.b.countSet59)
  val plan399467 = CountPlan(index = 399467, planInfo = "bekk", set = CountSetsImpl.b.countSet59)
  val plan399466 = CountPlan(index = 399466, planInfo = "bekj", set = CountSetsImpl.b.countSet59)
  val plan399465 = CountPlan(index = 399465, planInfo = "beki", set = CountSetsImpl.b.countSet59)
  val plan399464 = CountPlan(index = 399464, planInfo = "bekh", set = CountSetsImpl.b.countSet59)
  val plan399463 = CountPlan(index = 399463, planInfo = "bekg", set = CountSetsImpl.b.countSet59)
  val plan399462 = CountPlan(index = 399462, planInfo = "bekf", set = CountSetsImpl.b.countSet59)
  val plan399461 = CountPlan(index = 399461, planInfo = "beke", set = CountSetsImpl.b.countSet59)
  val plan399460 = CountPlan(index = 399460, planInfo = "bekd", set = CountSetsImpl.b.countSet59)
  val plan399459 = CountPlan(index = 399459, planInfo = "bekc", set = CountSetsImpl.b.countSet59)
  val plan399458 = CountPlan(index = 399458, planInfo = "bekb", set = CountSetsImpl.b.countSet59)
  val plan399457 = CountPlan(index = 399457, planInfo = "beka", set = CountSetsImpl.b.countSet59)
  val plan399456 = CountPlan(index = 399456, planInfo = "bejs", set = CountSetsImpl.b.countSet59)
  val plan399455 = CountPlan(index = 399455, planInfo = "bejr", set = CountSetsImpl.b.countSet59)
  val plan399454 = CountPlan(index = 399454, planInfo = "bejq", set = CountSetsImpl.b.countSet59)
  val plan399453 = CountPlan(index = 399453, planInfo = "bejp", set = CountSetsImpl.b.countSet59)
  val plan399452 = CountPlan(index = 399452, planInfo = "bejo", set = CountSetsImpl.b.countSet59)
  val plan399451 = CountPlan(index = 399451, planInfo = "bejn", set = CountSetsImpl.b.countSet59)
  val plan399450 = CountPlan(index = 399450, planInfo = "bejm", set = CountSetsImpl.b.countSet59)
  val plan399449 = CountPlan(index = 399449, planInfo = "bejl", set = CountSetsImpl.b.countSet59)
  val plan399448 = CountPlan(index = 399448, planInfo = "bejk", set = CountSetsImpl.b.countSet59)
  val plan399447 = CountPlan(index = 399447, planInfo = "bejj", set = CountSetsImpl.b.countSet59)
  val plan399446 = CountPlan(index = 399446, planInfo = "beji", set = CountSetsImpl.b.countSet59)
  val plan399445 = CountPlan(index = 399445, planInfo = "bejh", set = CountSetsImpl.b.countSet59)
  val plan399444 = CountPlan(index = 399444, planInfo = "bejg", set = CountSetsImpl.b.countSet59)
  val plan399443 = CountPlan(index = 399443, planInfo = "bejf", set = CountSetsImpl.b.countSet59)
  val plan399442 = CountPlan(index = 399442, planInfo = "beje", set = CountSetsImpl.b.countSet59)
  val plan399441 = CountPlan(index = 399441, planInfo = "bejd", set = CountSetsImpl.b.countSet59)
  val plan399440 = CountPlan(index = 399440, planInfo = "bejc", set = CountSetsImpl.b.countSet59)
  val plan399439 = CountPlan(index = 399439, planInfo = "bejb", set = CountSetsImpl.b.countSet59)
  val plan399438 = CountPlan(index = 399438, planInfo = "beja", set = CountSetsImpl.b.countSet59)
  val plan399437 = CountPlan(index = 399437, planInfo = "beis", set = CountSetsImpl.b.countSet59)
  val plan399436 = CountPlan(index = 399436, planInfo = "beir", set = CountSetsImpl.b.countSet59)
  val plan399435 = CountPlan(index = 399435, planInfo = "beiq", set = CountSetsImpl.b.countSet59)
  val plan399434 = CountPlan(index = 399434, planInfo = "beip", set = CountSetsImpl.b.countSet59)
  val plan399433 = CountPlan(index = 399433, planInfo = "beio", set = CountSetsImpl.b.countSet59)
  val plan399432 = CountPlan(index = 399432, planInfo = "bein", set = CountSetsImpl.b.countSet59)
  val plan399431 = CountPlan(index = 399431, planInfo = "beim", set = CountSetsImpl.b.countSet59)
  val plan399430 = CountPlan(index = 399430, planInfo = "beil", set = CountSetsImpl.b.countSet59)
  val plan399429 = CountPlan(index = 399429, planInfo = "beik", set = CountSetsImpl.b.countSet59)
  val plan399428 = CountPlan(index = 399428, planInfo = "beij", set = CountSetsImpl.b.countSet59)
  val plan399427 = CountPlan(index = 399427, planInfo = "beii", set = CountSetsImpl.b.countSet59)
  val plan399426 = CountPlan(index = 399426, planInfo = "beih", set = CountSetsImpl.b.countSet59)
  val plan399425 = CountPlan(index = 399425, planInfo = "beig", set = CountSetsImpl.b.countSet59)
  val plan399424 = CountPlan(index = 399424, planInfo = "beif", set = CountSetsImpl.b.countSet59)
  val plan399423 = CountPlan(index = 399423, planInfo = "beie", set = CountSetsImpl.b.countSet59)
  val plan399422 = CountPlan(index = 399422, planInfo = "beid", set = CountSetsImpl.b.countSet59)
  val plan399421 = CountPlan(index = 399421, planInfo = "beic", set = CountSetsImpl.b.countSet59)
  val plan399420 = CountPlan(index = 399420, planInfo = "beib", set = CountSetsImpl.b.countSet59)
  val plan399419 = CountPlan(index = 399419, planInfo = "beia", set = CountSetsImpl.b.countSet59)
  val plan399418 = CountPlan(index = 399418, planInfo = "behs", set = CountSetsImpl.b.countSet59)
  val plan399417 = CountPlan(index = 399417, planInfo = "behr", set = CountSetsImpl.b.countSet59)
  val plan399416 = CountPlan(index = 399416, planInfo = "behq", set = CountSetsImpl.b.countSet59)
  val plan399415 = CountPlan(index = 399415, planInfo = "behp", set = CountSetsImpl.b.countSet59)
  val plan399414 = CountPlan(index = 399414, planInfo = "beho", set = CountSetsImpl.b.countSet59)
  val plan399413 = CountPlan(index = 399413, planInfo = "behn", set = CountSetsImpl.b.countSet59)
  val plan399412 = CountPlan(index = 399412, planInfo = "behm", set = CountSetsImpl.b.countSet59)
  val plan399411 = CountPlan(index = 399411, planInfo = "behl", set = CountSetsImpl.b.countSet59)
  val plan399410 = CountPlan(index = 399410, planInfo = "behk", set = CountSetsImpl.b.countSet59)
  val plan399409 = CountPlan(index = 399409, planInfo = "behj", set = CountSetsImpl.b.countSet59)
  val plan399408 = CountPlan(index = 399408, planInfo = "behi", set = CountSetsImpl.b.countSet59)
  val plan399407 = CountPlan(index = 399407, planInfo = "behh", set = CountSetsImpl.b.countSet59)
  val plan399406 = CountPlan(index = 399406, planInfo = "behg", set = CountSetsImpl.b.countSet59)
  val plan399405 = CountPlan(index = 399405, planInfo = "behf", set = CountSetsImpl.b.countSet59)
  val plan399404 = CountPlan(index = 399404, planInfo = "behe", set = CountSetsImpl.b.countSet59)
  val plan399403 = CountPlan(index = 399403, planInfo = "behd", set = CountSetsImpl.b.countSet59)
  val plan399402 = CountPlan(index = 399402, planInfo = "behc", set = CountSetsImpl.b.countSet59)
  val plan399401 = CountPlan(index = 399401, planInfo = "behb", set = CountSetsImpl.b.countSet59)
  val plan399400 = CountPlan(index = 399400, planInfo = "beha", set = CountSetsImpl.b.countSet59)
  val plan399399 = CountPlan(index = 399399, planInfo = "begs", set = CountSetsImpl.b.countSet59)
  val plan399398 = CountPlan(index = 399398, planInfo = "begr", set = CountSetsImpl.b.countSet59)
  val plan399397 = CountPlan(index = 399397, planInfo = "begq", set = CountSetsImpl.b.countSet59)
  val plan399396 = CountPlan(index = 399396, planInfo = "begp", set = CountSetsImpl.b.countSet59)
  val plan399395 = CountPlan(index = 399395, planInfo = "bego", set = CountSetsImpl.b.countSet59)
  val plan399394 = CountPlan(index = 399394, planInfo = "begn", set = CountSetsImpl.b.countSet59)
  val plan399393 = CountPlan(index = 399393, planInfo = "begm", set = CountSetsImpl.b.countSet59)
  val plan399392 = CountPlan(index = 399392, planInfo = "begl", set = CountSetsImpl.b.countSet59)
  val plan399391 = CountPlan(index = 399391, planInfo = "begk", set = CountSetsImpl.b.countSet59)
  val plan399390 = CountPlan(index = 399390, planInfo = "begj", set = CountSetsImpl.b.countSet59)
  val plan399389 = CountPlan(index = 399389, planInfo = "begi", set = CountSetsImpl.b.countSet59)
  val plan399388 = CountPlan(index = 399388, planInfo = "begh", set = CountSetsImpl.b.countSet59)
  val plan399387 = CountPlan(index = 399387, planInfo = "begg", set = CountSetsImpl.b.countSet59)
  val plan399386 = CountPlan(index = 399386, planInfo = "begf", set = CountSetsImpl.b.countSet59)
  val plan399385 = CountPlan(index = 399385, planInfo = "bege", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan399484,plan399483,plan399482,plan399481,plan399480,plan399479,plan399478,plan399477,plan399476,plan399475,plan399474,plan399473,plan399472,plan399471,plan399470,plan399469,plan399468,plan399467,plan399466,plan399465,plan399464,plan399463,plan399462,plan399461,plan399460,plan399459,plan399458,plan399457,plan399456,plan399455,plan399454,plan399453,plan399452,plan399451,plan399450,plan399449,plan399448,plan399447,plan399446,plan399445,plan399444,plan399443,plan399442,plan399441,plan399440,plan399439,plan399438,plan399437,plan399436,plan399435,plan399434,plan399433,plan399432,plan399431,plan399430,plan399429,plan399428,plan399427,plan399426,plan399425,plan399424,plan399423,plan399422,plan399421,plan399420,plan399419,plan399418,plan399417,plan399416,plan399415,plan399414,plan399413,plan399412,plan399411,plan399410,plan399409,plan399408,plan399407,plan399406,plan399405,plan399404,plan399403,plan399402,plan399401,plan399400,plan399399,plan399398,plan399397,plan399396,plan399395,plan399394,plan399393,plan399392,plan399391,plan399390,plan399389,plan399388,plan399387,plan399386,plan399385)
}
