package f07.codegen.impl
import f07._
object CountPlans1045 {
  val plan416784 = CountPlan(index = 416784, planInfo = "dojs", set = CountSetsImpl.b.countSet60)
  val plan416783 = CountPlan(index = 416783, planInfo = "dojr", set = CountSetsImpl.b.countSet48)
  val plan416782 = CountPlan(index = 416782, planInfo = "dojq", set = CountSetsImpl.b.countSet48)
  val plan416781 = CountPlan(index = 416781, planInfo = "dojp", set = CountSetsImpl.b.countSet56)
  val plan416780 = CountPlan(index = 416780, planInfo = "dojo", set = CountSetsImpl.b.countSet48)
  val plan416779 = CountPlan(index = 416779, planInfo = "dojn", set = CountSetsImpl.b.countSet48)
  val plan416778 = CountPlan(index = 416778, planInfo = "dojm", set = CountSetsImpl.b.countSet56)
  val plan416777 = CountPlan(index = 416777, planInfo = "dojl", set = CountSetsImpl.b.countSet48)
  val plan416776 = CountPlan(index = 416776, planInfo = "dojk", set = CountSetsImpl.b.countSet48)
  val plan416775 = CountPlan(index = 416775, planInfo = "dojj", set = CountSetsImpl.b.countSet56)
  val plan416774 = CountPlan(index = 416774, planInfo = "doji", set = CountSetsImpl.b.countSet48)
  val plan416773 = CountPlan(index = 416773, planInfo = "dojh", set = CountSetsImpl.b.countSet48)
  val plan416772 = CountPlan(index = 416772, planInfo = "dojg", set = CountSetsImpl.b.countSet56)
  val plan416771 = CountPlan(index = 416771, planInfo = "dojf", set = CountSetsImpl.b.countSet60)
  val plan416770 = CountPlan(index = 416770, planInfo = "doje", set = CountSetsImpl.b.countSet60)
  val plan416769 = CountPlan(index = 416769, planInfo = "dojd", set = CountSetsImpl.b.countSet60)
  val plan416768 = CountPlan(index = 416768, planInfo = "dojc", set = CountSetsImpl.b.countSet60)
  val plan416767 = CountPlan(index = 416767, planInfo = "dojb", set = CountSetsImpl.b.countSet60)
  val plan416766 = CountPlan(index = 416766, planInfo = "doja", set = CountSetsImpl.b.countSet60)
  val plan416765 = CountPlan(index = 416765, planInfo = "dois", set = CountSetsImpl.b.countSet48)
  val plan416764 = CountPlan(index = 416764, planInfo = "doir", set = CountSetsImpl.b.countSet48)
  val plan416763 = CountPlan(index = 416763, planInfo = "doiq", set = CountSetsImpl.b.countSet48)
  val plan416762 = CountPlan(index = 416762, planInfo = "doip", set = CountSetsImpl.b.countSet48)
  val plan416761 = CountPlan(index = 416761, planInfo = "doio", set = CountSetsImpl.b.countSet48)
  val plan416760 = CountPlan(index = 416760, planInfo = "doin", set = CountSetsImpl.b.countSet48)
  val plan416759 = CountPlan(index = 416759, planInfo = "doim", set = CountSetsImpl.b.countSet48)
  val plan416758 = CountPlan(index = 416758, planInfo = "doil", set = CountSetsImpl.b.countSet48)
  val plan416757 = CountPlan(index = 416757, planInfo = "doik", set = CountSetsImpl.b.countSet48)
  val plan416756 = CountPlan(index = 416756, planInfo = "doij", set = CountSetsImpl.b.countSet48)
  val plan416755 = CountPlan(index = 416755, planInfo = "doii", set = CountSetsImpl.b.countSet48)
  val plan416754 = CountPlan(index = 416754, planInfo = "doih", set = CountSetsImpl.b.countSet48)
  val plan416753 = CountPlan(index = 416753, planInfo = "doig", set = CountSetsImpl.b.countSet48)
  val plan416752 = CountPlan(index = 416752, planInfo = "doif", set = CountSetsImpl.b.countSet48)
  val plan416751 = CountPlan(index = 416751, planInfo = "doie", set = CountSetsImpl.b.countSet48)
  val plan416750 = CountPlan(index = 416750, planInfo = "doid", set = CountSetsImpl.b.countSet48)
  val plan416749 = CountPlan(index = 416749, planInfo = "doic", set = CountSetsImpl.b.countSet48)
  val plan416748 = CountPlan(index = 416748, planInfo = "doib", set = CountSetsImpl.b.countSet48)
  val plan416747 = CountPlan(index = 416747, planInfo = "doia", set = CountSetsImpl.b.countSet48)
  val plan416746 = CountPlan(index = 416746, planInfo = "dohs", set = CountSetsImpl.b.countSet59)
  val plan416745 = CountPlan(index = 416745, planInfo = "dohr", set = CountSetsImpl.b.countSet48)
  val plan416744 = CountPlan(index = 416744, planInfo = "dohq", set = CountSetsImpl.b.countSet48)
  val plan416743 = CountPlan(index = 416743, planInfo = "dohp", set = CountSetsImpl.b.countSet48)
  val plan416742 = CountPlan(index = 416742, planInfo = "doho", set = CountSetsImpl.b.countSet48)
  val plan416741 = CountPlan(index = 416741, planInfo = "dohn", set = CountSetsImpl.b.countSet48)
  val plan416740 = CountPlan(index = 416740, planInfo = "dohm", set = CountSetsImpl.b.countSet48)
  val plan416739 = CountPlan(index = 416739, planInfo = "dohl", set = CountSetsImpl.b.countSet48)
  val plan416738 = CountPlan(index = 416738, planInfo = "dohk", set = CountSetsImpl.b.countSet48)
  val plan416737 = CountPlan(index = 416737, planInfo = "dohj", set = CountSetsImpl.b.countSet48)
  val plan416736 = CountPlan(index = 416736, planInfo = "dohi", set = CountSetsImpl.b.countSet48)
  val plan416735 = CountPlan(index = 416735, planInfo = "dohh", set = CountSetsImpl.b.countSet48)
  val plan416734 = CountPlan(index = 416734, planInfo = "dohg", set = CountSetsImpl.b.countSet48)
  val plan416733 = CountPlan(index = 416733, planInfo = "dohf", set = CountSetsImpl.b.countSet59)
  val plan416732 = CountPlan(index = 416732, planInfo = "dohe", set = CountSetsImpl.b.countSet59)
  val plan416731 = CountPlan(index = 416731, planInfo = "dohd", set = CountSetsImpl.b.countSet59)
  val plan416730 = CountPlan(index = 416730, planInfo = "dohc", set = CountSetsImpl.b.countSet59)
  val plan416729 = CountPlan(index = 416729, planInfo = "dohb", set = CountSetsImpl.b.countSet59)
  val plan416728 = CountPlan(index = 416728, planInfo = "doha", set = CountSetsImpl.b.countSet59)
  val plan416727 = CountPlan(index = 416727, planInfo = "dogs", set = CountSetsImpl.b.countSet60)
  val plan416726 = CountPlan(index = 416726, planInfo = "dogr", set = CountSetsImpl.b.countSet48)
  val plan416725 = CountPlan(index = 416725, planInfo = "dogq", set = CountSetsImpl.b.countSet48)
  val plan416724 = CountPlan(index = 416724, planInfo = "dogp", set = CountSetsImpl.b.countSet56)
  val plan416723 = CountPlan(index = 416723, planInfo = "dogo", set = CountSetsImpl.b.countSet48)
  val plan416722 = CountPlan(index = 416722, planInfo = "dogn", set = CountSetsImpl.b.countSet48)
  val plan416721 = CountPlan(index = 416721, planInfo = "dogm", set = CountSetsImpl.b.countSet56)
  val plan416720 = CountPlan(index = 416720, planInfo = "dogl", set = CountSetsImpl.b.countSet48)
  val plan416719 = CountPlan(index = 416719, planInfo = "dogk", set = CountSetsImpl.b.countSet48)
  val plan416718 = CountPlan(index = 416718, planInfo = "dogj", set = CountSetsImpl.b.countSet56)
  val plan416717 = CountPlan(index = 416717, planInfo = "dogi", set = CountSetsImpl.b.countSet48)
  val plan416716 = CountPlan(index = 416716, planInfo = "dogh", set = CountSetsImpl.b.countSet48)
  val plan416715 = CountPlan(index = 416715, planInfo = "dogg", set = CountSetsImpl.b.countSet56)
  val plan416714 = CountPlan(index = 416714, planInfo = "dogf", set = CountSetsImpl.b.countSet60)
  val plan416713 = CountPlan(index = 416713, planInfo = "doge", set = CountSetsImpl.b.countSet60)
  val plan416712 = CountPlan(index = 416712, planInfo = "dogd", set = CountSetsImpl.b.countSet60)
  val plan416711 = CountPlan(index = 416711, planInfo = "dogc", set = CountSetsImpl.b.countSet60)
  val plan416710 = CountPlan(index = 416710, planInfo = "dogb", set = CountSetsImpl.b.countSet60)
  val plan416709 = CountPlan(index = 416709, planInfo = "doga", set = CountSetsImpl.b.countSet60)
  val plan416708 = CountPlan(index = 416708, planInfo = "dofs", set = CountSetsImpl.b.countSet47)
  val plan416707 = CountPlan(index = 416707, planInfo = "dofr", set = CountSetsImpl.b.countSet47)
  val plan416706 = CountPlan(index = 416706, planInfo = "dofq", set = CountSetsImpl.b.countSet47)
  val plan416705 = CountPlan(index = 416705, planInfo = "dofp", set = CountSetsImpl.b.countSet47)
  val plan416704 = CountPlan(index = 416704, planInfo = "dofo", set = CountSetsImpl.b.countSet47)
  val plan416703 = CountPlan(index = 416703, planInfo = "dofn", set = CountSetsImpl.b.countSet47)
  val plan416702 = CountPlan(index = 416702, planInfo = "dofm", set = CountSetsImpl.b.countSet47)
  val plan416701 = CountPlan(index = 416701, planInfo = "dofl", set = CountSetsImpl.b.countSet47)
  val plan416700 = CountPlan(index = 416700, planInfo = "dofk", set = CountSetsImpl.b.countSet47)
  val plan416699 = CountPlan(index = 416699, planInfo = "dofj", set = CountSetsImpl.b.countSet47)
  val plan416698 = CountPlan(index = 416698, planInfo = "dofi", set = CountSetsImpl.b.countSet47)
  val plan416697 = CountPlan(index = 416697, planInfo = "dofh", set = CountSetsImpl.b.countSet47)
  val plan416696 = CountPlan(index = 416696, planInfo = "dofg", set = CountSetsImpl.b.countSet47)
  val plan416695 = CountPlan(index = 416695, planInfo = "doff", set = CountSetsImpl.b.countSet47)
  val plan416694 = CountPlan(index = 416694, planInfo = "dofe", set = CountSetsImpl.b.countSet47)
  val plan416693 = CountPlan(index = 416693, planInfo = "dofd", set = CountSetsImpl.b.countSet47)
  val plan416692 = CountPlan(index = 416692, planInfo = "dofc", set = CountSetsImpl.b.countSet47)
  val plan416691 = CountPlan(index = 416691, planInfo = "dofb", set = CountSetsImpl.b.countSet47)
  val plan416690 = CountPlan(index = 416690, planInfo = "dofa", set = CountSetsImpl.b.countSet47)
  val plan416689 = CountPlan(index = 416689, planInfo = "does", set = CountSetsImpl.b.countSet47)
  val plan416688 = CountPlan(index = 416688, planInfo = "doer", set = CountSetsImpl.b.countSet47)
  val plan416687 = CountPlan(index = 416687, planInfo = "doeq", set = CountSetsImpl.b.countSet47)
  val plan416686 = CountPlan(index = 416686, planInfo = "doep", set = CountSetsImpl.b.countSet47)
  val plan416685 = CountPlan(index = 416685, planInfo = "doeo", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan416784,plan416783,plan416782,plan416781,plan416780,plan416779,plan416778,plan416777,plan416776,plan416775,plan416774,plan416773,plan416772,plan416771,plan416770,plan416769,plan416768,plan416767,plan416766,plan416765,plan416764,plan416763,plan416762,plan416761,plan416760,plan416759,plan416758,plan416757,plan416756,plan416755,plan416754,plan416753,plan416752,plan416751,plan416750,plan416749,plan416748,plan416747,plan416746,plan416745,plan416744,plan416743,plan416742,plan416741,plan416740,plan416739,plan416738,plan416737,plan416736,plan416735,plan416734,plan416733,plan416732,plan416731,plan416730,plan416729,plan416728,plan416727,plan416726,plan416725,plan416724,plan416723,plan416722,plan416721,plan416720,plan416719,plan416718,plan416717,plan416716,plan416715,plan416714,plan416713,plan416712,plan416711,plan416710,plan416709,plan416708,plan416707,plan416706,plan416705,plan416704,plan416703,plan416702,plan416701,plan416700,plan416699,plan416698,plan416697,plan416696,plan416695,plan416694,plan416693,plan416692,plan416691,plan416690,plan416689,plan416688,plan416687,plan416686,plan416685)
}
