package f07.codegen.impl
import f07._
object CountPlans1272 {
  val plan394084 = CountPlan(index = 394084, planInfo = "aime", set = CountSetsImpl.b.countSet47)
  val plan394083 = CountPlan(index = 394083, planInfo = "aimd", set = CountSetsImpl.b.countSet47)
  val plan394082 = CountPlan(index = 394082, planInfo = "aimc", set = CountSetsImpl.b.countSet47)
  val plan394081 = CountPlan(index = 394081, planInfo = "aimb", set = CountSetsImpl.b.countSet47)
  val plan394080 = CountPlan(index = 394080, planInfo = "aima", set = CountSetsImpl.b.countSet47)
  val plan394079 = CountPlan(index = 394079, planInfo = "ails", set = CountSetsImpl.b.countSet47)
  val plan394078 = CountPlan(index = 394078, planInfo = "ailr", set = CountSetsImpl.b.countSet47)
  val plan394077 = CountPlan(index = 394077, planInfo = "ailq", set = CountSetsImpl.b.countSet47)
  val plan394076 = CountPlan(index = 394076, planInfo = "ailp", set = CountSetsImpl.b.countSet47)
  val plan394075 = CountPlan(index = 394075, planInfo = "ailo", set = CountSetsImpl.b.countSet47)
  val plan394074 = CountPlan(index = 394074, planInfo = "ailn", set = CountSetsImpl.b.countSet47)
  val plan394073 = CountPlan(index = 394073, planInfo = "ailm", set = CountSetsImpl.b.countSet47)
  val plan394072 = CountPlan(index = 394072, planInfo = "aill", set = CountSetsImpl.b.countSet47)
  val plan394071 = CountPlan(index = 394071, planInfo = "ailk", set = CountSetsImpl.b.countSet47)
  val plan394070 = CountPlan(index = 394070, planInfo = "ailj", set = CountSetsImpl.b.countSet47)
  val plan394069 = CountPlan(index = 394069, planInfo = "aili", set = CountSetsImpl.b.countSet47)
  val plan394068 = CountPlan(index = 394068, planInfo = "ailh", set = CountSetsImpl.b.countSet47)
  val plan394067 = CountPlan(index = 394067, planInfo = "ailg", set = CountSetsImpl.b.countSet47)
  val plan394066 = CountPlan(index = 394066, planInfo = "ailf", set = CountSetsImpl.b.countSet47)
  val plan394065 = CountPlan(index = 394065, planInfo = "aile", set = CountSetsImpl.b.countSet47)
  val plan394064 = CountPlan(index = 394064, planInfo = "aild", set = CountSetsImpl.b.countSet47)
  val plan394063 = CountPlan(index = 394063, planInfo = "ailc", set = CountSetsImpl.b.countSet47)
  val plan394062 = CountPlan(index = 394062, planInfo = "ailb", set = CountSetsImpl.b.countSet47)
  val plan394061 = CountPlan(index = 394061, planInfo = "aila", set = CountSetsImpl.b.countSet47)
  val plan394060 = CountPlan(index = 394060, planInfo = "aiks", set = CountSetsImpl.b.countSet47)
  val plan394059 = CountPlan(index = 394059, planInfo = "aikr", set = CountSetsImpl.b.countSet47)
  val plan394058 = CountPlan(index = 394058, planInfo = "aikq", set = CountSetsImpl.b.countSet47)
  val plan394057 = CountPlan(index = 394057, planInfo = "aikp", set = CountSetsImpl.b.countSet47)
  val plan394056 = CountPlan(index = 394056, planInfo = "aiko", set = CountSetsImpl.b.countSet47)
  val plan394055 = CountPlan(index = 394055, planInfo = "aikn", set = CountSetsImpl.b.countSet47)
  val plan394054 = CountPlan(index = 394054, planInfo = "aikm", set = CountSetsImpl.b.countSet47)
  val plan394053 = CountPlan(index = 394053, planInfo = "aikl", set = CountSetsImpl.b.countSet47)
  val plan394052 = CountPlan(index = 394052, planInfo = "aikk", set = CountSetsImpl.b.countSet47)
  val plan394051 = CountPlan(index = 394051, planInfo = "aikj", set = CountSetsImpl.b.countSet47)
  val plan394050 = CountPlan(index = 394050, planInfo = "aiki", set = CountSetsImpl.b.countSet47)
  val plan394049 = CountPlan(index = 394049, planInfo = "aikh", set = CountSetsImpl.b.countSet47)
  val plan394048 = CountPlan(index = 394048, planInfo = "aikg", set = CountSetsImpl.b.countSet47)
  val plan394047 = CountPlan(index = 394047, planInfo = "aikf", set = CountSetsImpl.b.countSet47)
  val plan394046 = CountPlan(index = 394046, planInfo = "aike", set = CountSetsImpl.b.countSet47)
  val plan394045 = CountPlan(index = 394045, planInfo = "aikd", set = CountSetsImpl.b.countSet47)
  val plan394044 = CountPlan(index = 394044, planInfo = "aikc", set = CountSetsImpl.b.countSet47)
  val plan394043 = CountPlan(index = 394043, planInfo = "aikb", set = CountSetsImpl.b.countSet47)
  val plan394042 = CountPlan(index = 394042, planInfo = "aika", set = CountSetsImpl.b.countSet47)
  val plan394041 = CountPlan(index = 394041, planInfo = "aijs", set = CountSetsImpl.b.countSet47)
  val plan394040 = CountPlan(index = 394040, planInfo = "aijr", set = CountSetsImpl.b.countSet47)
  val plan394039 = CountPlan(index = 394039, planInfo = "aijq", set = CountSetsImpl.b.countSet47)
  val plan394038 = CountPlan(index = 394038, planInfo = "aijp", set = CountSetsImpl.b.countSet47)
  val plan394037 = CountPlan(index = 394037, planInfo = "aijo", set = CountSetsImpl.b.countSet47)
  val plan394036 = CountPlan(index = 394036, planInfo = "aijn", set = CountSetsImpl.b.countSet47)
  val plan394035 = CountPlan(index = 394035, planInfo = "aijm", set = CountSetsImpl.b.countSet47)
  val plan394034 = CountPlan(index = 394034, planInfo = "aijl", set = CountSetsImpl.b.countSet47)
  val plan394033 = CountPlan(index = 394033, planInfo = "aijk", set = CountSetsImpl.b.countSet47)
  val plan394032 = CountPlan(index = 394032, planInfo = "aijj", set = CountSetsImpl.b.countSet47)
  val plan394031 = CountPlan(index = 394031, planInfo = "aiji", set = CountSetsImpl.b.countSet47)
  val plan394030 = CountPlan(index = 394030, planInfo = "aijh", set = CountSetsImpl.b.countSet47)
  val plan394029 = CountPlan(index = 394029, planInfo = "aijg", set = CountSetsImpl.b.countSet47)
  val plan394028 = CountPlan(index = 394028, planInfo = "aijf", set = CountSetsImpl.b.countSet47)
  val plan394027 = CountPlan(index = 394027, planInfo = "aije", set = CountSetsImpl.b.countSet47)
  val plan394026 = CountPlan(index = 394026, planInfo = "aijd", set = CountSetsImpl.b.countSet47)
  val plan394025 = CountPlan(index = 394025, planInfo = "aijc", set = CountSetsImpl.b.countSet47)
  val plan394024 = CountPlan(index = 394024, planInfo = "aijb", set = CountSetsImpl.b.countSet47)
  val plan394023 = CountPlan(index = 394023, planInfo = "aija", set = CountSetsImpl.b.countSet47)
  val plan394022 = CountPlan(index = 394022, planInfo = "aiis", set = CountSetsImpl.b.countSet47)
  val plan394021 = CountPlan(index = 394021, planInfo = "aiir", set = CountSetsImpl.b.countSet47)
  val plan394020 = CountPlan(index = 394020, planInfo = "aiiq", set = CountSetsImpl.b.countSet47)
  val plan394019 = CountPlan(index = 394019, planInfo = "aiip", set = CountSetsImpl.b.countSet47)
  val plan394018 = CountPlan(index = 394018, planInfo = "aiio", set = CountSetsImpl.b.countSet47)
  val plan394017 = CountPlan(index = 394017, planInfo = "aiin", set = CountSetsImpl.b.countSet47)
  val plan394016 = CountPlan(index = 394016, planInfo = "aiim", set = CountSetsImpl.b.countSet47)
  val plan394015 = CountPlan(index = 394015, planInfo = "aiil", set = CountSetsImpl.b.countSet47)
  val plan394014 = CountPlan(index = 394014, planInfo = "aiik", set = CountSetsImpl.b.countSet47)
  val plan394013 = CountPlan(index = 394013, planInfo = "aiij", set = CountSetsImpl.b.countSet47)
  val plan394012 = CountPlan(index = 394012, planInfo = "aiii", set = CountSetsImpl.b.countSet47)
  val plan394011 = CountPlan(index = 394011, planInfo = "aiih", set = CountSetsImpl.b.countSet47)
  val plan394010 = CountPlan(index = 394010, planInfo = "aiig", set = CountSetsImpl.b.countSet47)
  val plan394009 = CountPlan(index = 394009, planInfo = "aiif", set = CountSetsImpl.b.countSet47)
  val plan394008 = CountPlan(index = 394008, planInfo = "aiie", set = CountSetsImpl.b.countSet47)
  val plan394007 = CountPlan(index = 394007, planInfo = "aiid", set = CountSetsImpl.b.countSet47)
  val plan394006 = CountPlan(index = 394006, planInfo = "aiic", set = CountSetsImpl.b.countSet47)
  val plan394005 = CountPlan(index = 394005, planInfo = "aiib", set = CountSetsImpl.b.countSet47)
  val plan394004 = CountPlan(index = 394004, planInfo = "aiia", set = CountSetsImpl.b.countSet47)
  val plan394003 = CountPlan(index = 394003, planInfo = "aihs", set = CountSetsImpl.b.countSet47)
  val plan394002 = CountPlan(index = 394002, planInfo = "aihr", set = CountSetsImpl.b.countSet47)
  val plan394001 = CountPlan(index = 394001, planInfo = "aihq", set = CountSetsImpl.b.countSet47)
  val plan394000 = CountPlan(index = 394000, planInfo = "aihp", set = CountSetsImpl.b.countSet47)
  val plan393999 = CountPlan(index = 393999, planInfo = "aiho", set = CountSetsImpl.b.countSet47)
  val plan393998 = CountPlan(index = 393998, planInfo = "aihn", set = CountSetsImpl.b.countSet47)
  val plan393997 = CountPlan(index = 393997, planInfo = "aihm", set = CountSetsImpl.b.countSet47)
  val plan393996 = CountPlan(index = 393996, planInfo = "aihl", set = CountSetsImpl.b.countSet47)
  val plan393995 = CountPlan(index = 393995, planInfo = "aihk", set = CountSetsImpl.b.countSet47)
  val plan393994 = CountPlan(index = 393994, planInfo = "aihj", set = CountSetsImpl.b.countSet47)
  val plan393993 = CountPlan(index = 393993, planInfo = "aihi", set = CountSetsImpl.b.countSet47)
  val plan393992 = CountPlan(index = 393992, planInfo = "aihh", set = CountSetsImpl.b.countSet47)
  val plan393991 = CountPlan(index = 393991, planInfo = "aihg", set = CountSetsImpl.b.countSet47)
  val plan393990 = CountPlan(index = 393990, planInfo = "aihf", set = CountSetsImpl.b.countSet47)
  val plan393989 = CountPlan(index = 393989, planInfo = "aihe", set = CountSetsImpl.b.countSet47)
  val plan393988 = CountPlan(index = 393988, planInfo = "aihd", set = CountSetsImpl.b.countSet47)
  val plan393987 = CountPlan(index = 393987, planInfo = "aihc", set = CountSetsImpl.b.countSet47)
  val plan393986 = CountPlan(index = 393986, planInfo = "aihb", set = CountSetsImpl.b.countSet47)
  val plan393985 = CountPlan(index = 393985, planInfo = "aiha", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan394084,plan394083,plan394082,plan394081,plan394080,plan394079,plan394078,plan394077,plan394076,plan394075,plan394074,plan394073,plan394072,plan394071,plan394070,plan394069,plan394068,plan394067,plan394066,plan394065,plan394064,plan394063,plan394062,plan394061,plan394060,plan394059,plan394058,plan394057,plan394056,plan394055,plan394054,plan394053,plan394052,plan394051,plan394050,plan394049,plan394048,plan394047,plan394046,plan394045,plan394044,plan394043,plan394042,plan394041,plan394040,plan394039,plan394038,plan394037,plan394036,plan394035,plan394034,plan394033,plan394032,plan394031,plan394030,plan394029,plan394028,plan394027,plan394026,plan394025,plan394024,plan394023,plan394022,plan394021,plan394020,plan394019,plan394018,plan394017,plan394016,plan394015,plan394014,plan394013,plan394012,plan394011,plan394010,plan394009,plan394008,plan394007,plan394006,plan394005,plan394004,plan394003,plan394002,plan394001,plan394000,plan393999,plan393998,plan393997,plan393996,plan393995,plan393994,plan393993,plan393992,plan393991,plan393990,plan393989,plan393988,plan393987,plan393986,plan393985)
}
