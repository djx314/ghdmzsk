package f07.codegen.impl
import f07._
object CountPlans1255 {
  val plan395784 = CountPlan(index = 395784, planInfo = "angn", set = CountSetsImpl.b.countSet47)
  val plan395783 = CountPlan(index = 395783, planInfo = "angm", set = CountSetsImpl.b.countSet47)
  val plan395782 = CountPlan(index = 395782, planInfo = "angl", set = CountSetsImpl.b.countSet47)
  val plan395781 = CountPlan(index = 395781, planInfo = "angk", set = CountSetsImpl.b.countSet47)
  val plan395780 = CountPlan(index = 395780, planInfo = "angj", set = CountSetsImpl.b.countSet47)
  val plan395779 = CountPlan(index = 395779, planInfo = "angi", set = CountSetsImpl.b.countSet47)
  val plan395778 = CountPlan(index = 395778, planInfo = "angh", set = CountSetsImpl.b.countSet47)
  val plan395777 = CountPlan(index = 395777, planInfo = "angg", set = CountSetsImpl.b.countSet47)
  val plan395776 = CountPlan(index = 395776, planInfo = "angf", set = CountSetsImpl.b.countSet47)
  val plan395775 = CountPlan(index = 395775, planInfo = "ange", set = CountSetsImpl.b.countSet47)
  val plan395774 = CountPlan(index = 395774, planInfo = "angd", set = CountSetsImpl.b.countSet47)
  val plan395773 = CountPlan(index = 395773, planInfo = "angc", set = CountSetsImpl.b.countSet47)
  val plan395772 = CountPlan(index = 395772, planInfo = "angb", set = CountSetsImpl.b.countSet47)
  val plan395771 = CountPlan(index = 395771, planInfo = "anga", set = CountSetsImpl.b.countSet47)
  val plan395770 = CountPlan(index = 395770, planInfo = "anfs", set = CountSetsImpl.b.countSet47)
  val plan395769 = CountPlan(index = 395769, planInfo = "anfr", set = CountSetsImpl.b.countSet47)
  val plan395768 = CountPlan(index = 395768, planInfo = "anfq", set = CountSetsImpl.b.countSet47)
  val plan395767 = CountPlan(index = 395767, planInfo = "anfp", set = CountSetsImpl.b.countSet47)
  val plan395766 = CountPlan(index = 395766, planInfo = "anfo", set = CountSetsImpl.b.countSet47)
  val plan395765 = CountPlan(index = 395765, planInfo = "anfn", set = CountSetsImpl.b.countSet47)
  val plan395764 = CountPlan(index = 395764, planInfo = "anfm", set = CountSetsImpl.b.countSet47)
  val plan395763 = CountPlan(index = 395763, planInfo = "anfl", set = CountSetsImpl.b.countSet47)
  val plan395762 = CountPlan(index = 395762, planInfo = "anfk", set = CountSetsImpl.b.countSet47)
  val plan395761 = CountPlan(index = 395761, planInfo = "anfj", set = CountSetsImpl.b.countSet47)
  val plan395760 = CountPlan(index = 395760, planInfo = "anfi", set = CountSetsImpl.b.countSet47)
  val plan395759 = CountPlan(index = 395759, planInfo = "anfh", set = CountSetsImpl.b.countSet47)
  val plan395758 = CountPlan(index = 395758, planInfo = "anfg", set = CountSetsImpl.b.countSet47)
  val plan395757 = CountPlan(index = 395757, planInfo = "anff", set = CountSetsImpl.b.countSet47)
  val plan395756 = CountPlan(index = 395756, planInfo = "anfe", set = CountSetsImpl.b.countSet47)
  val plan395755 = CountPlan(index = 395755, planInfo = "anfd", set = CountSetsImpl.b.countSet47)
  val plan395754 = CountPlan(index = 395754, planInfo = "anfc", set = CountSetsImpl.b.countSet47)
  val plan395753 = CountPlan(index = 395753, planInfo = "anfb", set = CountSetsImpl.b.countSet47)
  val plan395752 = CountPlan(index = 395752, planInfo = "anfa", set = CountSetsImpl.b.countSet47)
  val plan395751 = CountPlan(index = 395751, planInfo = "anes", set = CountSetsImpl.b.countSet47)
  val plan395750 = CountPlan(index = 395750, planInfo = "aner", set = CountSetsImpl.b.countSet47)
  val plan395749 = CountPlan(index = 395749, planInfo = "aneq", set = CountSetsImpl.b.countSet47)
  val plan395748 = CountPlan(index = 395748, planInfo = "anep", set = CountSetsImpl.b.countSet47)
  val plan395747 = CountPlan(index = 395747, planInfo = "aneo", set = CountSetsImpl.b.countSet47)
  val plan395746 = CountPlan(index = 395746, planInfo = "anen", set = CountSetsImpl.b.countSet47)
  val plan395745 = CountPlan(index = 395745, planInfo = "anem", set = CountSetsImpl.b.countSet47)
  val plan395744 = CountPlan(index = 395744, planInfo = "anel", set = CountSetsImpl.b.countSet47)
  val plan395743 = CountPlan(index = 395743, planInfo = "anek", set = CountSetsImpl.b.countSet47)
  val plan395742 = CountPlan(index = 395742, planInfo = "anej", set = CountSetsImpl.b.countSet47)
  val plan395741 = CountPlan(index = 395741, planInfo = "anei", set = CountSetsImpl.b.countSet47)
  val plan395740 = CountPlan(index = 395740, planInfo = "aneh", set = CountSetsImpl.b.countSet47)
  val plan395739 = CountPlan(index = 395739, planInfo = "aneg", set = CountSetsImpl.b.countSet47)
  val plan395738 = CountPlan(index = 395738, planInfo = "anef", set = CountSetsImpl.b.countSet47)
  val plan395737 = CountPlan(index = 395737, planInfo = "anee", set = CountSetsImpl.b.countSet47)
  val plan395736 = CountPlan(index = 395736, planInfo = "aned", set = CountSetsImpl.b.countSet47)
  val plan395735 = CountPlan(index = 395735, planInfo = "anec", set = CountSetsImpl.b.countSet47)
  val plan395734 = CountPlan(index = 395734, planInfo = "aneb", set = CountSetsImpl.b.countSet47)
  val plan395733 = CountPlan(index = 395733, planInfo = "anea", set = CountSetsImpl.b.countSet47)
  val plan395732 = CountPlan(index = 395732, planInfo = "ands", set = CountSetsImpl.b.countSet47)
  val plan395731 = CountPlan(index = 395731, planInfo = "andr", set = CountSetsImpl.b.countSet47)
  val plan395730 = CountPlan(index = 395730, planInfo = "andq", set = CountSetsImpl.b.countSet47)
  val plan395729 = CountPlan(index = 395729, planInfo = "andp", set = CountSetsImpl.b.countSet47)
  val plan395728 = CountPlan(index = 395728, planInfo = "ando", set = CountSetsImpl.b.countSet47)
  val plan395727 = CountPlan(index = 395727, planInfo = "andn", set = CountSetsImpl.b.countSet47)
  val plan395726 = CountPlan(index = 395726, planInfo = "andm", set = CountSetsImpl.b.countSet47)
  val plan395725 = CountPlan(index = 395725, planInfo = "andl", set = CountSetsImpl.b.countSet47)
  val plan395724 = CountPlan(index = 395724, planInfo = "andk", set = CountSetsImpl.b.countSet47)
  val plan395723 = CountPlan(index = 395723, planInfo = "andj", set = CountSetsImpl.b.countSet47)
  val plan395722 = CountPlan(index = 395722, planInfo = "andi", set = CountSetsImpl.b.countSet47)
  val plan395721 = CountPlan(index = 395721, planInfo = "andh", set = CountSetsImpl.b.countSet47)
  val plan395720 = CountPlan(index = 395720, planInfo = "andg", set = CountSetsImpl.b.countSet47)
  val plan395719 = CountPlan(index = 395719, planInfo = "andf", set = CountSetsImpl.b.countSet47)
  val plan395718 = CountPlan(index = 395718, planInfo = "ande", set = CountSetsImpl.b.countSet47)
  val plan395717 = CountPlan(index = 395717, planInfo = "andd", set = CountSetsImpl.b.countSet47)
  val plan395716 = CountPlan(index = 395716, planInfo = "andc", set = CountSetsImpl.b.countSet47)
  val plan395715 = CountPlan(index = 395715, planInfo = "andb", set = CountSetsImpl.b.countSet47)
  val plan395714 = CountPlan(index = 395714, planInfo = "anda", set = CountSetsImpl.b.countSet47)
  val plan395713 = CountPlan(index = 395713, planInfo = "ancs", set = CountSetsImpl.b.countSet47)
  val plan395712 = CountPlan(index = 395712, planInfo = "ancr", set = CountSetsImpl.b.countSet47)
  val plan395711 = CountPlan(index = 395711, planInfo = "ancq", set = CountSetsImpl.b.countSet47)
  val plan395710 = CountPlan(index = 395710, planInfo = "ancp", set = CountSetsImpl.b.countSet47)
  val plan395709 = CountPlan(index = 395709, planInfo = "anco", set = CountSetsImpl.b.countSet47)
  val plan395708 = CountPlan(index = 395708, planInfo = "ancn", set = CountSetsImpl.b.countSet47)
  val plan395707 = CountPlan(index = 395707, planInfo = "ancm", set = CountSetsImpl.b.countSet47)
  val plan395706 = CountPlan(index = 395706, planInfo = "ancl", set = CountSetsImpl.b.countSet47)
  val plan395705 = CountPlan(index = 395705, planInfo = "anck", set = CountSetsImpl.b.countSet47)
  val plan395704 = CountPlan(index = 395704, planInfo = "ancj", set = CountSetsImpl.b.countSet47)
  val plan395703 = CountPlan(index = 395703, planInfo = "anci", set = CountSetsImpl.b.countSet47)
  val plan395702 = CountPlan(index = 395702, planInfo = "anch", set = CountSetsImpl.b.countSet47)
  val plan395701 = CountPlan(index = 395701, planInfo = "ancg", set = CountSetsImpl.b.countSet47)
  val plan395700 = CountPlan(index = 395700, planInfo = "ancf", set = CountSetsImpl.b.countSet47)
  val plan395699 = CountPlan(index = 395699, planInfo = "ance", set = CountSetsImpl.b.countSet47)
  val plan395698 = CountPlan(index = 395698, planInfo = "ancd", set = CountSetsImpl.b.countSet47)
  val plan395697 = CountPlan(index = 395697, planInfo = "ancc", set = CountSetsImpl.b.countSet47)
  val plan395696 = CountPlan(index = 395696, planInfo = "ancb", set = CountSetsImpl.b.countSet47)
  val plan395695 = CountPlan(index = 395695, planInfo = "anca", set = CountSetsImpl.b.countSet47)
  val plan395694 = CountPlan(index = 395694, planInfo = "anbs", set = CountSetsImpl.b.countSet47)
  val plan395693 = CountPlan(index = 395693, planInfo = "anbr", set = CountSetsImpl.b.countSet47)
  val plan395692 = CountPlan(index = 395692, planInfo = "anbq", set = CountSetsImpl.b.countSet47)
  val plan395691 = CountPlan(index = 395691, planInfo = "anbp", set = CountSetsImpl.b.countSet47)
  val plan395690 = CountPlan(index = 395690, planInfo = "anbo", set = CountSetsImpl.b.countSet47)
  val plan395689 = CountPlan(index = 395689, planInfo = "anbn", set = CountSetsImpl.b.countSet47)
  val plan395688 = CountPlan(index = 395688, planInfo = "anbm", set = CountSetsImpl.b.countSet47)
  val plan395687 = CountPlan(index = 395687, planInfo = "anbl", set = CountSetsImpl.b.countSet47)
  val plan395686 = CountPlan(index = 395686, planInfo = "anbk", set = CountSetsImpl.b.countSet47)
  val plan395685 = CountPlan(index = 395685, planInfo = "anbj", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan395784,plan395783,plan395782,plan395781,plan395780,plan395779,plan395778,plan395777,plan395776,plan395775,plan395774,plan395773,plan395772,plan395771,plan395770,plan395769,plan395768,plan395767,plan395766,plan395765,plan395764,plan395763,plan395762,plan395761,plan395760,plan395759,plan395758,plan395757,plan395756,plan395755,plan395754,plan395753,plan395752,plan395751,plan395750,plan395749,plan395748,plan395747,plan395746,plan395745,plan395744,plan395743,plan395742,plan395741,plan395740,plan395739,plan395738,plan395737,plan395736,plan395735,plan395734,plan395733,plan395732,plan395731,plan395730,plan395729,plan395728,plan395727,plan395726,plan395725,plan395724,plan395723,plan395722,plan395721,plan395720,plan395719,plan395718,plan395717,plan395716,plan395715,plan395714,plan395713,plan395712,plan395711,plan395710,plan395709,plan395708,plan395707,plan395706,plan395705,plan395704,plan395703,plan395702,plan395701,plan395700,plan395699,plan395698,plan395697,plan395696,plan395695,plan395694,plan395693,plan395692,plan395691,plan395690,plan395689,plan395688,plan395687,plan395686,plan395685)
}
