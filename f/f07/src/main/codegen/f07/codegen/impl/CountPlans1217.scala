package f07.codegen.impl
import f07._
object CountPlans1217 {
  val plan399584 = CountPlan(index = 399584, planInfo = "beqn", set = CountSetsImpl.b.countSet59)
  val plan399583 = CountPlan(index = 399583, planInfo = "beqm", set = CountSetsImpl.b.countSet59)
  val plan399582 = CountPlan(index = 399582, planInfo = "beql", set = CountSetsImpl.b.countSet59)
  val plan399581 = CountPlan(index = 399581, planInfo = "beqk", set = CountSetsImpl.b.countSet59)
  val plan399580 = CountPlan(index = 399580, planInfo = "beqj", set = CountSetsImpl.b.countSet59)
  val plan399579 = CountPlan(index = 399579, planInfo = "beqi", set = CountSetsImpl.b.countSet59)
  val plan399578 = CountPlan(index = 399578, planInfo = "beqh", set = CountSetsImpl.b.countSet59)
  val plan399577 = CountPlan(index = 399577, planInfo = "beqg", set = CountSetsImpl.b.countSet59)
  val plan399576 = CountPlan(index = 399576, planInfo = "beqf", set = CountSetsImpl.b.countSet59)
  val plan399575 = CountPlan(index = 399575, planInfo = "beqe", set = CountSetsImpl.b.countSet59)
  val plan399574 = CountPlan(index = 399574, planInfo = "beqd", set = CountSetsImpl.b.countSet59)
  val plan399573 = CountPlan(index = 399573, planInfo = "beqc", set = CountSetsImpl.b.countSet59)
  val plan399572 = CountPlan(index = 399572, planInfo = "beqb", set = CountSetsImpl.b.countSet59)
  val plan399571 = CountPlan(index = 399571, planInfo = "beqa", set = CountSetsImpl.b.countSet59)
  val plan399570 = CountPlan(index = 399570, planInfo = "beps", set = CountSetsImpl.b.countSet59)
  val plan399569 = CountPlan(index = 399569, planInfo = "bepr", set = CountSetsImpl.b.countSet59)
  val plan399568 = CountPlan(index = 399568, planInfo = "bepq", set = CountSetsImpl.b.countSet59)
  val plan399567 = CountPlan(index = 399567, planInfo = "bepp", set = CountSetsImpl.b.countSet59)
  val plan399566 = CountPlan(index = 399566, planInfo = "bepo", set = CountSetsImpl.b.countSet59)
  val plan399565 = CountPlan(index = 399565, planInfo = "bepn", set = CountSetsImpl.b.countSet59)
  val plan399564 = CountPlan(index = 399564, planInfo = "bepm", set = CountSetsImpl.b.countSet59)
  val plan399563 = CountPlan(index = 399563, planInfo = "bepl", set = CountSetsImpl.b.countSet59)
  val plan399562 = CountPlan(index = 399562, planInfo = "bepk", set = CountSetsImpl.b.countSet59)
  val plan399561 = CountPlan(index = 399561, planInfo = "bepj", set = CountSetsImpl.b.countSet59)
  val plan399560 = CountPlan(index = 399560, planInfo = "bepi", set = CountSetsImpl.b.countSet59)
  val plan399559 = CountPlan(index = 399559, planInfo = "beph", set = CountSetsImpl.b.countSet59)
  val plan399558 = CountPlan(index = 399558, planInfo = "bepg", set = CountSetsImpl.b.countSet59)
  val plan399557 = CountPlan(index = 399557, planInfo = "bepf", set = CountSetsImpl.b.countSet59)
  val plan399556 = CountPlan(index = 399556, planInfo = "bepe", set = CountSetsImpl.b.countSet59)
  val plan399555 = CountPlan(index = 399555, planInfo = "bepd", set = CountSetsImpl.b.countSet59)
  val plan399554 = CountPlan(index = 399554, planInfo = "bepc", set = CountSetsImpl.b.countSet59)
  val plan399553 = CountPlan(index = 399553, planInfo = "bepb", set = CountSetsImpl.b.countSet59)
  val plan399552 = CountPlan(index = 399552, planInfo = "bepa", set = CountSetsImpl.b.countSet59)
  val plan399551 = CountPlan(index = 399551, planInfo = "beos", set = CountSetsImpl.b.countSet59)
  val plan399550 = CountPlan(index = 399550, planInfo = "beor", set = CountSetsImpl.b.countSet59)
  val plan399549 = CountPlan(index = 399549, planInfo = "beoq", set = CountSetsImpl.b.countSet59)
  val plan399548 = CountPlan(index = 399548, planInfo = "beop", set = CountSetsImpl.b.countSet59)
  val plan399547 = CountPlan(index = 399547, planInfo = "beoo", set = CountSetsImpl.b.countSet59)
  val plan399546 = CountPlan(index = 399546, planInfo = "beon", set = CountSetsImpl.b.countSet59)
  val plan399545 = CountPlan(index = 399545, planInfo = "beom", set = CountSetsImpl.b.countSet59)
  val plan399544 = CountPlan(index = 399544, planInfo = "beol", set = CountSetsImpl.b.countSet59)
  val plan399543 = CountPlan(index = 399543, planInfo = "beok", set = CountSetsImpl.b.countSet59)
  val plan399542 = CountPlan(index = 399542, planInfo = "beoj", set = CountSetsImpl.b.countSet59)
  val plan399541 = CountPlan(index = 399541, planInfo = "beoi", set = CountSetsImpl.b.countSet59)
  val plan399540 = CountPlan(index = 399540, planInfo = "beoh", set = CountSetsImpl.b.countSet59)
  val plan399539 = CountPlan(index = 399539, planInfo = "beog", set = CountSetsImpl.b.countSet59)
  val plan399538 = CountPlan(index = 399538, planInfo = "beof", set = CountSetsImpl.b.countSet59)
  val plan399537 = CountPlan(index = 399537, planInfo = "beoe", set = CountSetsImpl.b.countSet59)
  val plan399536 = CountPlan(index = 399536, planInfo = "beod", set = CountSetsImpl.b.countSet59)
  val plan399535 = CountPlan(index = 399535, planInfo = "beoc", set = CountSetsImpl.b.countSet59)
  val plan399534 = CountPlan(index = 399534, planInfo = "beob", set = CountSetsImpl.b.countSet59)
  val plan399533 = CountPlan(index = 399533, planInfo = "beoa", set = CountSetsImpl.b.countSet59)
  val plan399532 = CountPlan(index = 399532, planInfo = "bens", set = CountSetsImpl.b.countSet59)
  val plan399531 = CountPlan(index = 399531, planInfo = "benr", set = CountSetsImpl.b.countSet59)
  val plan399530 = CountPlan(index = 399530, planInfo = "benq", set = CountSetsImpl.b.countSet59)
  val plan399529 = CountPlan(index = 399529, planInfo = "benp", set = CountSetsImpl.b.countSet59)
  val plan399528 = CountPlan(index = 399528, planInfo = "beno", set = CountSetsImpl.b.countSet59)
  val plan399527 = CountPlan(index = 399527, planInfo = "benn", set = CountSetsImpl.b.countSet59)
  val plan399526 = CountPlan(index = 399526, planInfo = "benm", set = CountSetsImpl.b.countSet59)
  val plan399525 = CountPlan(index = 399525, planInfo = "benl", set = CountSetsImpl.b.countSet59)
  val plan399524 = CountPlan(index = 399524, planInfo = "benk", set = CountSetsImpl.b.countSet59)
  val plan399523 = CountPlan(index = 399523, planInfo = "benj", set = CountSetsImpl.b.countSet59)
  val plan399522 = CountPlan(index = 399522, planInfo = "beni", set = CountSetsImpl.b.countSet59)
  val plan399521 = CountPlan(index = 399521, planInfo = "benh", set = CountSetsImpl.b.countSet59)
  val plan399520 = CountPlan(index = 399520, planInfo = "beng", set = CountSetsImpl.b.countSet59)
  val plan399519 = CountPlan(index = 399519, planInfo = "benf", set = CountSetsImpl.b.countSet59)
  val plan399518 = CountPlan(index = 399518, planInfo = "bene", set = CountSetsImpl.b.countSet59)
  val plan399517 = CountPlan(index = 399517, planInfo = "bend", set = CountSetsImpl.b.countSet59)
  val plan399516 = CountPlan(index = 399516, planInfo = "benc", set = CountSetsImpl.b.countSet59)
  val plan399515 = CountPlan(index = 399515, planInfo = "benb", set = CountSetsImpl.b.countSet59)
  val plan399514 = CountPlan(index = 399514, planInfo = "bena", set = CountSetsImpl.b.countSet59)
  val plan399513 = CountPlan(index = 399513, planInfo = "bems", set = CountSetsImpl.b.countSet59)
  val plan399512 = CountPlan(index = 399512, planInfo = "bemr", set = CountSetsImpl.b.countSet59)
  val plan399511 = CountPlan(index = 399511, planInfo = "bemq", set = CountSetsImpl.b.countSet59)
  val plan399510 = CountPlan(index = 399510, planInfo = "bemp", set = CountSetsImpl.b.countSet59)
  val plan399509 = CountPlan(index = 399509, planInfo = "bemo", set = CountSetsImpl.b.countSet59)
  val plan399508 = CountPlan(index = 399508, planInfo = "bemn", set = CountSetsImpl.b.countSet59)
  val plan399507 = CountPlan(index = 399507, planInfo = "bemm", set = CountSetsImpl.b.countSet59)
  val plan399506 = CountPlan(index = 399506, planInfo = "beml", set = CountSetsImpl.b.countSet59)
  val plan399505 = CountPlan(index = 399505, planInfo = "bemk", set = CountSetsImpl.b.countSet59)
  val plan399504 = CountPlan(index = 399504, planInfo = "bemj", set = CountSetsImpl.b.countSet59)
  val plan399503 = CountPlan(index = 399503, planInfo = "bemi", set = CountSetsImpl.b.countSet59)
  val plan399502 = CountPlan(index = 399502, planInfo = "bemh", set = CountSetsImpl.b.countSet59)
  val plan399501 = CountPlan(index = 399501, planInfo = "bemg", set = CountSetsImpl.b.countSet59)
  val plan399500 = CountPlan(index = 399500, planInfo = "bemf", set = CountSetsImpl.b.countSet59)
  val plan399499 = CountPlan(index = 399499, planInfo = "beme", set = CountSetsImpl.b.countSet59)
  val plan399498 = CountPlan(index = 399498, planInfo = "bemd", set = CountSetsImpl.b.countSet59)
  val plan399497 = CountPlan(index = 399497, planInfo = "bemc", set = CountSetsImpl.b.countSet59)
  val plan399496 = CountPlan(index = 399496, planInfo = "bemb", set = CountSetsImpl.b.countSet59)
  val plan399495 = CountPlan(index = 399495, planInfo = "bema", set = CountSetsImpl.b.countSet59)
  val plan399494 = CountPlan(index = 399494, planInfo = "bels", set = CountSetsImpl.b.countSet59)
  val plan399493 = CountPlan(index = 399493, planInfo = "belr", set = CountSetsImpl.b.countSet59)
  val plan399492 = CountPlan(index = 399492, planInfo = "belq", set = CountSetsImpl.b.countSet59)
  val plan399491 = CountPlan(index = 399491, planInfo = "belp", set = CountSetsImpl.b.countSet59)
  val plan399490 = CountPlan(index = 399490, planInfo = "belo", set = CountSetsImpl.b.countSet59)
  val plan399489 = CountPlan(index = 399489, planInfo = "beln", set = CountSetsImpl.b.countSet59)
  val plan399488 = CountPlan(index = 399488, planInfo = "belm", set = CountSetsImpl.b.countSet59)
  val plan399487 = CountPlan(index = 399487, planInfo = "bell", set = CountSetsImpl.b.countSet59)
  val plan399486 = CountPlan(index = 399486, planInfo = "belk", set = CountSetsImpl.b.countSet59)
  val plan399485 = CountPlan(index = 399485, planInfo = "belj", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan399584,plan399583,plan399582,plan399581,plan399580,plan399579,plan399578,plan399577,plan399576,plan399575,plan399574,plan399573,plan399572,plan399571,plan399570,plan399569,plan399568,plan399567,plan399566,plan399565,plan399564,plan399563,plan399562,plan399561,plan399560,plan399559,plan399558,plan399557,plan399556,plan399555,plan399554,plan399553,plan399552,plan399551,plan399550,plan399549,plan399548,plan399547,plan399546,plan399545,plan399544,plan399543,plan399542,plan399541,plan399540,plan399539,plan399538,plan399537,plan399536,plan399535,plan399534,plan399533,plan399532,plan399531,plan399530,plan399529,plan399528,plan399527,plan399526,plan399525,plan399524,plan399523,plan399522,plan399521,plan399520,plan399519,plan399518,plan399517,plan399516,plan399515,plan399514,plan399513,plan399512,plan399511,plan399510,plan399509,plan399508,plan399507,plan399506,plan399505,plan399504,plan399503,plan399502,plan399501,plan399500,plan399499,plan399498,plan399497,plan399496,plan399495,plan399494,plan399493,plan399492,plan399491,plan399490,plan399489,plan399488,plan399487,plan399486,plan399485)
}
