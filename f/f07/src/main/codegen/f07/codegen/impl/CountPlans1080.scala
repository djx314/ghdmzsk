package f07.codegen.impl
import f07._
object CountPlans1080 {
  val plan413284 = CountPlan(index = 413284, planInfo = "depo", set = CountSetsImpl.b.countSet48)
  val plan413283 = CountPlan(index = 413283, planInfo = "depn", set = CountSetsImpl.b.countSet48)
  val plan413282 = CountPlan(index = 413282, planInfo = "depm", set = CountSetsImpl.b.countSet56)
  val plan413281 = CountPlan(index = 413281, planInfo = "depl", set = CountSetsImpl.b.countSet48)
  val plan413280 = CountPlan(index = 413280, planInfo = "depk", set = CountSetsImpl.b.countSet48)
  val plan413279 = CountPlan(index = 413279, planInfo = "depj", set = CountSetsImpl.b.countSet56)
  val plan413278 = CountPlan(index = 413278, planInfo = "depi", set = CountSetsImpl.b.countSet48)
  val plan413277 = CountPlan(index = 413277, planInfo = "deph", set = CountSetsImpl.b.countSet48)
  val plan413276 = CountPlan(index = 413276, planInfo = "depg", set = CountSetsImpl.b.countSet56)
  val plan413275 = CountPlan(index = 413275, planInfo = "depf", set = CountSetsImpl.b.countSet60)
  val plan413274 = CountPlan(index = 413274, planInfo = "depe", set = CountSetsImpl.b.countSet60)
  val plan413273 = CountPlan(index = 413273, planInfo = "depd", set = CountSetsImpl.b.countSet60)
  val plan413272 = CountPlan(index = 413272, planInfo = "depc", set = CountSetsImpl.b.countSet60)
  val plan413271 = CountPlan(index = 413271, planInfo = "depb", set = CountSetsImpl.b.countSet60)
  val plan413270 = CountPlan(index = 413270, planInfo = "depa", set = CountSetsImpl.b.countSet60)
  val plan413269 = CountPlan(index = 413269, planInfo = "deos", set = CountSetsImpl.b.countSet48)
  val plan413268 = CountPlan(index = 413268, planInfo = "deor", set = CountSetsImpl.b.countSet48)
  val plan413267 = CountPlan(index = 413267, planInfo = "deoq", set = CountSetsImpl.b.countSet48)
  val plan413266 = CountPlan(index = 413266, planInfo = "deop", set = CountSetsImpl.b.countSet48)
  val plan413265 = CountPlan(index = 413265, planInfo = "deoo", set = CountSetsImpl.b.countSet48)
  val plan413264 = CountPlan(index = 413264, planInfo = "deon", set = CountSetsImpl.b.countSet48)
  val plan413263 = CountPlan(index = 413263, planInfo = "deom", set = CountSetsImpl.b.countSet48)
  val plan413262 = CountPlan(index = 413262, planInfo = "deol", set = CountSetsImpl.b.countSet48)
  val plan413261 = CountPlan(index = 413261, planInfo = "deok", set = CountSetsImpl.b.countSet48)
  val plan413260 = CountPlan(index = 413260, planInfo = "deoj", set = CountSetsImpl.b.countSet48)
  val plan413259 = CountPlan(index = 413259, planInfo = "deoi", set = CountSetsImpl.b.countSet48)
  val plan413258 = CountPlan(index = 413258, planInfo = "deoh", set = CountSetsImpl.b.countSet48)
  val plan413257 = CountPlan(index = 413257, planInfo = "deog", set = CountSetsImpl.b.countSet48)
  val plan413256 = CountPlan(index = 413256, planInfo = "deof", set = CountSetsImpl.b.countSet48)
  val plan413255 = CountPlan(index = 413255, planInfo = "deoe", set = CountSetsImpl.b.countSet48)
  val plan413254 = CountPlan(index = 413254, planInfo = "deod", set = CountSetsImpl.b.countSet48)
  val plan413253 = CountPlan(index = 413253, planInfo = "deoc", set = CountSetsImpl.b.countSet48)
  val plan413252 = CountPlan(index = 413252, planInfo = "deob", set = CountSetsImpl.b.countSet48)
  val plan413251 = CountPlan(index = 413251, planInfo = "deoa", set = CountSetsImpl.b.countSet48)
  val plan413250 = CountPlan(index = 413250, planInfo = "dens", set = CountSetsImpl.b.countSet59)
  val plan413249 = CountPlan(index = 413249, planInfo = "denr", set = CountSetsImpl.b.countSet48)
  val plan413248 = CountPlan(index = 413248, planInfo = "denq", set = CountSetsImpl.b.countSet48)
  val plan413247 = CountPlan(index = 413247, planInfo = "denp", set = CountSetsImpl.b.countSet48)
  val plan413246 = CountPlan(index = 413246, planInfo = "deno", set = CountSetsImpl.b.countSet48)
  val plan413245 = CountPlan(index = 413245, planInfo = "denn", set = CountSetsImpl.b.countSet48)
  val plan413244 = CountPlan(index = 413244, planInfo = "denm", set = CountSetsImpl.b.countSet48)
  val plan413243 = CountPlan(index = 413243, planInfo = "denl", set = CountSetsImpl.b.countSet48)
  val plan413242 = CountPlan(index = 413242, planInfo = "denk", set = CountSetsImpl.b.countSet48)
  val plan413241 = CountPlan(index = 413241, planInfo = "denj", set = CountSetsImpl.b.countSet48)
  val plan413240 = CountPlan(index = 413240, planInfo = "deni", set = CountSetsImpl.b.countSet48)
  val plan413239 = CountPlan(index = 413239, planInfo = "denh", set = CountSetsImpl.b.countSet48)
  val plan413238 = CountPlan(index = 413238, planInfo = "deng", set = CountSetsImpl.b.countSet48)
  val plan413237 = CountPlan(index = 413237, planInfo = "denf", set = CountSetsImpl.b.countSet59)
  val plan413236 = CountPlan(index = 413236, planInfo = "dene", set = CountSetsImpl.b.countSet59)
  val plan413235 = CountPlan(index = 413235, planInfo = "dend", set = CountSetsImpl.b.countSet59)
  val plan413234 = CountPlan(index = 413234, planInfo = "denc", set = CountSetsImpl.b.countSet59)
  val plan413233 = CountPlan(index = 413233, planInfo = "denb", set = CountSetsImpl.b.countSet59)
  val plan413232 = CountPlan(index = 413232, planInfo = "dena", set = CountSetsImpl.b.countSet59)
  val plan413231 = CountPlan(index = 413231, planInfo = "dems", set = CountSetsImpl.b.countSet60)
  val plan413230 = CountPlan(index = 413230, planInfo = "demr", set = CountSetsImpl.b.countSet48)
  val plan413229 = CountPlan(index = 413229, planInfo = "demq", set = CountSetsImpl.b.countSet48)
  val plan413228 = CountPlan(index = 413228, planInfo = "demp", set = CountSetsImpl.b.countSet56)
  val plan413227 = CountPlan(index = 413227, planInfo = "demo", set = CountSetsImpl.b.countSet48)
  val plan413226 = CountPlan(index = 413226, planInfo = "demn", set = CountSetsImpl.b.countSet48)
  val plan413225 = CountPlan(index = 413225, planInfo = "demm", set = CountSetsImpl.b.countSet56)
  val plan413224 = CountPlan(index = 413224, planInfo = "deml", set = CountSetsImpl.b.countSet48)
  val plan413223 = CountPlan(index = 413223, planInfo = "demk", set = CountSetsImpl.b.countSet48)
  val plan413222 = CountPlan(index = 413222, planInfo = "demj", set = CountSetsImpl.b.countSet56)
  val plan413221 = CountPlan(index = 413221, planInfo = "demi", set = CountSetsImpl.b.countSet48)
  val plan413220 = CountPlan(index = 413220, planInfo = "demh", set = CountSetsImpl.b.countSet48)
  val plan413219 = CountPlan(index = 413219, planInfo = "demg", set = CountSetsImpl.b.countSet56)
  val plan413218 = CountPlan(index = 413218, planInfo = "demf", set = CountSetsImpl.b.countSet60)
  val plan413217 = CountPlan(index = 413217, planInfo = "deme", set = CountSetsImpl.b.countSet60)
  val plan413216 = CountPlan(index = 413216, planInfo = "demd", set = CountSetsImpl.b.countSet60)
  val plan413215 = CountPlan(index = 413215, planInfo = "demc", set = CountSetsImpl.b.countSet60)
  val plan413214 = CountPlan(index = 413214, planInfo = "demb", set = CountSetsImpl.b.countSet60)
  val plan413213 = CountPlan(index = 413213, planInfo = "dema", set = CountSetsImpl.b.countSet60)
  val plan413212 = CountPlan(index = 413212, planInfo = "dels", set = CountSetsImpl.b.countSet48)
  val plan413211 = CountPlan(index = 413211, planInfo = "delr", set = CountSetsImpl.b.countSet48)
  val plan413210 = CountPlan(index = 413210, planInfo = "delq", set = CountSetsImpl.b.countSet48)
  val plan413209 = CountPlan(index = 413209, planInfo = "delp", set = CountSetsImpl.b.countSet48)
  val plan413208 = CountPlan(index = 413208, planInfo = "delo", set = CountSetsImpl.b.countSet48)
  val plan413207 = CountPlan(index = 413207, planInfo = "deln", set = CountSetsImpl.b.countSet48)
  val plan413206 = CountPlan(index = 413206, planInfo = "delm", set = CountSetsImpl.b.countSet48)
  val plan413205 = CountPlan(index = 413205, planInfo = "dell", set = CountSetsImpl.b.countSet48)
  val plan413204 = CountPlan(index = 413204, planInfo = "delk", set = CountSetsImpl.b.countSet48)
  val plan413203 = CountPlan(index = 413203, planInfo = "delj", set = CountSetsImpl.b.countSet48)
  val plan413202 = CountPlan(index = 413202, planInfo = "deli", set = CountSetsImpl.b.countSet48)
  val plan413201 = CountPlan(index = 413201, planInfo = "delh", set = CountSetsImpl.b.countSet48)
  val plan413200 = CountPlan(index = 413200, planInfo = "delg", set = CountSetsImpl.b.countSet48)
  val plan413199 = CountPlan(index = 413199, planInfo = "delf", set = CountSetsImpl.b.countSet48)
  val plan413198 = CountPlan(index = 413198, planInfo = "dele", set = CountSetsImpl.b.countSet48)
  val plan413197 = CountPlan(index = 413197, planInfo = "deld", set = CountSetsImpl.b.countSet48)
  val plan413196 = CountPlan(index = 413196, planInfo = "delc", set = CountSetsImpl.b.countSet48)
  val plan413195 = CountPlan(index = 413195, planInfo = "delb", set = CountSetsImpl.b.countSet48)
  val plan413194 = CountPlan(index = 413194, planInfo = "dela", set = CountSetsImpl.b.countSet48)
  val plan413193 = CountPlan(index = 413193, planInfo = "deks", set = CountSetsImpl.b.countSet59)
  val plan413192 = CountPlan(index = 413192, planInfo = "dekr", set = CountSetsImpl.b.countSet48)
  val plan413191 = CountPlan(index = 413191, planInfo = "dekq", set = CountSetsImpl.b.countSet48)
  val plan413190 = CountPlan(index = 413190, planInfo = "dekp", set = CountSetsImpl.b.countSet48)
  val plan413189 = CountPlan(index = 413189, planInfo = "deko", set = CountSetsImpl.b.countSet48)
  val plan413188 = CountPlan(index = 413188, planInfo = "dekn", set = CountSetsImpl.b.countSet48)
  val plan413187 = CountPlan(index = 413187, planInfo = "dekm", set = CountSetsImpl.b.countSet48)
  val plan413186 = CountPlan(index = 413186, planInfo = "dekl", set = CountSetsImpl.b.countSet48)
  val plan413185 = CountPlan(index = 413185, planInfo = "dekk", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan413284,plan413283,plan413282,plan413281,plan413280,plan413279,plan413278,plan413277,plan413276,plan413275,plan413274,plan413273,plan413272,plan413271,plan413270,plan413269,plan413268,plan413267,plan413266,plan413265,plan413264,plan413263,plan413262,plan413261,plan413260,plan413259,plan413258,plan413257,plan413256,plan413255,plan413254,plan413253,plan413252,plan413251,plan413250,plan413249,plan413248,plan413247,plan413246,plan413245,plan413244,plan413243,plan413242,plan413241,plan413240,plan413239,plan413238,plan413237,plan413236,plan413235,plan413234,plan413233,plan413232,plan413231,plan413230,plan413229,plan413228,plan413227,plan413226,plan413225,plan413224,plan413223,plan413222,plan413221,plan413220,plan413219,plan413218,plan413217,plan413216,plan413215,plan413214,plan413213,plan413212,plan413211,plan413210,plan413209,plan413208,plan413207,plan413206,plan413205,plan413204,plan413203,plan413202,plan413201,plan413200,plan413199,plan413198,plan413197,plan413196,plan413195,plan413194,plan413193,plan413192,plan413191,plan413190,plan413189,plan413188,plan413187,plan413186,plan413185)
}
