package f07.codegen.impl
import f07._
object CountPlans1080 {
  val plan673926 = CountPlan(index = 673926, planInfo = "depo", set = CountSetsImpl.b.countSet591)
  val plan673925 = CountPlan(index = 673925, planInfo = "depn", set = CountSetsImpl.b.countSet591)
  val plan673924 = CountPlan(index = 673924, planInfo = "depm", set = CountSetsImpl.b.countSet596)
  val plan673923 = CountPlan(index = 673923, planInfo = "depl", set = CountSetsImpl.b.countSet591)
  val plan673922 = CountPlan(index = 673922, planInfo = "depk", set = CountSetsImpl.b.countSet591)
  val plan673921 = CountPlan(index = 673921, planInfo = "depj", set = CountSetsImpl.b.countSet596)
  val plan673920 = CountPlan(index = 673920, planInfo = "depi", set = CountSetsImpl.b.countSet591)
  val plan673919 = CountPlan(index = 673919, planInfo = "deph", set = CountSetsImpl.b.countSet591)
  val plan673918 = CountPlan(index = 673918, planInfo = "depg", set = CountSetsImpl.b.countSet596)
  val plan673917 = CountPlan(index = 673917, planInfo = "depf", set = CountSetsImpl.b.countSet600)
  val plan673916 = CountPlan(index = 673916, planInfo = "depe", set = CountSetsImpl.b.countSet600)
  val plan673915 = CountPlan(index = 673915, planInfo = "depd", set = CountSetsImpl.b.countSet600)
  val plan673914 = CountPlan(index = 673914, planInfo = "depc", set = CountSetsImpl.b.countSet600)
  val plan673913 = CountPlan(index = 673913, planInfo = "depb", set = CountSetsImpl.b.countSet600)
  val plan673912 = CountPlan(index = 673912, planInfo = "depa", set = CountSetsImpl.b.countSet600)
  val plan673911 = CountPlan(index = 673911, planInfo = "deos", set = CountSetsImpl.b.countSet591)
  val plan673910 = CountPlan(index = 673910, planInfo = "deor", set = CountSetsImpl.b.countSet591)
  val plan673909 = CountPlan(index = 673909, planInfo = "deoq", set = CountSetsImpl.b.countSet591)
  val plan673908 = CountPlan(index = 673908, planInfo = "deop", set = CountSetsImpl.b.countSet591)
  val plan673907 = CountPlan(index = 673907, planInfo = "deoo", set = CountSetsImpl.b.countSet591)
  val plan673906 = CountPlan(index = 673906, planInfo = "deon", set = CountSetsImpl.b.countSet591)
  val plan673905 = CountPlan(index = 673905, planInfo = "deom", set = CountSetsImpl.b.countSet591)
  val plan673904 = CountPlan(index = 673904, planInfo = "deol", set = CountSetsImpl.b.countSet591)
  val plan673903 = CountPlan(index = 673903, planInfo = "deok", set = CountSetsImpl.b.countSet591)
  val plan673902 = CountPlan(index = 673902, planInfo = "deoj", set = CountSetsImpl.b.countSet591)
  val plan673901 = CountPlan(index = 673901, planInfo = "deoi", set = CountSetsImpl.b.countSet591)
  val plan673900 = CountPlan(index = 673900, planInfo = "deoh", set = CountSetsImpl.b.countSet591)
  val plan673899 = CountPlan(index = 673899, planInfo = "deog", set = CountSetsImpl.b.countSet591)
  val plan673898 = CountPlan(index = 673898, planInfo = "deof", set = CountSetsImpl.b.countSet591)
  val plan673897 = CountPlan(index = 673897, planInfo = "deoe", set = CountSetsImpl.b.countSet591)
  val plan673896 = CountPlan(index = 673896, planInfo = "deod", set = CountSetsImpl.b.countSet591)
  val plan673895 = CountPlan(index = 673895, planInfo = "deoc", set = CountSetsImpl.b.countSet591)
  val plan673894 = CountPlan(index = 673894, planInfo = "deob", set = CountSetsImpl.b.countSet591)
  val plan673893 = CountPlan(index = 673893, planInfo = "deoa", set = CountSetsImpl.b.countSet591)
  val plan673892 = CountPlan(index = 673892, planInfo = "dens", set = CountSetsImpl.b.countSet599)
  val plan673891 = CountPlan(index = 673891, planInfo = "denr", set = CountSetsImpl.b.countSet591)
  val plan673890 = CountPlan(index = 673890, planInfo = "denq", set = CountSetsImpl.b.countSet591)
  val plan673889 = CountPlan(index = 673889, planInfo = "denp", set = CountSetsImpl.b.countSet591)
  val plan673888 = CountPlan(index = 673888, planInfo = "deno", set = CountSetsImpl.b.countSet591)
  val plan673887 = CountPlan(index = 673887, planInfo = "denn", set = CountSetsImpl.b.countSet591)
  val plan673886 = CountPlan(index = 673886, planInfo = "denm", set = CountSetsImpl.b.countSet591)
  val plan673885 = CountPlan(index = 673885, planInfo = "denl", set = CountSetsImpl.b.countSet591)
  val plan673884 = CountPlan(index = 673884, planInfo = "denk", set = CountSetsImpl.b.countSet591)
  val plan673883 = CountPlan(index = 673883, planInfo = "denj", set = CountSetsImpl.b.countSet591)
  val plan673882 = CountPlan(index = 673882, planInfo = "deni", set = CountSetsImpl.b.countSet591)
  val plan673881 = CountPlan(index = 673881, planInfo = "denh", set = CountSetsImpl.b.countSet591)
  val plan673880 = CountPlan(index = 673880, planInfo = "deng", set = CountSetsImpl.b.countSet591)
  val plan673879 = CountPlan(index = 673879, planInfo = "denf", set = CountSetsImpl.b.countSet599)
  val plan673878 = CountPlan(index = 673878, planInfo = "dene", set = CountSetsImpl.b.countSet599)
  val plan673877 = CountPlan(index = 673877, planInfo = "dend", set = CountSetsImpl.b.countSet599)
  val plan673876 = CountPlan(index = 673876, planInfo = "denc", set = CountSetsImpl.b.countSet599)
  val plan673875 = CountPlan(index = 673875, planInfo = "denb", set = CountSetsImpl.b.countSet599)
  val plan673874 = CountPlan(index = 673874, planInfo = "dena", set = CountSetsImpl.b.countSet599)
  val plan673873 = CountPlan(index = 673873, planInfo = "dems", set = CountSetsImpl.b.countSet600)
  val plan673872 = CountPlan(index = 673872, planInfo = "demr", set = CountSetsImpl.b.countSet591)
  val plan673871 = CountPlan(index = 673871, planInfo = "demq", set = CountSetsImpl.b.countSet591)
  val plan673870 = CountPlan(index = 673870, planInfo = "demp", set = CountSetsImpl.b.countSet596)
  val plan673869 = CountPlan(index = 673869, planInfo = "demo", set = CountSetsImpl.b.countSet591)
  val plan673868 = CountPlan(index = 673868, planInfo = "demn", set = CountSetsImpl.b.countSet591)
  val plan673867 = CountPlan(index = 673867, planInfo = "demm", set = CountSetsImpl.b.countSet596)
  val plan673866 = CountPlan(index = 673866, planInfo = "deml", set = CountSetsImpl.b.countSet591)
  val plan673865 = CountPlan(index = 673865, planInfo = "demk", set = CountSetsImpl.b.countSet591)
  val plan673864 = CountPlan(index = 673864, planInfo = "demj", set = CountSetsImpl.b.countSet596)
  val plan673863 = CountPlan(index = 673863, planInfo = "demi", set = CountSetsImpl.b.countSet591)
  val plan673862 = CountPlan(index = 673862, planInfo = "demh", set = CountSetsImpl.b.countSet591)
  val plan673861 = CountPlan(index = 673861, planInfo = "demg", set = CountSetsImpl.b.countSet596)
  val plan673860 = CountPlan(index = 673860, planInfo = "demf", set = CountSetsImpl.b.countSet600)
  val plan673859 = CountPlan(index = 673859, planInfo = "deme", set = CountSetsImpl.b.countSet600)
  val plan673858 = CountPlan(index = 673858, planInfo = "demd", set = CountSetsImpl.b.countSet600)
  val plan673857 = CountPlan(index = 673857, planInfo = "demc", set = CountSetsImpl.b.countSet600)
  val plan673856 = CountPlan(index = 673856, planInfo = "demb", set = CountSetsImpl.b.countSet600)
  val plan673855 = CountPlan(index = 673855, planInfo = "dema", set = CountSetsImpl.b.countSet600)
  val plan673854 = CountPlan(index = 673854, planInfo = "dels", set = CountSetsImpl.b.countSet591)
  val plan673853 = CountPlan(index = 673853, planInfo = "delr", set = CountSetsImpl.b.countSet591)
  val plan673852 = CountPlan(index = 673852, planInfo = "delq", set = CountSetsImpl.b.countSet591)
  val plan673851 = CountPlan(index = 673851, planInfo = "delp", set = CountSetsImpl.b.countSet591)
  val plan673850 = CountPlan(index = 673850, planInfo = "delo", set = CountSetsImpl.b.countSet591)
  val plan673849 = CountPlan(index = 673849, planInfo = "deln", set = CountSetsImpl.b.countSet591)
  val plan673848 = CountPlan(index = 673848, planInfo = "delm", set = CountSetsImpl.b.countSet591)
  val plan673847 = CountPlan(index = 673847, planInfo = "dell", set = CountSetsImpl.b.countSet591)
  val plan673846 = CountPlan(index = 673846, planInfo = "delk", set = CountSetsImpl.b.countSet591)
  val plan673845 = CountPlan(index = 673845, planInfo = "delj", set = CountSetsImpl.b.countSet591)
  val plan673844 = CountPlan(index = 673844, planInfo = "deli", set = CountSetsImpl.b.countSet591)
  val plan673843 = CountPlan(index = 673843, planInfo = "delh", set = CountSetsImpl.b.countSet591)
  val plan673842 = CountPlan(index = 673842, planInfo = "delg", set = CountSetsImpl.b.countSet591)
  val plan673841 = CountPlan(index = 673841, planInfo = "delf", set = CountSetsImpl.b.countSet591)
  val plan673840 = CountPlan(index = 673840, planInfo = "dele", set = CountSetsImpl.b.countSet591)
  val plan673839 = CountPlan(index = 673839, planInfo = "deld", set = CountSetsImpl.b.countSet591)
  val plan673838 = CountPlan(index = 673838, planInfo = "delc", set = CountSetsImpl.b.countSet591)
  val plan673837 = CountPlan(index = 673837, planInfo = "delb", set = CountSetsImpl.b.countSet591)
  val plan673836 = CountPlan(index = 673836, planInfo = "dela", set = CountSetsImpl.b.countSet591)
  val plan673835 = CountPlan(index = 673835, planInfo = "deks", set = CountSetsImpl.b.countSet599)
  val plan673834 = CountPlan(index = 673834, planInfo = "dekr", set = CountSetsImpl.b.countSet591)
  val plan673833 = CountPlan(index = 673833, planInfo = "dekq", set = CountSetsImpl.b.countSet591)
  val plan673832 = CountPlan(index = 673832, planInfo = "dekp", set = CountSetsImpl.b.countSet591)
  val plan673831 = CountPlan(index = 673831, planInfo = "deko", set = CountSetsImpl.b.countSet591)
  val plan673830 = CountPlan(index = 673830, planInfo = "dekn", set = CountSetsImpl.b.countSet591)
  val plan673829 = CountPlan(index = 673829, planInfo = "dekm", set = CountSetsImpl.b.countSet591)
  val plan673828 = CountPlan(index = 673828, planInfo = "dekl", set = CountSetsImpl.b.countSet591)
  val plan673827 = CountPlan(index = 673827, planInfo = "dekk", set = CountSetsImpl.b.countSet591)
  val sum: List[CountPlan] = List(plan673926,plan673925,plan673924,plan673923,plan673922,plan673921,plan673920,plan673919,plan673918,plan673917,plan673916,plan673915,plan673914,plan673913,plan673912,plan673911,plan673910,plan673909,plan673908,plan673907,plan673906,plan673905,plan673904,plan673903,plan673902,plan673901,plan673900,plan673899,plan673898,plan673897,plan673896,plan673895,plan673894,plan673893,plan673892,plan673891,plan673890,plan673889,plan673888,plan673887,plan673886,plan673885,plan673884,plan673883,plan673882,plan673881,plan673880,plan673879,plan673878,plan673877,plan673876,plan673875,plan673874,plan673873,plan673872,plan673871,plan673870,plan673869,plan673868,plan673867,plan673866,plan673865,plan673864,plan673863,plan673862,plan673861,plan673860,plan673859,plan673858,plan673857,plan673856,plan673855,plan673854,plan673853,plan673852,plan673851,plan673850,plan673849,plan673848,plan673847,plan673846,plan673845,plan673844,plan673843,plan673842,plan673841,plan673840,plan673839,plan673838,plan673837,plan673836,plan673835,plan673834,plan673833,plan673832,plan673831,plan673830,plan673829,plan673828,plan673827)
}
