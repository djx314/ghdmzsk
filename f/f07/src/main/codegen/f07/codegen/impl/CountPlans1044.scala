package f07.codegen.impl
import f07._
object CountPlans1044 {
  val plan677526 = CountPlan(index = 677526, planInfo = "dope", set = CountSetsImpl.b.countSet600)
  val plan677525 = CountPlan(index = 677525, planInfo = "dopd", set = CountSetsImpl.b.countSet600)
  val plan677524 = CountPlan(index = 677524, planInfo = "dopc", set = CountSetsImpl.b.countSet600)
  val plan677523 = CountPlan(index = 677523, planInfo = "dopb", set = CountSetsImpl.b.countSet600)
  val plan677522 = CountPlan(index = 677522, planInfo = "dopa", set = CountSetsImpl.b.countSet600)
  val plan677521 = CountPlan(index = 677521, planInfo = "doos", set = CountSetsImpl.b.countSet591)
  val plan677520 = CountPlan(index = 677520, planInfo = "door", set = CountSetsImpl.b.countSet591)
  val plan677519 = CountPlan(index = 677519, planInfo = "dooq", set = CountSetsImpl.b.countSet591)
  val plan677518 = CountPlan(index = 677518, planInfo = "doop", set = CountSetsImpl.b.countSet591)
  val plan677517 = CountPlan(index = 677517, planInfo = "dooo", set = CountSetsImpl.b.countSet591)
  val plan677516 = CountPlan(index = 677516, planInfo = "doon", set = CountSetsImpl.b.countSet591)
  val plan677515 = CountPlan(index = 677515, planInfo = "doom", set = CountSetsImpl.b.countSet591)
  val plan677514 = CountPlan(index = 677514, planInfo = "dool", set = CountSetsImpl.b.countSet591)
  val plan677513 = CountPlan(index = 677513, planInfo = "dook", set = CountSetsImpl.b.countSet591)
  val plan677512 = CountPlan(index = 677512, planInfo = "dooj", set = CountSetsImpl.b.countSet591)
  val plan677511 = CountPlan(index = 677511, planInfo = "dooi", set = CountSetsImpl.b.countSet591)
  val plan677510 = CountPlan(index = 677510, planInfo = "dooh", set = CountSetsImpl.b.countSet591)
  val plan677509 = CountPlan(index = 677509, planInfo = "doog", set = CountSetsImpl.b.countSet591)
  val plan677508 = CountPlan(index = 677508, planInfo = "doof", set = CountSetsImpl.b.countSet591)
  val plan677507 = CountPlan(index = 677507, planInfo = "dooe", set = CountSetsImpl.b.countSet591)
  val plan677506 = CountPlan(index = 677506, planInfo = "dood", set = CountSetsImpl.b.countSet591)
  val plan677505 = CountPlan(index = 677505, planInfo = "dooc", set = CountSetsImpl.b.countSet591)
  val plan677504 = CountPlan(index = 677504, planInfo = "doob", set = CountSetsImpl.b.countSet591)
  val plan677503 = CountPlan(index = 677503, planInfo = "dooa", set = CountSetsImpl.b.countSet591)
  val plan677502 = CountPlan(index = 677502, planInfo = "dons", set = CountSetsImpl.b.countSet599)
  val plan677501 = CountPlan(index = 677501, planInfo = "donr", set = CountSetsImpl.b.countSet591)
  val plan677500 = CountPlan(index = 677500, planInfo = "donq", set = CountSetsImpl.b.countSet591)
  val plan677499 = CountPlan(index = 677499, planInfo = "donp", set = CountSetsImpl.b.countSet591)
  val plan677498 = CountPlan(index = 677498, planInfo = "dono", set = CountSetsImpl.b.countSet591)
  val plan677497 = CountPlan(index = 677497, planInfo = "donn", set = CountSetsImpl.b.countSet591)
  val plan677496 = CountPlan(index = 677496, planInfo = "donm", set = CountSetsImpl.b.countSet591)
  val plan677495 = CountPlan(index = 677495, planInfo = "donl", set = CountSetsImpl.b.countSet591)
  val plan677494 = CountPlan(index = 677494, planInfo = "donk", set = CountSetsImpl.b.countSet591)
  val plan677493 = CountPlan(index = 677493, planInfo = "donj", set = CountSetsImpl.b.countSet591)
  val plan677492 = CountPlan(index = 677492, planInfo = "doni", set = CountSetsImpl.b.countSet591)
  val plan677491 = CountPlan(index = 677491, planInfo = "donh", set = CountSetsImpl.b.countSet591)
  val plan677490 = CountPlan(index = 677490, planInfo = "dong", set = CountSetsImpl.b.countSet591)
  val plan677489 = CountPlan(index = 677489, planInfo = "donf", set = CountSetsImpl.b.countSet599)
  val plan677488 = CountPlan(index = 677488, planInfo = "done", set = CountSetsImpl.b.countSet599)
  val plan677487 = CountPlan(index = 677487, planInfo = "dond", set = CountSetsImpl.b.countSet599)
  val plan677486 = CountPlan(index = 677486, planInfo = "donc", set = CountSetsImpl.b.countSet599)
  val plan677485 = CountPlan(index = 677485, planInfo = "donb", set = CountSetsImpl.b.countSet599)
  val plan677484 = CountPlan(index = 677484, planInfo = "dona", set = CountSetsImpl.b.countSet599)
  val plan677483 = CountPlan(index = 677483, planInfo = "doms", set = CountSetsImpl.b.countSet600)
  val plan677482 = CountPlan(index = 677482, planInfo = "domr", set = CountSetsImpl.b.countSet591)
  val plan677481 = CountPlan(index = 677481, planInfo = "domq", set = CountSetsImpl.b.countSet591)
  val plan677480 = CountPlan(index = 677480, planInfo = "domp", set = CountSetsImpl.b.countSet596)
  val plan677479 = CountPlan(index = 677479, planInfo = "domo", set = CountSetsImpl.b.countSet591)
  val plan677478 = CountPlan(index = 677478, planInfo = "domn", set = CountSetsImpl.b.countSet591)
  val plan677477 = CountPlan(index = 677477, planInfo = "domm", set = CountSetsImpl.b.countSet596)
  val plan677476 = CountPlan(index = 677476, planInfo = "doml", set = CountSetsImpl.b.countSet591)
  val plan677475 = CountPlan(index = 677475, planInfo = "domk", set = CountSetsImpl.b.countSet591)
  val plan677474 = CountPlan(index = 677474, planInfo = "domj", set = CountSetsImpl.b.countSet596)
  val plan677473 = CountPlan(index = 677473, planInfo = "domi", set = CountSetsImpl.b.countSet591)
  val plan677472 = CountPlan(index = 677472, planInfo = "domh", set = CountSetsImpl.b.countSet591)
  val plan677471 = CountPlan(index = 677471, planInfo = "domg", set = CountSetsImpl.b.countSet596)
  val plan677470 = CountPlan(index = 677470, planInfo = "domf", set = CountSetsImpl.b.countSet600)
  val plan677469 = CountPlan(index = 677469, planInfo = "dome", set = CountSetsImpl.b.countSet600)
  val plan677468 = CountPlan(index = 677468, planInfo = "domd", set = CountSetsImpl.b.countSet600)
  val plan677467 = CountPlan(index = 677467, planInfo = "domc", set = CountSetsImpl.b.countSet600)
  val plan677466 = CountPlan(index = 677466, planInfo = "domb", set = CountSetsImpl.b.countSet600)
  val plan677465 = CountPlan(index = 677465, planInfo = "doma", set = CountSetsImpl.b.countSet600)
  val plan677464 = CountPlan(index = 677464, planInfo = "dols", set = CountSetsImpl.b.countSet591)
  val plan677463 = CountPlan(index = 677463, planInfo = "dolr", set = CountSetsImpl.b.countSet591)
  val plan677462 = CountPlan(index = 677462, planInfo = "dolq", set = CountSetsImpl.b.countSet591)
  val plan677461 = CountPlan(index = 677461, planInfo = "dolp", set = CountSetsImpl.b.countSet591)
  val plan677460 = CountPlan(index = 677460, planInfo = "dolo", set = CountSetsImpl.b.countSet591)
  val plan677459 = CountPlan(index = 677459, planInfo = "doln", set = CountSetsImpl.b.countSet591)
  val plan677458 = CountPlan(index = 677458, planInfo = "dolm", set = CountSetsImpl.b.countSet591)
  val plan677457 = CountPlan(index = 677457, planInfo = "doll", set = CountSetsImpl.b.countSet591)
  val plan677456 = CountPlan(index = 677456, planInfo = "dolk", set = CountSetsImpl.b.countSet591)
  val plan677455 = CountPlan(index = 677455, planInfo = "dolj", set = CountSetsImpl.b.countSet591)
  val plan677454 = CountPlan(index = 677454, planInfo = "doli", set = CountSetsImpl.b.countSet591)
  val plan677453 = CountPlan(index = 677453, planInfo = "dolh", set = CountSetsImpl.b.countSet591)
  val plan677452 = CountPlan(index = 677452, planInfo = "dolg", set = CountSetsImpl.b.countSet591)
  val plan677451 = CountPlan(index = 677451, planInfo = "dolf", set = CountSetsImpl.b.countSet591)
  val plan677450 = CountPlan(index = 677450, planInfo = "dole", set = CountSetsImpl.b.countSet591)
  val plan677449 = CountPlan(index = 677449, planInfo = "dold", set = CountSetsImpl.b.countSet591)
  val plan677448 = CountPlan(index = 677448, planInfo = "dolc", set = CountSetsImpl.b.countSet591)
  val plan677447 = CountPlan(index = 677447, planInfo = "dolb", set = CountSetsImpl.b.countSet591)
  val plan677446 = CountPlan(index = 677446, planInfo = "dola", set = CountSetsImpl.b.countSet591)
  val plan677445 = CountPlan(index = 677445, planInfo = "doks", set = CountSetsImpl.b.countSet599)
  val plan677444 = CountPlan(index = 677444, planInfo = "dokr", set = CountSetsImpl.b.countSet591)
  val plan677443 = CountPlan(index = 677443, planInfo = "dokq", set = CountSetsImpl.b.countSet591)
  val plan677442 = CountPlan(index = 677442, planInfo = "dokp", set = CountSetsImpl.b.countSet591)
  val plan677441 = CountPlan(index = 677441, planInfo = "doko", set = CountSetsImpl.b.countSet591)
  val plan677440 = CountPlan(index = 677440, planInfo = "dokn", set = CountSetsImpl.b.countSet591)
  val plan677439 = CountPlan(index = 677439, planInfo = "dokm", set = CountSetsImpl.b.countSet591)
  val plan677438 = CountPlan(index = 677438, planInfo = "dokl", set = CountSetsImpl.b.countSet591)
  val plan677437 = CountPlan(index = 677437, planInfo = "dokk", set = CountSetsImpl.b.countSet591)
  val plan677436 = CountPlan(index = 677436, planInfo = "dokj", set = CountSetsImpl.b.countSet591)
  val plan677435 = CountPlan(index = 677435, planInfo = "doki", set = CountSetsImpl.b.countSet591)
  val plan677434 = CountPlan(index = 677434, planInfo = "dokh", set = CountSetsImpl.b.countSet591)
  val plan677433 = CountPlan(index = 677433, planInfo = "dokg", set = CountSetsImpl.b.countSet591)
  val plan677432 = CountPlan(index = 677432, planInfo = "dokf", set = CountSetsImpl.b.countSet599)
  val plan677431 = CountPlan(index = 677431, planInfo = "doke", set = CountSetsImpl.b.countSet599)
  val plan677430 = CountPlan(index = 677430, planInfo = "dokd", set = CountSetsImpl.b.countSet599)
  val plan677429 = CountPlan(index = 677429, planInfo = "dokc", set = CountSetsImpl.b.countSet599)
  val plan677428 = CountPlan(index = 677428, planInfo = "dokb", set = CountSetsImpl.b.countSet599)
  val plan677427 = CountPlan(index = 677427, planInfo = "doka", set = CountSetsImpl.b.countSet599)
  val sum: List[CountPlan] = List(plan677526,plan677525,plan677524,plan677523,plan677522,plan677521,plan677520,plan677519,plan677518,plan677517,plan677516,plan677515,plan677514,plan677513,plan677512,plan677511,plan677510,plan677509,plan677508,plan677507,plan677506,plan677505,plan677504,plan677503,plan677502,plan677501,plan677500,plan677499,plan677498,plan677497,plan677496,plan677495,plan677494,plan677493,plan677492,plan677491,plan677490,plan677489,plan677488,plan677487,plan677486,plan677485,plan677484,plan677483,plan677482,plan677481,plan677480,plan677479,plan677478,plan677477,plan677476,plan677475,plan677474,plan677473,plan677472,plan677471,plan677470,plan677469,plan677468,plan677467,plan677466,plan677465,plan677464,plan677463,plan677462,plan677461,plan677460,plan677459,plan677458,plan677457,plan677456,plan677455,plan677454,plan677453,plan677452,plan677451,plan677450,plan677449,plan677448,plan677447,plan677446,plan677445,plan677444,plan677443,plan677442,plan677441,plan677440,plan677439,plan677438,plan677437,plan677436,plan677435,plan677434,plan677433,plan677432,plan677431,plan677430,plan677429,plan677428,plan677427)
}
