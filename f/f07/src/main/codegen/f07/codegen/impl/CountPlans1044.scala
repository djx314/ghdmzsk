package f07.codegen.impl
import f07._
object CountPlans1044 {
  val plan416884 = CountPlan(index = 416884, planInfo = "dope", set = CountSetsImpl.b.countSet60)
  val plan416883 = CountPlan(index = 416883, planInfo = "dopd", set = CountSetsImpl.b.countSet60)
  val plan416882 = CountPlan(index = 416882, planInfo = "dopc", set = CountSetsImpl.b.countSet60)
  val plan416881 = CountPlan(index = 416881, planInfo = "dopb", set = CountSetsImpl.b.countSet60)
  val plan416880 = CountPlan(index = 416880, planInfo = "dopa", set = CountSetsImpl.b.countSet60)
  val plan416879 = CountPlan(index = 416879, planInfo = "doos", set = CountSetsImpl.b.countSet48)
  val plan416878 = CountPlan(index = 416878, planInfo = "door", set = CountSetsImpl.b.countSet48)
  val plan416877 = CountPlan(index = 416877, planInfo = "dooq", set = CountSetsImpl.b.countSet48)
  val plan416876 = CountPlan(index = 416876, planInfo = "doop", set = CountSetsImpl.b.countSet48)
  val plan416875 = CountPlan(index = 416875, planInfo = "dooo", set = CountSetsImpl.b.countSet48)
  val plan416874 = CountPlan(index = 416874, planInfo = "doon", set = CountSetsImpl.b.countSet48)
  val plan416873 = CountPlan(index = 416873, planInfo = "doom", set = CountSetsImpl.b.countSet48)
  val plan416872 = CountPlan(index = 416872, planInfo = "dool", set = CountSetsImpl.b.countSet48)
  val plan416871 = CountPlan(index = 416871, planInfo = "dook", set = CountSetsImpl.b.countSet48)
  val plan416870 = CountPlan(index = 416870, planInfo = "dooj", set = CountSetsImpl.b.countSet48)
  val plan416869 = CountPlan(index = 416869, planInfo = "dooi", set = CountSetsImpl.b.countSet48)
  val plan416868 = CountPlan(index = 416868, planInfo = "dooh", set = CountSetsImpl.b.countSet48)
  val plan416867 = CountPlan(index = 416867, planInfo = "doog", set = CountSetsImpl.b.countSet48)
  val plan416866 = CountPlan(index = 416866, planInfo = "doof", set = CountSetsImpl.b.countSet48)
  val plan416865 = CountPlan(index = 416865, planInfo = "dooe", set = CountSetsImpl.b.countSet48)
  val plan416864 = CountPlan(index = 416864, planInfo = "dood", set = CountSetsImpl.b.countSet48)
  val plan416863 = CountPlan(index = 416863, planInfo = "dooc", set = CountSetsImpl.b.countSet48)
  val plan416862 = CountPlan(index = 416862, planInfo = "doob", set = CountSetsImpl.b.countSet48)
  val plan416861 = CountPlan(index = 416861, planInfo = "dooa", set = CountSetsImpl.b.countSet48)
  val plan416860 = CountPlan(index = 416860, planInfo = "dons", set = CountSetsImpl.b.countSet59)
  val plan416859 = CountPlan(index = 416859, planInfo = "donr", set = CountSetsImpl.b.countSet48)
  val plan416858 = CountPlan(index = 416858, planInfo = "donq", set = CountSetsImpl.b.countSet48)
  val plan416857 = CountPlan(index = 416857, planInfo = "donp", set = CountSetsImpl.b.countSet48)
  val plan416856 = CountPlan(index = 416856, planInfo = "dono", set = CountSetsImpl.b.countSet48)
  val plan416855 = CountPlan(index = 416855, planInfo = "donn", set = CountSetsImpl.b.countSet48)
  val plan416854 = CountPlan(index = 416854, planInfo = "donm", set = CountSetsImpl.b.countSet48)
  val plan416853 = CountPlan(index = 416853, planInfo = "donl", set = CountSetsImpl.b.countSet48)
  val plan416852 = CountPlan(index = 416852, planInfo = "donk", set = CountSetsImpl.b.countSet48)
  val plan416851 = CountPlan(index = 416851, planInfo = "donj", set = CountSetsImpl.b.countSet48)
  val plan416850 = CountPlan(index = 416850, planInfo = "doni", set = CountSetsImpl.b.countSet48)
  val plan416849 = CountPlan(index = 416849, planInfo = "donh", set = CountSetsImpl.b.countSet48)
  val plan416848 = CountPlan(index = 416848, planInfo = "dong", set = CountSetsImpl.b.countSet48)
  val plan416847 = CountPlan(index = 416847, planInfo = "donf", set = CountSetsImpl.b.countSet59)
  val plan416846 = CountPlan(index = 416846, planInfo = "done", set = CountSetsImpl.b.countSet59)
  val plan416845 = CountPlan(index = 416845, planInfo = "dond", set = CountSetsImpl.b.countSet59)
  val plan416844 = CountPlan(index = 416844, planInfo = "donc", set = CountSetsImpl.b.countSet59)
  val plan416843 = CountPlan(index = 416843, planInfo = "donb", set = CountSetsImpl.b.countSet59)
  val plan416842 = CountPlan(index = 416842, planInfo = "dona", set = CountSetsImpl.b.countSet59)
  val plan416841 = CountPlan(index = 416841, planInfo = "doms", set = CountSetsImpl.b.countSet60)
  val plan416840 = CountPlan(index = 416840, planInfo = "domr", set = CountSetsImpl.b.countSet48)
  val plan416839 = CountPlan(index = 416839, planInfo = "domq", set = CountSetsImpl.b.countSet48)
  val plan416838 = CountPlan(index = 416838, planInfo = "domp", set = CountSetsImpl.b.countSet56)
  val plan416837 = CountPlan(index = 416837, planInfo = "domo", set = CountSetsImpl.b.countSet48)
  val plan416836 = CountPlan(index = 416836, planInfo = "domn", set = CountSetsImpl.b.countSet48)
  val plan416835 = CountPlan(index = 416835, planInfo = "domm", set = CountSetsImpl.b.countSet56)
  val plan416834 = CountPlan(index = 416834, planInfo = "doml", set = CountSetsImpl.b.countSet48)
  val plan416833 = CountPlan(index = 416833, planInfo = "domk", set = CountSetsImpl.b.countSet48)
  val plan416832 = CountPlan(index = 416832, planInfo = "domj", set = CountSetsImpl.b.countSet56)
  val plan416831 = CountPlan(index = 416831, planInfo = "domi", set = CountSetsImpl.b.countSet48)
  val plan416830 = CountPlan(index = 416830, planInfo = "domh", set = CountSetsImpl.b.countSet48)
  val plan416829 = CountPlan(index = 416829, planInfo = "domg", set = CountSetsImpl.b.countSet56)
  val plan416828 = CountPlan(index = 416828, planInfo = "domf", set = CountSetsImpl.b.countSet60)
  val plan416827 = CountPlan(index = 416827, planInfo = "dome", set = CountSetsImpl.b.countSet60)
  val plan416826 = CountPlan(index = 416826, planInfo = "domd", set = CountSetsImpl.b.countSet60)
  val plan416825 = CountPlan(index = 416825, planInfo = "domc", set = CountSetsImpl.b.countSet60)
  val plan416824 = CountPlan(index = 416824, planInfo = "domb", set = CountSetsImpl.b.countSet60)
  val plan416823 = CountPlan(index = 416823, planInfo = "doma", set = CountSetsImpl.b.countSet60)
  val plan416822 = CountPlan(index = 416822, planInfo = "dols", set = CountSetsImpl.b.countSet48)
  val plan416821 = CountPlan(index = 416821, planInfo = "dolr", set = CountSetsImpl.b.countSet48)
  val plan416820 = CountPlan(index = 416820, planInfo = "dolq", set = CountSetsImpl.b.countSet48)
  val plan416819 = CountPlan(index = 416819, planInfo = "dolp", set = CountSetsImpl.b.countSet48)
  val plan416818 = CountPlan(index = 416818, planInfo = "dolo", set = CountSetsImpl.b.countSet48)
  val plan416817 = CountPlan(index = 416817, planInfo = "doln", set = CountSetsImpl.b.countSet48)
  val plan416816 = CountPlan(index = 416816, planInfo = "dolm", set = CountSetsImpl.b.countSet48)
  val plan416815 = CountPlan(index = 416815, planInfo = "doll", set = CountSetsImpl.b.countSet48)
  val plan416814 = CountPlan(index = 416814, planInfo = "dolk", set = CountSetsImpl.b.countSet48)
  val plan416813 = CountPlan(index = 416813, planInfo = "dolj", set = CountSetsImpl.b.countSet48)
  val plan416812 = CountPlan(index = 416812, planInfo = "doli", set = CountSetsImpl.b.countSet48)
  val plan416811 = CountPlan(index = 416811, planInfo = "dolh", set = CountSetsImpl.b.countSet48)
  val plan416810 = CountPlan(index = 416810, planInfo = "dolg", set = CountSetsImpl.b.countSet48)
  val plan416809 = CountPlan(index = 416809, planInfo = "dolf", set = CountSetsImpl.b.countSet48)
  val plan416808 = CountPlan(index = 416808, planInfo = "dole", set = CountSetsImpl.b.countSet48)
  val plan416807 = CountPlan(index = 416807, planInfo = "dold", set = CountSetsImpl.b.countSet48)
  val plan416806 = CountPlan(index = 416806, planInfo = "dolc", set = CountSetsImpl.b.countSet48)
  val plan416805 = CountPlan(index = 416805, planInfo = "dolb", set = CountSetsImpl.b.countSet48)
  val plan416804 = CountPlan(index = 416804, planInfo = "dola", set = CountSetsImpl.b.countSet48)
  val plan416803 = CountPlan(index = 416803, planInfo = "doks", set = CountSetsImpl.b.countSet59)
  val plan416802 = CountPlan(index = 416802, planInfo = "dokr", set = CountSetsImpl.b.countSet48)
  val plan416801 = CountPlan(index = 416801, planInfo = "dokq", set = CountSetsImpl.b.countSet48)
  val plan416800 = CountPlan(index = 416800, planInfo = "dokp", set = CountSetsImpl.b.countSet48)
  val plan416799 = CountPlan(index = 416799, planInfo = "doko", set = CountSetsImpl.b.countSet48)
  val plan416798 = CountPlan(index = 416798, planInfo = "dokn", set = CountSetsImpl.b.countSet48)
  val plan416797 = CountPlan(index = 416797, planInfo = "dokm", set = CountSetsImpl.b.countSet48)
  val plan416796 = CountPlan(index = 416796, planInfo = "dokl", set = CountSetsImpl.b.countSet48)
  val plan416795 = CountPlan(index = 416795, planInfo = "dokk", set = CountSetsImpl.b.countSet48)
  val plan416794 = CountPlan(index = 416794, planInfo = "dokj", set = CountSetsImpl.b.countSet48)
  val plan416793 = CountPlan(index = 416793, planInfo = "doki", set = CountSetsImpl.b.countSet48)
  val plan416792 = CountPlan(index = 416792, planInfo = "dokh", set = CountSetsImpl.b.countSet48)
  val plan416791 = CountPlan(index = 416791, planInfo = "dokg", set = CountSetsImpl.b.countSet48)
  val plan416790 = CountPlan(index = 416790, planInfo = "dokf", set = CountSetsImpl.b.countSet59)
  val plan416789 = CountPlan(index = 416789, planInfo = "doke", set = CountSetsImpl.b.countSet59)
  val plan416788 = CountPlan(index = 416788, planInfo = "dokd", set = CountSetsImpl.b.countSet59)
  val plan416787 = CountPlan(index = 416787, planInfo = "dokc", set = CountSetsImpl.b.countSet59)
  val plan416786 = CountPlan(index = 416786, planInfo = "dokb", set = CountSetsImpl.b.countSet59)
  val plan416785 = CountPlan(index = 416785, planInfo = "doka", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan416884,plan416883,plan416882,plan416881,plan416880,plan416879,plan416878,plan416877,plan416876,plan416875,plan416874,plan416873,plan416872,plan416871,plan416870,plan416869,plan416868,plan416867,plan416866,plan416865,plan416864,plan416863,plan416862,plan416861,plan416860,plan416859,plan416858,plan416857,plan416856,plan416855,plan416854,plan416853,plan416852,plan416851,plan416850,plan416849,plan416848,plan416847,plan416846,plan416845,plan416844,plan416843,plan416842,plan416841,plan416840,plan416839,plan416838,plan416837,plan416836,plan416835,plan416834,plan416833,plan416832,plan416831,plan416830,plan416829,plan416828,plan416827,plan416826,plan416825,plan416824,plan416823,plan416822,plan416821,plan416820,plan416819,plan416818,plan416817,plan416816,plan416815,plan416814,plan416813,plan416812,plan416811,plan416810,plan416809,plan416808,plan416807,plan416806,plan416805,plan416804,plan416803,plan416802,plan416801,plan416800,plan416799,plan416798,plan416797,plan416796,plan416795,plan416794,plan416793,plan416792,plan416791,plan416790,plan416789,plan416788,plan416787,plan416786,plan416785)
}
