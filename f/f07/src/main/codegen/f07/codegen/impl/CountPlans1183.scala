package f07.codegen.impl
import f07._
object CountPlans1183 {
  val plan402984 = CountPlan(index = 402984, planInfo = "bofm", set = CountSetsImpl.b.countSet59)
  val plan402983 = CountPlan(index = 402983, planInfo = "bofl", set = CountSetsImpl.b.countSet59)
  val plan402982 = CountPlan(index = 402982, planInfo = "bofk", set = CountSetsImpl.b.countSet59)
  val plan402981 = CountPlan(index = 402981, planInfo = "bofj", set = CountSetsImpl.b.countSet59)
  val plan402980 = CountPlan(index = 402980, planInfo = "bofi", set = CountSetsImpl.b.countSet59)
  val plan402979 = CountPlan(index = 402979, planInfo = "bofh", set = CountSetsImpl.b.countSet59)
  val plan402978 = CountPlan(index = 402978, planInfo = "bofg", set = CountSetsImpl.b.countSet59)
  val plan402977 = CountPlan(index = 402977, planInfo = "boff", set = CountSetsImpl.b.countSet59)
  val plan402976 = CountPlan(index = 402976, planInfo = "bofe", set = CountSetsImpl.b.countSet59)
  val plan402975 = CountPlan(index = 402975, planInfo = "bofd", set = CountSetsImpl.b.countSet59)
  val plan402974 = CountPlan(index = 402974, planInfo = "bofc", set = CountSetsImpl.b.countSet59)
  val plan402973 = CountPlan(index = 402973, planInfo = "bofb", set = CountSetsImpl.b.countSet59)
  val plan402972 = CountPlan(index = 402972, planInfo = "bofa", set = CountSetsImpl.b.countSet59)
  val plan402971 = CountPlan(index = 402971, planInfo = "boes", set = CountSetsImpl.b.countSet59)
  val plan402970 = CountPlan(index = 402970, planInfo = "boer", set = CountSetsImpl.b.countSet59)
  val plan402969 = CountPlan(index = 402969, planInfo = "boeq", set = CountSetsImpl.b.countSet59)
  val plan402968 = CountPlan(index = 402968, planInfo = "boep", set = CountSetsImpl.b.countSet59)
  val plan402967 = CountPlan(index = 402967, planInfo = "boeo", set = CountSetsImpl.b.countSet59)
  val plan402966 = CountPlan(index = 402966, planInfo = "boen", set = CountSetsImpl.b.countSet59)
  val plan402965 = CountPlan(index = 402965, planInfo = "boem", set = CountSetsImpl.b.countSet59)
  val plan402964 = CountPlan(index = 402964, planInfo = "boel", set = CountSetsImpl.b.countSet59)
  val plan402963 = CountPlan(index = 402963, planInfo = "boek", set = CountSetsImpl.b.countSet59)
  val plan402962 = CountPlan(index = 402962, planInfo = "boej", set = CountSetsImpl.b.countSet59)
  val plan402961 = CountPlan(index = 402961, planInfo = "boei", set = CountSetsImpl.b.countSet59)
  val plan402960 = CountPlan(index = 402960, planInfo = "boeh", set = CountSetsImpl.b.countSet59)
  val plan402959 = CountPlan(index = 402959, planInfo = "boeg", set = CountSetsImpl.b.countSet59)
  val plan402958 = CountPlan(index = 402958, planInfo = "boef", set = CountSetsImpl.b.countSet59)
  val plan402957 = CountPlan(index = 402957, planInfo = "boee", set = CountSetsImpl.b.countSet59)
  val plan402956 = CountPlan(index = 402956, planInfo = "boed", set = CountSetsImpl.b.countSet59)
  val plan402955 = CountPlan(index = 402955, planInfo = "boec", set = CountSetsImpl.b.countSet59)
  val plan402954 = CountPlan(index = 402954, planInfo = "boeb", set = CountSetsImpl.b.countSet59)
  val plan402953 = CountPlan(index = 402953, planInfo = "boea", set = CountSetsImpl.b.countSet59)
  val plan402952 = CountPlan(index = 402952, planInfo = "bods", set = CountSetsImpl.b.countSet59)
  val plan402951 = CountPlan(index = 402951, planInfo = "bodr", set = CountSetsImpl.b.countSet59)
  val plan402950 = CountPlan(index = 402950, planInfo = "bodq", set = CountSetsImpl.b.countSet59)
  val plan402949 = CountPlan(index = 402949, planInfo = "bodp", set = CountSetsImpl.b.countSet59)
  val plan402948 = CountPlan(index = 402948, planInfo = "bodo", set = CountSetsImpl.b.countSet59)
  val plan402947 = CountPlan(index = 402947, planInfo = "bodn", set = CountSetsImpl.b.countSet59)
  val plan402946 = CountPlan(index = 402946, planInfo = "bodm", set = CountSetsImpl.b.countSet59)
  val plan402945 = CountPlan(index = 402945, planInfo = "bodl", set = CountSetsImpl.b.countSet59)
  val plan402944 = CountPlan(index = 402944, planInfo = "bodk", set = CountSetsImpl.b.countSet59)
  val plan402943 = CountPlan(index = 402943, planInfo = "bodj", set = CountSetsImpl.b.countSet59)
  val plan402942 = CountPlan(index = 402942, planInfo = "bodi", set = CountSetsImpl.b.countSet59)
  val plan402941 = CountPlan(index = 402941, planInfo = "bodh", set = CountSetsImpl.b.countSet59)
  val plan402940 = CountPlan(index = 402940, planInfo = "bodg", set = CountSetsImpl.b.countSet59)
  val plan402939 = CountPlan(index = 402939, planInfo = "bodf", set = CountSetsImpl.b.countSet59)
  val plan402938 = CountPlan(index = 402938, planInfo = "bode", set = CountSetsImpl.b.countSet59)
  val plan402937 = CountPlan(index = 402937, planInfo = "bodd", set = CountSetsImpl.b.countSet59)
  val plan402936 = CountPlan(index = 402936, planInfo = "bodc", set = CountSetsImpl.b.countSet59)
  val plan402935 = CountPlan(index = 402935, planInfo = "bodb", set = CountSetsImpl.b.countSet59)
  val plan402934 = CountPlan(index = 402934, planInfo = "boda", set = CountSetsImpl.b.countSet59)
  val plan402933 = CountPlan(index = 402933, planInfo = "bocs", set = CountSetsImpl.b.countSet59)
  val plan402932 = CountPlan(index = 402932, planInfo = "bocr", set = CountSetsImpl.b.countSet59)
  val plan402931 = CountPlan(index = 402931, planInfo = "bocq", set = CountSetsImpl.b.countSet59)
  val plan402930 = CountPlan(index = 402930, planInfo = "bocp", set = CountSetsImpl.b.countSet59)
  val plan402929 = CountPlan(index = 402929, planInfo = "boco", set = CountSetsImpl.b.countSet59)
  val plan402928 = CountPlan(index = 402928, planInfo = "bocn", set = CountSetsImpl.b.countSet59)
  val plan402927 = CountPlan(index = 402927, planInfo = "bocm", set = CountSetsImpl.b.countSet59)
  val plan402926 = CountPlan(index = 402926, planInfo = "bocl", set = CountSetsImpl.b.countSet59)
  val plan402925 = CountPlan(index = 402925, planInfo = "bock", set = CountSetsImpl.b.countSet59)
  val plan402924 = CountPlan(index = 402924, planInfo = "bocj", set = CountSetsImpl.b.countSet59)
  val plan402923 = CountPlan(index = 402923, planInfo = "boci", set = CountSetsImpl.b.countSet59)
  val plan402922 = CountPlan(index = 402922, planInfo = "boch", set = CountSetsImpl.b.countSet59)
  val plan402921 = CountPlan(index = 402921, planInfo = "bocg", set = CountSetsImpl.b.countSet59)
  val plan402920 = CountPlan(index = 402920, planInfo = "bocf", set = CountSetsImpl.b.countSet59)
  val plan402919 = CountPlan(index = 402919, planInfo = "boce", set = CountSetsImpl.b.countSet59)
  val plan402918 = CountPlan(index = 402918, planInfo = "bocd", set = CountSetsImpl.b.countSet59)
  val plan402917 = CountPlan(index = 402917, planInfo = "bocc", set = CountSetsImpl.b.countSet59)
  val plan402916 = CountPlan(index = 402916, planInfo = "bocb", set = CountSetsImpl.b.countSet59)
  val plan402915 = CountPlan(index = 402915, planInfo = "boca", set = CountSetsImpl.b.countSet59)
  val plan402914 = CountPlan(index = 402914, planInfo = "bobs", set = CountSetsImpl.b.countSet59)
  val plan402913 = CountPlan(index = 402913, planInfo = "bobr", set = CountSetsImpl.b.countSet59)
  val plan402912 = CountPlan(index = 402912, planInfo = "bobq", set = CountSetsImpl.b.countSet59)
  val plan402911 = CountPlan(index = 402911, planInfo = "bobp", set = CountSetsImpl.b.countSet59)
  val plan402910 = CountPlan(index = 402910, planInfo = "bobo", set = CountSetsImpl.b.countSet59)
  val plan402909 = CountPlan(index = 402909, planInfo = "bobn", set = CountSetsImpl.b.countSet59)
  val plan402908 = CountPlan(index = 402908, planInfo = "bobm", set = CountSetsImpl.b.countSet59)
  val plan402907 = CountPlan(index = 402907, planInfo = "bobl", set = CountSetsImpl.b.countSet59)
  val plan402906 = CountPlan(index = 402906, planInfo = "bobk", set = CountSetsImpl.b.countSet59)
  val plan402905 = CountPlan(index = 402905, planInfo = "bobj", set = CountSetsImpl.b.countSet59)
  val plan402904 = CountPlan(index = 402904, planInfo = "bobi", set = CountSetsImpl.b.countSet59)
  val plan402903 = CountPlan(index = 402903, planInfo = "bobh", set = CountSetsImpl.b.countSet59)
  val plan402902 = CountPlan(index = 402902, planInfo = "bobg", set = CountSetsImpl.b.countSet59)
  val plan402901 = CountPlan(index = 402901, planInfo = "bobf", set = CountSetsImpl.b.countSet59)
  val plan402900 = CountPlan(index = 402900, planInfo = "bobe", set = CountSetsImpl.b.countSet59)
  val plan402899 = CountPlan(index = 402899, planInfo = "bobd", set = CountSetsImpl.b.countSet59)
  val plan402898 = CountPlan(index = 402898, planInfo = "bobc", set = CountSetsImpl.b.countSet59)
  val plan402897 = CountPlan(index = 402897, planInfo = "bobb", set = CountSetsImpl.b.countSet59)
  val plan402896 = CountPlan(index = 402896, planInfo = "boba", set = CountSetsImpl.b.countSet59)
  val plan402895 = CountPlan(index = 402895, planInfo = "boas", set = CountSetsImpl.b.countSet59)
  val plan402894 = CountPlan(index = 402894, planInfo = "boar", set = CountSetsImpl.b.countSet59)
  val plan402893 = CountPlan(index = 402893, planInfo = "boaq", set = CountSetsImpl.b.countSet59)
  val plan402892 = CountPlan(index = 402892, planInfo = "boap", set = CountSetsImpl.b.countSet59)
  val plan402891 = CountPlan(index = 402891, planInfo = "boao", set = CountSetsImpl.b.countSet59)
  val plan402890 = CountPlan(index = 402890, planInfo = "boan", set = CountSetsImpl.b.countSet59)
  val plan402889 = CountPlan(index = 402889, planInfo = "boam", set = CountSetsImpl.b.countSet59)
  val plan402888 = CountPlan(index = 402888, planInfo = "boal", set = CountSetsImpl.b.countSet59)
  val plan402887 = CountPlan(index = 402887, planInfo = "boak", set = CountSetsImpl.b.countSet59)
  val plan402886 = CountPlan(index = 402886, planInfo = "boaj", set = CountSetsImpl.b.countSet59)
  val plan402885 = CountPlan(index = 402885, planInfo = "boai", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan402984,plan402983,plan402982,plan402981,plan402980,plan402979,plan402978,plan402977,plan402976,plan402975,plan402974,plan402973,plan402972,plan402971,plan402970,plan402969,plan402968,plan402967,plan402966,plan402965,plan402964,plan402963,plan402962,plan402961,plan402960,plan402959,plan402958,plan402957,plan402956,plan402955,plan402954,plan402953,plan402952,plan402951,plan402950,plan402949,plan402948,plan402947,plan402946,plan402945,plan402944,plan402943,plan402942,plan402941,plan402940,plan402939,plan402938,plan402937,plan402936,plan402935,plan402934,plan402933,plan402932,plan402931,plan402930,plan402929,plan402928,plan402927,plan402926,plan402925,plan402924,plan402923,plan402922,plan402921,plan402920,plan402919,plan402918,plan402917,plan402916,plan402915,plan402914,plan402913,plan402912,plan402911,plan402910,plan402909,plan402908,plan402907,plan402906,plan402905,plan402904,plan402903,plan402902,plan402901,plan402900,plan402899,plan402898,plan402897,plan402896,plan402895,plan402894,plan402893,plan402892,plan402891,plan402890,plan402889,plan402888,plan402887,plan402886,plan402885)
}
