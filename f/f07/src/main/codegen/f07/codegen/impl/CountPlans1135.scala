package f07.codegen.impl
import f07._
object CountPlans1135 {
  val plan407784 = CountPlan(index = 407784, planInfo = "cilf", set = CountSetsImpl.b.countSet47)
  val plan407783 = CountPlan(index = 407783, planInfo = "cile", set = CountSetsImpl.b.countSet47)
  val plan407782 = CountPlan(index = 407782, planInfo = "cild", set = CountSetsImpl.b.countSet47)
  val plan407781 = CountPlan(index = 407781, planInfo = "cilc", set = CountSetsImpl.b.countSet47)
  val plan407780 = CountPlan(index = 407780, planInfo = "cilb", set = CountSetsImpl.b.countSet47)
  val plan407779 = CountPlan(index = 407779, planInfo = "cila", set = CountSetsImpl.b.countSet47)
  val plan407778 = CountPlan(index = 407778, planInfo = "ciks", set = CountSetsImpl.b.countSet47)
  val plan407777 = CountPlan(index = 407777, planInfo = "cikr", set = CountSetsImpl.b.countSet47)
  val plan407776 = CountPlan(index = 407776, planInfo = "cikq", set = CountSetsImpl.b.countSet47)
  val plan407775 = CountPlan(index = 407775, planInfo = "cikp", set = CountSetsImpl.b.countSet47)
  val plan407774 = CountPlan(index = 407774, planInfo = "ciko", set = CountSetsImpl.b.countSet47)
  val plan407773 = CountPlan(index = 407773, planInfo = "cikn", set = CountSetsImpl.b.countSet47)
  val plan407772 = CountPlan(index = 407772, planInfo = "cikm", set = CountSetsImpl.b.countSet47)
  val plan407771 = CountPlan(index = 407771, planInfo = "cikl", set = CountSetsImpl.b.countSet47)
  val plan407770 = CountPlan(index = 407770, planInfo = "cikk", set = CountSetsImpl.b.countSet47)
  val plan407769 = CountPlan(index = 407769, planInfo = "cikj", set = CountSetsImpl.b.countSet47)
  val plan407768 = CountPlan(index = 407768, planInfo = "ciki", set = CountSetsImpl.b.countSet47)
  val plan407767 = CountPlan(index = 407767, planInfo = "cikh", set = CountSetsImpl.b.countSet47)
  val plan407766 = CountPlan(index = 407766, planInfo = "cikg", set = CountSetsImpl.b.countSet47)
  val plan407765 = CountPlan(index = 407765, planInfo = "cikf", set = CountSetsImpl.b.countSet47)
  val plan407764 = CountPlan(index = 407764, planInfo = "cike", set = CountSetsImpl.b.countSet47)
  val plan407763 = CountPlan(index = 407763, planInfo = "cikd", set = CountSetsImpl.b.countSet47)
  val plan407762 = CountPlan(index = 407762, planInfo = "cikc", set = CountSetsImpl.b.countSet47)
  val plan407761 = CountPlan(index = 407761, planInfo = "cikb", set = CountSetsImpl.b.countSet47)
  val plan407760 = CountPlan(index = 407760, planInfo = "cika", set = CountSetsImpl.b.countSet47)
  val plan407759 = CountPlan(index = 407759, planInfo = "cijs", set = CountSetsImpl.b.countSet47)
  val plan407758 = CountPlan(index = 407758, planInfo = "cijr", set = CountSetsImpl.b.countSet47)
  val plan407757 = CountPlan(index = 407757, planInfo = "cijq", set = CountSetsImpl.b.countSet47)
  val plan407756 = CountPlan(index = 407756, planInfo = "cijp", set = CountSetsImpl.b.countSet47)
  val plan407755 = CountPlan(index = 407755, planInfo = "cijo", set = CountSetsImpl.b.countSet47)
  val plan407754 = CountPlan(index = 407754, planInfo = "cijn", set = CountSetsImpl.b.countSet47)
  val plan407753 = CountPlan(index = 407753, planInfo = "cijm", set = CountSetsImpl.b.countSet47)
  val plan407752 = CountPlan(index = 407752, planInfo = "cijl", set = CountSetsImpl.b.countSet47)
  val plan407751 = CountPlan(index = 407751, planInfo = "cijk", set = CountSetsImpl.b.countSet47)
  val plan407750 = CountPlan(index = 407750, planInfo = "cijj", set = CountSetsImpl.b.countSet47)
  val plan407749 = CountPlan(index = 407749, planInfo = "ciji", set = CountSetsImpl.b.countSet47)
  val plan407748 = CountPlan(index = 407748, planInfo = "cijh", set = CountSetsImpl.b.countSet47)
  val plan407747 = CountPlan(index = 407747, planInfo = "cijg", set = CountSetsImpl.b.countSet47)
  val plan407746 = CountPlan(index = 407746, planInfo = "cijf", set = CountSetsImpl.b.countSet47)
  val plan407745 = CountPlan(index = 407745, planInfo = "cije", set = CountSetsImpl.b.countSet47)
  val plan407744 = CountPlan(index = 407744, planInfo = "cijd", set = CountSetsImpl.b.countSet47)
  val plan407743 = CountPlan(index = 407743, planInfo = "cijc", set = CountSetsImpl.b.countSet47)
  val plan407742 = CountPlan(index = 407742, planInfo = "cijb", set = CountSetsImpl.b.countSet47)
  val plan407741 = CountPlan(index = 407741, planInfo = "cija", set = CountSetsImpl.b.countSet47)
  val plan407740 = CountPlan(index = 407740, planInfo = "ciis", set = CountSetsImpl.b.countSet47)
  val plan407739 = CountPlan(index = 407739, planInfo = "ciir", set = CountSetsImpl.b.countSet47)
  val plan407738 = CountPlan(index = 407738, planInfo = "ciiq", set = CountSetsImpl.b.countSet47)
  val plan407737 = CountPlan(index = 407737, planInfo = "ciip", set = CountSetsImpl.b.countSet47)
  val plan407736 = CountPlan(index = 407736, planInfo = "ciio", set = CountSetsImpl.b.countSet47)
  val plan407735 = CountPlan(index = 407735, planInfo = "ciin", set = CountSetsImpl.b.countSet47)
  val plan407734 = CountPlan(index = 407734, planInfo = "ciim", set = CountSetsImpl.b.countSet47)
  val plan407733 = CountPlan(index = 407733, planInfo = "ciil", set = CountSetsImpl.b.countSet47)
  val plan407732 = CountPlan(index = 407732, planInfo = "ciik", set = CountSetsImpl.b.countSet47)
  val plan407731 = CountPlan(index = 407731, planInfo = "ciij", set = CountSetsImpl.b.countSet47)
  val plan407730 = CountPlan(index = 407730, planInfo = "ciii", set = CountSetsImpl.b.countSet47)
  val plan407729 = CountPlan(index = 407729, planInfo = "ciih", set = CountSetsImpl.b.countSet47)
  val plan407728 = CountPlan(index = 407728, planInfo = "ciig", set = CountSetsImpl.b.countSet47)
  val plan407727 = CountPlan(index = 407727, planInfo = "ciif", set = CountSetsImpl.b.countSet47)
  val plan407726 = CountPlan(index = 407726, planInfo = "ciie", set = CountSetsImpl.b.countSet47)
  val plan407725 = CountPlan(index = 407725, planInfo = "ciid", set = CountSetsImpl.b.countSet47)
  val plan407724 = CountPlan(index = 407724, planInfo = "ciic", set = CountSetsImpl.b.countSet47)
  val plan407723 = CountPlan(index = 407723, planInfo = "ciib", set = CountSetsImpl.b.countSet47)
  val plan407722 = CountPlan(index = 407722, planInfo = "ciia", set = CountSetsImpl.b.countSet47)
  val plan407721 = CountPlan(index = 407721, planInfo = "cihs", set = CountSetsImpl.b.countSet47)
  val plan407720 = CountPlan(index = 407720, planInfo = "cihr", set = CountSetsImpl.b.countSet47)
  val plan407719 = CountPlan(index = 407719, planInfo = "cihq", set = CountSetsImpl.b.countSet47)
  val plan407718 = CountPlan(index = 407718, planInfo = "cihp", set = CountSetsImpl.b.countSet47)
  val plan407717 = CountPlan(index = 407717, planInfo = "ciho", set = CountSetsImpl.b.countSet47)
  val plan407716 = CountPlan(index = 407716, planInfo = "cihn", set = CountSetsImpl.b.countSet47)
  val plan407715 = CountPlan(index = 407715, planInfo = "cihm", set = CountSetsImpl.b.countSet47)
  val plan407714 = CountPlan(index = 407714, planInfo = "cihl", set = CountSetsImpl.b.countSet47)
  val plan407713 = CountPlan(index = 407713, planInfo = "cihk", set = CountSetsImpl.b.countSet47)
  val plan407712 = CountPlan(index = 407712, planInfo = "cihj", set = CountSetsImpl.b.countSet47)
  val plan407711 = CountPlan(index = 407711, planInfo = "cihi", set = CountSetsImpl.b.countSet47)
  val plan407710 = CountPlan(index = 407710, planInfo = "cihh", set = CountSetsImpl.b.countSet47)
  val plan407709 = CountPlan(index = 407709, planInfo = "cihg", set = CountSetsImpl.b.countSet47)
  val plan407708 = CountPlan(index = 407708, planInfo = "cihf", set = CountSetsImpl.b.countSet47)
  val plan407707 = CountPlan(index = 407707, planInfo = "cihe", set = CountSetsImpl.b.countSet47)
  val plan407706 = CountPlan(index = 407706, planInfo = "cihd", set = CountSetsImpl.b.countSet47)
  val plan407705 = CountPlan(index = 407705, planInfo = "cihc", set = CountSetsImpl.b.countSet47)
  val plan407704 = CountPlan(index = 407704, planInfo = "cihb", set = CountSetsImpl.b.countSet47)
  val plan407703 = CountPlan(index = 407703, planInfo = "ciha", set = CountSetsImpl.b.countSet47)
  val plan407702 = CountPlan(index = 407702, planInfo = "cigs", set = CountSetsImpl.b.countSet47)
  val plan407701 = CountPlan(index = 407701, planInfo = "cigr", set = CountSetsImpl.b.countSet47)
  val plan407700 = CountPlan(index = 407700, planInfo = "cigq", set = CountSetsImpl.b.countSet47)
  val plan407699 = CountPlan(index = 407699, planInfo = "cigp", set = CountSetsImpl.b.countSet47)
  val plan407698 = CountPlan(index = 407698, planInfo = "cigo", set = CountSetsImpl.b.countSet47)
  val plan407697 = CountPlan(index = 407697, planInfo = "cign", set = CountSetsImpl.b.countSet47)
  val plan407696 = CountPlan(index = 407696, planInfo = "cigm", set = CountSetsImpl.b.countSet47)
  val plan407695 = CountPlan(index = 407695, planInfo = "cigl", set = CountSetsImpl.b.countSet47)
  val plan407694 = CountPlan(index = 407694, planInfo = "cigk", set = CountSetsImpl.b.countSet47)
  val plan407693 = CountPlan(index = 407693, planInfo = "cigj", set = CountSetsImpl.b.countSet47)
  val plan407692 = CountPlan(index = 407692, planInfo = "cigi", set = CountSetsImpl.b.countSet47)
  val plan407691 = CountPlan(index = 407691, planInfo = "cigh", set = CountSetsImpl.b.countSet47)
  val plan407690 = CountPlan(index = 407690, planInfo = "cigg", set = CountSetsImpl.b.countSet47)
  val plan407689 = CountPlan(index = 407689, planInfo = "cigf", set = CountSetsImpl.b.countSet47)
  val plan407688 = CountPlan(index = 407688, planInfo = "cige", set = CountSetsImpl.b.countSet47)
  val plan407687 = CountPlan(index = 407687, planInfo = "cigd", set = CountSetsImpl.b.countSet47)
  val plan407686 = CountPlan(index = 407686, planInfo = "cigc", set = CountSetsImpl.b.countSet47)
  val plan407685 = CountPlan(index = 407685, planInfo = "cigb", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan407784,plan407783,plan407782,plan407781,plan407780,plan407779,plan407778,plan407777,plan407776,plan407775,plan407774,plan407773,plan407772,plan407771,plan407770,plan407769,plan407768,plan407767,plan407766,plan407765,plan407764,plan407763,plan407762,plan407761,plan407760,plan407759,plan407758,plan407757,plan407756,plan407755,plan407754,plan407753,plan407752,plan407751,plan407750,plan407749,plan407748,plan407747,plan407746,plan407745,plan407744,plan407743,plan407742,plan407741,plan407740,plan407739,plan407738,plan407737,plan407736,plan407735,plan407734,plan407733,plan407732,plan407731,plan407730,plan407729,plan407728,plan407727,plan407726,plan407725,plan407724,plan407723,plan407722,plan407721,plan407720,plan407719,plan407718,plan407717,plan407716,plan407715,plan407714,plan407713,plan407712,plan407711,plan407710,plan407709,plan407708,plan407707,plan407706,plan407705,plan407704,plan407703,plan407702,plan407701,plan407700,plan407699,plan407698,plan407697,plan407696,plan407695,plan407694,plan407693,plan407692,plan407691,plan407690,plan407689,plan407688,plan407687,plan407686,plan407685)
}
