package f07.codegen.impl
import f07._
object CountPlans15 {
  val plan519784 = CountPlan(index = 519784, planInfo = "soqa", set = CountSetsImpl.b.countSet47)
  val plan519783 = CountPlan(index = 519783, planInfo = "sops", set = CountSetsImpl.b.countSet47)
  val plan519782 = CountPlan(index = 519782, planInfo = "sopr", set = CountSetsImpl.b.countSet47)
  val plan519781 = CountPlan(index = 519781, planInfo = "sopq", set = CountSetsImpl.b.countSet47)
  val plan519780 = CountPlan(index = 519780, planInfo = "sopp", set = CountSetsImpl.b.countSet47)
  val plan519779 = CountPlan(index = 519779, planInfo = "sopo", set = CountSetsImpl.b.countSet47)
  val plan519778 = CountPlan(index = 519778, planInfo = "sopn", set = CountSetsImpl.b.countSet47)
  val plan519777 = CountPlan(index = 519777, planInfo = "sopm", set = CountSetsImpl.b.countSet47)
  val plan519776 = CountPlan(index = 519776, planInfo = "sopl", set = CountSetsImpl.b.countSet47)
  val plan519775 = CountPlan(index = 519775, planInfo = "sopk", set = CountSetsImpl.b.countSet47)
  val plan519774 = CountPlan(index = 519774, planInfo = "sopj", set = CountSetsImpl.b.countSet47)
  val plan519773 = CountPlan(index = 519773, planInfo = "sopi", set = CountSetsImpl.b.countSet47)
  val plan519772 = CountPlan(index = 519772, planInfo = "soph", set = CountSetsImpl.b.countSet47)
  val plan519771 = CountPlan(index = 519771, planInfo = "sopg", set = CountSetsImpl.b.countSet47)
  val plan519770 = CountPlan(index = 519770, planInfo = "sopf", set = CountSetsImpl.b.countSet47)
  val plan519769 = CountPlan(index = 519769, planInfo = "sope", set = CountSetsImpl.b.countSet47)
  val plan519768 = CountPlan(index = 519768, planInfo = "sopd", set = CountSetsImpl.b.countSet47)
  val plan519767 = CountPlan(index = 519767, planInfo = "sopc", set = CountSetsImpl.b.countSet47)
  val plan519766 = CountPlan(index = 519766, planInfo = "sopb", set = CountSetsImpl.b.countSet47)
  val plan519765 = CountPlan(index = 519765, planInfo = "sopa", set = CountSetsImpl.b.countSet47)
  val plan519764 = CountPlan(index = 519764, planInfo = "soos", set = CountSetsImpl.b.countSet47)
  val plan519763 = CountPlan(index = 519763, planInfo = "soor", set = CountSetsImpl.b.countSet47)
  val plan519762 = CountPlan(index = 519762, planInfo = "sooq", set = CountSetsImpl.b.countSet47)
  val plan519761 = CountPlan(index = 519761, planInfo = "soop", set = CountSetsImpl.b.countSet47)
  val plan519760 = CountPlan(index = 519760, planInfo = "sooo", set = CountSetsImpl.b.countSet47)
  val plan519759 = CountPlan(index = 519759, planInfo = "soon", set = CountSetsImpl.b.countSet47)
  val plan519758 = CountPlan(index = 519758, planInfo = "soom", set = CountSetsImpl.b.countSet47)
  val plan519757 = CountPlan(index = 519757, planInfo = "sool", set = CountSetsImpl.b.countSet47)
  val plan519756 = CountPlan(index = 519756, planInfo = "sook", set = CountSetsImpl.b.countSet47)
  val plan519755 = CountPlan(index = 519755, planInfo = "sooj", set = CountSetsImpl.b.countSet47)
  val plan519754 = CountPlan(index = 519754, planInfo = "sooi", set = CountSetsImpl.b.countSet47)
  val plan519753 = CountPlan(index = 519753, planInfo = "sooh", set = CountSetsImpl.b.countSet47)
  val plan519752 = CountPlan(index = 519752, planInfo = "soog", set = CountSetsImpl.b.countSet47)
  val plan519751 = CountPlan(index = 519751, planInfo = "soof", set = CountSetsImpl.b.countSet47)
  val plan519750 = CountPlan(index = 519750, planInfo = "sooe", set = CountSetsImpl.b.countSet47)
  val plan519749 = CountPlan(index = 519749, planInfo = "sood", set = CountSetsImpl.b.countSet47)
  val plan519748 = CountPlan(index = 519748, planInfo = "sooc", set = CountSetsImpl.b.countSet47)
  val plan519747 = CountPlan(index = 519747, planInfo = "soob", set = CountSetsImpl.b.countSet47)
  val plan519746 = CountPlan(index = 519746, planInfo = "sooa", set = CountSetsImpl.b.countSet47)
  val plan519745 = CountPlan(index = 519745, planInfo = "sons", set = CountSetsImpl.b.countSet47)
  val plan519744 = CountPlan(index = 519744, planInfo = "sonr", set = CountSetsImpl.b.countSet47)
  val plan519743 = CountPlan(index = 519743, planInfo = "sonq", set = CountSetsImpl.b.countSet47)
  val plan519742 = CountPlan(index = 519742, planInfo = "sonp", set = CountSetsImpl.b.countSet47)
  val plan519741 = CountPlan(index = 519741, planInfo = "sono", set = CountSetsImpl.b.countSet47)
  val plan519740 = CountPlan(index = 519740, planInfo = "sonn", set = CountSetsImpl.b.countSet47)
  val plan519739 = CountPlan(index = 519739, planInfo = "sonm", set = CountSetsImpl.b.countSet47)
  val plan519738 = CountPlan(index = 519738, planInfo = "sonl", set = CountSetsImpl.b.countSet47)
  val plan519737 = CountPlan(index = 519737, planInfo = "sonk", set = CountSetsImpl.b.countSet47)
  val plan519736 = CountPlan(index = 519736, planInfo = "sonj", set = CountSetsImpl.b.countSet47)
  val plan519735 = CountPlan(index = 519735, planInfo = "soni", set = CountSetsImpl.b.countSet47)
  val plan519734 = CountPlan(index = 519734, planInfo = "sonh", set = CountSetsImpl.b.countSet47)
  val plan519733 = CountPlan(index = 519733, planInfo = "song", set = CountSetsImpl.b.countSet47)
  val plan519732 = CountPlan(index = 519732, planInfo = "sonf", set = CountSetsImpl.b.countSet47)
  val plan519731 = CountPlan(index = 519731, planInfo = "sone", set = CountSetsImpl.b.countSet47)
  val plan519730 = CountPlan(index = 519730, planInfo = "sond", set = CountSetsImpl.b.countSet47)
  val plan519729 = CountPlan(index = 519729, planInfo = "sonc", set = CountSetsImpl.b.countSet47)
  val plan519728 = CountPlan(index = 519728, planInfo = "sonb", set = CountSetsImpl.b.countSet47)
  val plan519727 = CountPlan(index = 519727, planInfo = "sona", set = CountSetsImpl.b.countSet47)
  val plan519726 = CountPlan(index = 519726, planInfo = "soms", set = CountSetsImpl.b.countSet47)
  val plan519725 = CountPlan(index = 519725, planInfo = "somr", set = CountSetsImpl.b.countSet47)
  val plan519724 = CountPlan(index = 519724, planInfo = "somq", set = CountSetsImpl.b.countSet47)
  val plan519723 = CountPlan(index = 519723, planInfo = "somp", set = CountSetsImpl.b.countSet47)
  val plan519722 = CountPlan(index = 519722, planInfo = "somo", set = CountSetsImpl.b.countSet47)
  val plan519721 = CountPlan(index = 519721, planInfo = "somn", set = CountSetsImpl.b.countSet47)
  val plan519720 = CountPlan(index = 519720, planInfo = "somm", set = CountSetsImpl.b.countSet47)
  val plan519719 = CountPlan(index = 519719, planInfo = "soml", set = CountSetsImpl.b.countSet47)
  val plan519718 = CountPlan(index = 519718, planInfo = "somk", set = CountSetsImpl.b.countSet47)
  val plan519717 = CountPlan(index = 519717, planInfo = "somj", set = CountSetsImpl.b.countSet47)
  val plan519716 = CountPlan(index = 519716, planInfo = "somi", set = CountSetsImpl.b.countSet47)
  val plan519715 = CountPlan(index = 519715, planInfo = "somh", set = CountSetsImpl.b.countSet47)
  val plan519714 = CountPlan(index = 519714, planInfo = "somg", set = CountSetsImpl.b.countSet47)
  val plan519713 = CountPlan(index = 519713, planInfo = "somf", set = CountSetsImpl.b.countSet47)
  val plan519712 = CountPlan(index = 519712, planInfo = "some", set = CountSetsImpl.b.countSet47)
  val plan519711 = CountPlan(index = 519711, planInfo = "somd", set = CountSetsImpl.b.countSet47)
  val plan519710 = CountPlan(index = 519710, planInfo = "somc", set = CountSetsImpl.b.countSet47)
  val plan519709 = CountPlan(index = 519709, planInfo = "somb", set = CountSetsImpl.b.countSet47)
  val plan519708 = CountPlan(index = 519708, planInfo = "soma", set = CountSetsImpl.b.countSet47)
  val plan519707 = CountPlan(index = 519707, planInfo = "sols", set = CountSetsImpl.b.countSet47)
  val plan519706 = CountPlan(index = 519706, planInfo = "solr", set = CountSetsImpl.b.countSet47)
  val plan519705 = CountPlan(index = 519705, planInfo = "solq", set = CountSetsImpl.b.countSet47)
  val plan519704 = CountPlan(index = 519704, planInfo = "solp", set = CountSetsImpl.b.countSet47)
  val plan519703 = CountPlan(index = 519703, planInfo = "solo", set = CountSetsImpl.b.countSet47)
  val plan519702 = CountPlan(index = 519702, planInfo = "soln", set = CountSetsImpl.b.countSet47)
  val plan519701 = CountPlan(index = 519701, planInfo = "solm", set = CountSetsImpl.b.countSet47)
  val plan519700 = CountPlan(index = 519700, planInfo = "soll", set = CountSetsImpl.b.countSet47)
  val plan519699 = CountPlan(index = 519699, planInfo = "solk", set = CountSetsImpl.b.countSet47)
  val plan519698 = CountPlan(index = 519698, planInfo = "solj", set = CountSetsImpl.b.countSet47)
  val plan519697 = CountPlan(index = 519697, planInfo = "soli", set = CountSetsImpl.b.countSet47)
  val plan519696 = CountPlan(index = 519696, planInfo = "solh", set = CountSetsImpl.b.countSet47)
  val plan519695 = CountPlan(index = 519695, planInfo = "solg", set = CountSetsImpl.b.countSet47)
  val plan519694 = CountPlan(index = 519694, planInfo = "solf", set = CountSetsImpl.b.countSet47)
  val plan519693 = CountPlan(index = 519693, planInfo = "sole", set = CountSetsImpl.b.countSet47)
  val plan519692 = CountPlan(index = 519692, planInfo = "sold", set = CountSetsImpl.b.countSet47)
  val plan519691 = CountPlan(index = 519691, planInfo = "solc", set = CountSetsImpl.b.countSet47)
  val plan519690 = CountPlan(index = 519690, planInfo = "solb", set = CountSetsImpl.b.countSet47)
  val plan519689 = CountPlan(index = 519689, planInfo = "sola", set = CountSetsImpl.b.countSet47)
  val plan519688 = CountPlan(index = 519688, planInfo = "soks", set = CountSetsImpl.b.countSet47)
  val plan519687 = CountPlan(index = 519687, planInfo = "sokr", set = CountSetsImpl.b.countSet47)
  val plan519686 = CountPlan(index = 519686, planInfo = "sokq", set = CountSetsImpl.b.countSet47)
  val plan519685 = CountPlan(index = 519685, planInfo = "sokp", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan519784,plan519783,plan519782,plan519781,plan519780,plan519779,plan519778,plan519777,plan519776,plan519775,plan519774,plan519773,plan519772,plan519771,plan519770,plan519769,plan519768,plan519767,plan519766,plan519765,plan519764,plan519763,plan519762,plan519761,plan519760,plan519759,plan519758,plan519757,plan519756,plan519755,plan519754,plan519753,plan519752,plan519751,plan519750,plan519749,plan519748,plan519747,plan519746,plan519745,plan519744,plan519743,plan519742,plan519741,plan519740,plan519739,plan519738,plan519737,plan519736,plan519735,plan519734,plan519733,plan519732,plan519731,plan519730,plan519729,plan519728,plan519727,plan519726,plan519725,plan519724,plan519723,plan519722,plan519721,plan519720,plan519719,plan519718,plan519717,plan519716,plan519715,plan519714,plan519713,plan519712,plan519711,plan519710,plan519709,plan519708,plan519707,plan519706,plan519705,plan519704,plan519703,plan519702,plan519701,plan519700,plan519699,plan519698,plan519697,plan519696,plan519695,plan519694,plan519693,plan519692,plan519691,plan519690,plan519689,plan519688,plan519687,plan519686,plan519685)
}
