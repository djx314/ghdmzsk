package f07.codegen.impl
import f07._
object CountPlans15 {
  val plan780426 = CountPlan(index = 780426, planInfo = "soqa", set = CountSetsImpl.b.countSet590)
  val plan780425 = CountPlan(index = 780425, planInfo = "sops", set = CountSetsImpl.b.countSet590)
  val plan780424 = CountPlan(index = 780424, planInfo = "sopr", set = CountSetsImpl.b.countSet590)
  val plan780423 = CountPlan(index = 780423, planInfo = "sopq", set = CountSetsImpl.b.countSet590)
  val plan780422 = CountPlan(index = 780422, planInfo = "sopp", set = CountSetsImpl.b.countSet590)
  val plan780421 = CountPlan(index = 780421, planInfo = "sopo", set = CountSetsImpl.b.countSet590)
  val plan780420 = CountPlan(index = 780420, planInfo = "sopn", set = CountSetsImpl.b.countSet590)
  val plan780419 = CountPlan(index = 780419, planInfo = "sopm", set = CountSetsImpl.b.countSet590)
  val plan780418 = CountPlan(index = 780418, planInfo = "sopl", set = CountSetsImpl.b.countSet590)
  val plan780417 = CountPlan(index = 780417, planInfo = "sopk", set = CountSetsImpl.b.countSet590)
  val plan780416 = CountPlan(index = 780416, planInfo = "sopj", set = CountSetsImpl.b.countSet590)
  val plan780415 = CountPlan(index = 780415, planInfo = "sopi", set = CountSetsImpl.b.countSet590)
  val plan780414 = CountPlan(index = 780414, planInfo = "soph", set = CountSetsImpl.b.countSet590)
  val plan780413 = CountPlan(index = 780413, planInfo = "sopg", set = CountSetsImpl.b.countSet590)
  val plan780412 = CountPlan(index = 780412, planInfo = "sopf", set = CountSetsImpl.b.countSet590)
  val plan780411 = CountPlan(index = 780411, planInfo = "sope", set = CountSetsImpl.b.countSet590)
  val plan780410 = CountPlan(index = 780410, planInfo = "sopd", set = CountSetsImpl.b.countSet590)
  val plan780409 = CountPlan(index = 780409, planInfo = "sopc", set = CountSetsImpl.b.countSet590)
  val plan780408 = CountPlan(index = 780408, planInfo = "sopb", set = CountSetsImpl.b.countSet590)
  val plan780407 = CountPlan(index = 780407, planInfo = "sopa", set = CountSetsImpl.b.countSet590)
  val plan780406 = CountPlan(index = 780406, planInfo = "soos", set = CountSetsImpl.b.countSet590)
  val plan780405 = CountPlan(index = 780405, planInfo = "soor", set = CountSetsImpl.b.countSet590)
  val plan780404 = CountPlan(index = 780404, planInfo = "sooq", set = CountSetsImpl.b.countSet590)
  val plan780403 = CountPlan(index = 780403, planInfo = "soop", set = CountSetsImpl.b.countSet590)
  val plan780402 = CountPlan(index = 780402, planInfo = "sooo", set = CountSetsImpl.b.countSet590)
  val plan780401 = CountPlan(index = 780401, planInfo = "soon", set = CountSetsImpl.b.countSet590)
  val plan780400 = CountPlan(index = 780400, planInfo = "soom", set = CountSetsImpl.b.countSet590)
  val plan780399 = CountPlan(index = 780399, planInfo = "sool", set = CountSetsImpl.b.countSet590)
  val plan780398 = CountPlan(index = 780398, planInfo = "sook", set = CountSetsImpl.b.countSet590)
  val plan780397 = CountPlan(index = 780397, planInfo = "sooj", set = CountSetsImpl.b.countSet590)
  val plan780396 = CountPlan(index = 780396, planInfo = "sooi", set = CountSetsImpl.b.countSet590)
  val plan780395 = CountPlan(index = 780395, planInfo = "sooh", set = CountSetsImpl.b.countSet590)
  val plan780394 = CountPlan(index = 780394, planInfo = "soog", set = CountSetsImpl.b.countSet590)
  val plan780393 = CountPlan(index = 780393, planInfo = "soof", set = CountSetsImpl.b.countSet590)
  val plan780392 = CountPlan(index = 780392, planInfo = "sooe", set = CountSetsImpl.b.countSet590)
  val plan780391 = CountPlan(index = 780391, planInfo = "sood", set = CountSetsImpl.b.countSet590)
  val plan780390 = CountPlan(index = 780390, planInfo = "sooc", set = CountSetsImpl.b.countSet590)
  val plan780389 = CountPlan(index = 780389, planInfo = "soob", set = CountSetsImpl.b.countSet590)
  val plan780388 = CountPlan(index = 780388, planInfo = "sooa", set = CountSetsImpl.b.countSet590)
  val plan780387 = CountPlan(index = 780387, planInfo = "sons", set = CountSetsImpl.b.countSet590)
  val plan780386 = CountPlan(index = 780386, planInfo = "sonr", set = CountSetsImpl.b.countSet590)
  val plan780385 = CountPlan(index = 780385, planInfo = "sonq", set = CountSetsImpl.b.countSet590)
  val plan780384 = CountPlan(index = 780384, planInfo = "sonp", set = CountSetsImpl.b.countSet590)
  val plan780383 = CountPlan(index = 780383, planInfo = "sono", set = CountSetsImpl.b.countSet590)
  val plan780382 = CountPlan(index = 780382, planInfo = "sonn", set = CountSetsImpl.b.countSet590)
  val plan780381 = CountPlan(index = 780381, planInfo = "sonm", set = CountSetsImpl.b.countSet590)
  val plan780380 = CountPlan(index = 780380, planInfo = "sonl", set = CountSetsImpl.b.countSet590)
  val plan780379 = CountPlan(index = 780379, planInfo = "sonk", set = CountSetsImpl.b.countSet590)
  val plan780378 = CountPlan(index = 780378, planInfo = "sonj", set = CountSetsImpl.b.countSet590)
  val plan780377 = CountPlan(index = 780377, planInfo = "soni", set = CountSetsImpl.b.countSet590)
  val plan780376 = CountPlan(index = 780376, planInfo = "sonh", set = CountSetsImpl.b.countSet590)
  val plan780375 = CountPlan(index = 780375, planInfo = "song", set = CountSetsImpl.b.countSet590)
  val plan780374 = CountPlan(index = 780374, planInfo = "sonf", set = CountSetsImpl.b.countSet590)
  val plan780373 = CountPlan(index = 780373, planInfo = "sone", set = CountSetsImpl.b.countSet590)
  val plan780372 = CountPlan(index = 780372, planInfo = "sond", set = CountSetsImpl.b.countSet590)
  val plan780371 = CountPlan(index = 780371, planInfo = "sonc", set = CountSetsImpl.b.countSet590)
  val plan780370 = CountPlan(index = 780370, planInfo = "sonb", set = CountSetsImpl.b.countSet590)
  val plan780369 = CountPlan(index = 780369, planInfo = "sona", set = CountSetsImpl.b.countSet590)
  val plan780368 = CountPlan(index = 780368, planInfo = "soms", set = CountSetsImpl.b.countSet590)
  val plan780367 = CountPlan(index = 780367, planInfo = "somr", set = CountSetsImpl.b.countSet590)
  val plan780366 = CountPlan(index = 780366, planInfo = "somq", set = CountSetsImpl.b.countSet590)
  val plan780365 = CountPlan(index = 780365, planInfo = "somp", set = CountSetsImpl.b.countSet590)
  val plan780364 = CountPlan(index = 780364, planInfo = "somo", set = CountSetsImpl.b.countSet590)
  val plan780363 = CountPlan(index = 780363, planInfo = "somn", set = CountSetsImpl.b.countSet590)
  val plan780362 = CountPlan(index = 780362, planInfo = "somm", set = CountSetsImpl.b.countSet590)
  val plan780361 = CountPlan(index = 780361, planInfo = "soml", set = CountSetsImpl.b.countSet590)
  val plan780360 = CountPlan(index = 780360, planInfo = "somk", set = CountSetsImpl.b.countSet590)
  val plan780359 = CountPlan(index = 780359, planInfo = "somj", set = CountSetsImpl.b.countSet590)
  val plan780358 = CountPlan(index = 780358, planInfo = "somi", set = CountSetsImpl.b.countSet590)
  val plan780357 = CountPlan(index = 780357, planInfo = "somh", set = CountSetsImpl.b.countSet590)
  val plan780356 = CountPlan(index = 780356, planInfo = "somg", set = CountSetsImpl.b.countSet590)
  val plan780355 = CountPlan(index = 780355, planInfo = "somf", set = CountSetsImpl.b.countSet590)
  val plan780354 = CountPlan(index = 780354, planInfo = "some", set = CountSetsImpl.b.countSet590)
  val plan780353 = CountPlan(index = 780353, planInfo = "somd", set = CountSetsImpl.b.countSet590)
  val plan780352 = CountPlan(index = 780352, planInfo = "somc", set = CountSetsImpl.b.countSet590)
  val plan780351 = CountPlan(index = 780351, planInfo = "somb", set = CountSetsImpl.b.countSet590)
  val plan780350 = CountPlan(index = 780350, planInfo = "soma", set = CountSetsImpl.b.countSet590)
  val plan780349 = CountPlan(index = 780349, planInfo = "sols", set = CountSetsImpl.b.countSet590)
  val plan780348 = CountPlan(index = 780348, planInfo = "solr", set = CountSetsImpl.b.countSet590)
  val plan780347 = CountPlan(index = 780347, planInfo = "solq", set = CountSetsImpl.b.countSet590)
  val plan780346 = CountPlan(index = 780346, planInfo = "solp", set = CountSetsImpl.b.countSet590)
  val plan780345 = CountPlan(index = 780345, planInfo = "solo", set = CountSetsImpl.b.countSet590)
  val plan780344 = CountPlan(index = 780344, planInfo = "soln", set = CountSetsImpl.b.countSet590)
  val plan780343 = CountPlan(index = 780343, planInfo = "solm", set = CountSetsImpl.b.countSet590)
  val plan780342 = CountPlan(index = 780342, planInfo = "soll", set = CountSetsImpl.b.countSet590)
  val plan780341 = CountPlan(index = 780341, planInfo = "solk", set = CountSetsImpl.b.countSet590)
  val plan780340 = CountPlan(index = 780340, planInfo = "solj", set = CountSetsImpl.b.countSet590)
  val plan780339 = CountPlan(index = 780339, planInfo = "soli", set = CountSetsImpl.b.countSet590)
  val plan780338 = CountPlan(index = 780338, planInfo = "solh", set = CountSetsImpl.b.countSet590)
  val plan780337 = CountPlan(index = 780337, planInfo = "solg", set = CountSetsImpl.b.countSet590)
  val plan780336 = CountPlan(index = 780336, planInfo = "solf", set = CountSetsImpl.b.countSet590)
  val plan780335 = CountPlan(index = 780335, planInfo = "sole", set = CountSetsImpl.b.countSet590)
  val plan780334 = CountPlan(index = 780334, planInfo = "sold", set = CountSetsImpl.b.countSet590)
  val plan780333 = CountPlan(index = 780333, planInfo = "solc", set = CountSetsImpl.b.countSet590)
  val plan780332 = CountPlan(index = 780332, planInfo = "solb", set = CountSetsImpl.b.countSet590)
  val plan780331 = CountPlan(index = 780331, planInfo = "sola", set = CountSetsImpl.b.countSet590)
  val plan780330 = CountPlan(index = 780330, planInfo = "soks", set = CountSetsImpl.b.countSet590)
  val plan780329 = CountPlan(index = 780329, planInfo = "sokr", set = CountSetsImpl.b.countSet590)
  val plan780328 = CountPlan(index = 780328, planInfo = "sokq", set = CountSetsImpl.b.countSet590)
  val plan780327 = CountPlan(index = 780327, planInfo = "sokp", set = CountSetsImpl.b.countSet590)
  val sum: List[CountPlan] = List(plan780426,plan780425,plan780424,plan780423,plan780422,plan780421,plan780420,plan780419,plan780418,plan780417,plan780416,plan780415,plan780414,plan780413,plan780412,plan780411,plan780410,plan780409,plan780408,plan780407,plan780406,plan780405,plan780404,plan780403,plan780402,plan780401,plan780400,plan780399,plan780398,plan780397,plan780396,plan780395,plan780394,plan780393,plan780392,plan780391,plan780390,plan780389,plan780388,plan780387,plan780386,plan780385,plan780384,plan780383,plan780382,plan780381,plan780380,plan780379,plan780378,plan780377,plan780376,plan780375,plan780374,plan780373,plan780372,plan780371,plan780370,plan780369,plan780368,plan780367,plan780366,plan780365,plan780364,plan780363,plan780362,plan780361,plan780360,plan780359,plan780358,plan780357,plan780356,plan780355,plan780354,plan780353,plan780352,plan780351,plan780350,plan780349,plan780348,plan780347,plan780346,plan780345,plan780344,plan780343,plan780342,plan780341,plan780340,plan780339,plan780338,plan780337,plan780336,plan780335,plan780334,plan780333,plan780332,plan780331,plan780330,plan780329,plan780328,plan780327)
}
