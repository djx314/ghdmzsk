package f07.codegen.impl
import f07._
object CountPlans360 {
  val plan485284 = CountPlan(index = 485284, planInfo = "nofe", set = CountSetsImpl.b.countSet48)
  val plan485283 = CountPlan(index = 485283, planInfo = "nofd", set = CountSetsImpl.b.countSet48)
  val plan485282 = CountPlan(index = 485282, planInfo = "nofc", set = CountSetsImpl.b.countSet48)
  val plan485281 = CountPlan(index = 485281, planInfo = "nofb", set = CountSetsImpl.b.countSet48)
  val plan485280 = CountPlan(index = 485280, planInfo = "nofa", set = CountSetsImpl.b.countSet48)
  val plan485279 = CountPlan(index = 485279, planInfo = "noes", set = CountSetsImpl.b.countSet48)
  val plan485278 = CountPlan(index = 485278, planInfo = "noer", set = CountSetsImpl.b.countSet48)
  val plan485277 = CountPlan(index = 485277, planInfo = "noeq", set = CountSetsImpl.b.countSet48)
  val plan485276 = CountPlan(index = 485276, planInfo = "noep", set = CountSetsImpl.b.countSet48)
  val plan485275 = CountPlan(index = 485275, planInfo = "noeo", set = CountSetsImpl.b.countSet48)
  val plan485274 = CountPlan(index = 485274, planInfo = "noen", set = CountSetsImpl.b.countSet48)
  val plan485273 = CountPlan(index = 485273, planInfo = "noem", set = CountSetsImpl.b.countSet48)
  val plan485272 = CountPlan(index = 485272, planInfo = "noel", set = CountSetsImpl.b.countSet48)
  val plan485271 = CountPlan(index = 485271, planInfo = "noek", set = CountSetsImpl.b.countSet48)
  val plan485270 = CountPlan(index = 485270, planInfo = "noej", set = CountSetsImpl.b.countSet48)
  val plan485269 = CountPlan(index = 485269, planInfo = "noei", set = CountSetsImpl.b.countSet48)
  val plan485268 = CountPlan(index = 485268, planInfo = "noeh", set = CountSetsImpl.b.countSet48)
  val plan485267 = CountPlan(index = 485267, planInfo = "noeg", set = CountSetsImpl.b.countSet48)
  val plan485266 = CountPlan(index = 485266, planInfo = "noef", set = CountSetsImpl.b.countSet48)
  val plan485265 = CountPlan(index = 485265, planInfo = "noee", set = CountSetsImpl.b.countSet48)
  val plan485264 = CountPlan(index = 485264, planInfo = "noed", set = CountSetsImpl.b.countSet48)
  val plan485263 = CountPlan(index = 485263, planInfo = "noec", set = CountSetsImpl.b.countSet48)
  val plan485262 = CountPlan(index = 485262, planInfo = "noeb", set = CountSetsImpl.b.countSet48)
  val plan485261 = CountPlan(index = 485261, planInfo = "noea", set = CountSetsImpl.b.countSet48)
  val plan485260 = CountPlan(index = 485260, planInfo = "nods", set = CountSetsImpl.b.countSet48)
  val plan485259 = CountPlan(index = 485259, planInfo = "nodr", set = CountSetsImpl.b.countSet48)
  val plan485258 = CountPlan(index = 485258, planInfo = "nodq", set = CountSetsImpl.b.countSet48)
  val plan485257 = CountPlan(index = 485257, planInfo = "nodp", set = CountSetsImpl.b.countSet48)
  val plan485256 = CountPlan(index = 485256, planInfo = "nodo", set = CountSetsImpl.b.countSet48)
  val plan485255 = CountPlan(index = 485255, planInfo = "nodn", set = CountSetsImpl.b.countSet48)
  val plan485254 = CountPlan(index = 485254, planInfo = "nodm", set = CountSetsImpl.b.countSet48)
  val plan485253 = CountPlan(index = 485253, planInfo = "nodl", set = CountSetsImpl.b.countSet48)
  val plan485252 = CountPlan(index = 485252, planInfo = "nodk", set = CountSetsImpl.b.countSet48)
  val plan485251 = CountPlan(index = 485251, planInfo = "nodj", set = CountSetsImpl.b.countSet48)
  val plan485250 = CountPlan(index = 485250, planInfo = "nodi", set = CountSetsImpl.b.countSet48)
  val plan485249 = CountPlan(index = 485249, planInfo = "nodh", set = CountSetsImpl.b.countSet48)
  val plan485248 = CountPlan(index = 485248, planInfo = "nodg", set = CountSetsImpl.b.countSet48)
  val plan485247 = CountPlan(index = 485247, planInfo = "nodf", set = CountSetsImpl.b.countSet48)
  val plan485246 = CountPlan(index = 485246, planInfo = "node", set = CountSetsImpl.b.countSet48)
  val plan485245 = CountPlan(index = 485245, planInfo = "nodd", set = CountSetsImpl.b.countSet48)
  val plan485244 = CountPlan(index = 485244, planInfo = "nodc", set = CountSetsImpl.b.countSet48)
  val plan485243 = CountPlan(index = 485243, planInfo = "nodb", set = CountSetsImpl.b.countSet48)
  val plan485242 = CountPlan(index = 485242, planInfo = "noda", set = CountSetsImpl.b.countSet48)
  val plan485241 = CountPlan(index = 485241, planInfo = "nocs", set = CountSetsImpl.b.countSet48)
  val plan485240 = CountPlan(index = 485240, planInfo = "nocr", set = CountSetsImpl.b.countSet48)
  val plan485239 = CountPlan(index = 485239, planInfo = "nocq", set = CountSetsImpl.b.countSet48)
  val plan485238 = CountPlan(index = 485238, planInfo = "nocp", set = CountSetsImpl.b.countSet48)
  val plan485237 = CountPlan(index = 485237, planInfo = "noco", set = CountSetsImpl.b.countSet48)
  val plan485236 = CountPlan(index = 485236, planInfo = "nocn", set = CountSetsImpl.b.countSet48)
  val plan485235 = CountPlan(index = 485235, planInfo = "nocm", set = CountSetsImpl.b.countSet48)
  val plan485234 = CountPlan(index = 485234, planInfo = "nocl", set = CountSetsImpl.b.countSet48)
  val plan485233 = CountPlan(index = 485233, planInfo = "nock", set = CountSetsImpl.b.countSet48)
  val plan485232 = CountPlan(index = 485232, planInfo = "nocj", set = CountSetsImpl.b.countSet48)
  val plan485231 = CountPlan(index = 485231, planInfo = "noci", set = CountSetsImpl.b.countSet48)
  val plan485230 = CountPlan(index = 485230, planInfo = "noch", set = CountSetsImpl.b.countSet48)
  val plan485229 = CountPlan(index = 485229, planInfo = "nocg", set = CountSetsImpl.b.countSet48)
  val plan485228 = CountPlan(index = 485228, planInfo = "nocf", set = CountSetsImpl.b.countSet48)
  val plan485227 = CountPlan(index = 485227, planInfo = "noce", set = CountSetsImpl.b.countSet48)
  val plan485226 = CountPlan(index = 485226, planInfo = "nocd", set = CountSetsImpl.b.countSet48)
  val plan485225 = CountPlan(index = 485225, planInfo = "nocc", set = CountSetsImpl.b.countSet48)
  val plan485224 = CountPlan(index = 485224, planInfo = "nocb", set = CountSetsImpl.b.countSet48)
  val plan485223 = CountPlan(index = 485223, planInfo = "noca", set = CountSetsImpl.b.countSet48)
  val plan485222 = CountPlan(index = 485222, planInfo = "nobs", set = CountSetsImpl.b.countSet48)
  val plan485221 = CountPlan(index = 485221, planInfo = "nobr", set = CountSetsImpl.b.countSet48)
  val plan485220 = CountPlan(index = 485220, planInfo = "nobq", set = CountSetsImpl.b.countSet48)
  val plan485219 = CountPlan(index = 485219, planInfo = "nobp", set = CountSetsImpl.b.countSet48)
  val plan485218 = CountPlan(index = 485218, planInfo = "nobo", set = CountSetsImpl.b.countSet48)
  val plan485217 = CountPlan(index = 485217, planInfo = "nobn", set = CountSetsImpl.b.countSet48)
  val plan485216 = CountPlan(index = 485216, planInfo = "nobm", set = CountSetsImpl.b.countSet48)
  val plan485215 = CountPlan(index = 485215, planInfo = "nobl", set = CountSetsImpl.b.countSet48)
  val plan485214 = CountPlan(index = 485214, planInfo = "nobk", set = CountSetsImpl.b.countSet48)
  val plan485213 = CountPlan(index = 485213, planInfo = "nobj", set = CountSetsImpl.b.countSet48)
  val plan485212 = CountPlan(index = 485212, planInfo = "nobi", set = CountSetsImpl.b.countSet48)
  val plan485211 = CountPlan(index = 485211, planInfo = "nobh", set = CountSetsImpl.b.countSet48)
  val plan485210 = CountPlan(index = 485210, planInfo = "nobg", set = CountSetsImpl.b.countSet48)
  val plan485209 = CountPlan(index = 485209, planInfo = "nobf", set = CountSetsImpl.b.countSet48)
  val plan485208 = CountPlan(index = 485208, planInfo = "nobe", set = CountSetsImpl.b.countSet48)
  val plan485207 = CountPlan(index = 485207, planInfo = "nobd", set = CountSetsImpl.b.countSet48)
  val plan485206 = CountPlan(index = 485206, planInfo = "nobc", set = CountSetsImpl.b.countSet48)
  val plan485205 = CountPlan(index = 485205, planInfo = "nobb", set = CountSetsImpl.b.countSet48)
  val plan485204 = CountPlan(index = 485204, planInfo = "noba", set = CountSetsImpl.b.countSet48)
  val plan485203 = CountPlan(index = 485203, planInfo = "noas", set = CountSetsImpl.b.countSet48)
  val plan485202 = CountPlan(index = 485202, planInfo = "noar", set = CountSetsImpl.b.countSet48)
  val plan485201 = CountPlan(index = 485201, planInfo = "noaq", set = CountSetsImpl.b.countSet48)
  val plan485200 = CountPlan(index = 485200, planInfo = "noap", set = CountSetsImpl.b.countSet48)
  val plan485199 = CountPlan(index = 485199, planInfo = "noao", set = CountSetsImpl.b.countSet48)
  val plan485198 = CountPlan(index = 485198, planInfo = "noan", set = CountSetsImpl.b.countSet48)
  val plan485197 = CountPlan(index = 485197, planInfo = "noam", set = CountSetsImpl.b.countSet48)
  val plan485196 = CountPlan(index = 485196, planInfo = "noal", set = CountSetsImpl.b.countSet48)
  val plan485195 = CountPlan(index = 485195, planInfo = "noak", set = CountSetsImpl.b.countSet48)
  val plan485194 = CountPlan(index = 485194, planInfo = "noaj", set = CountSetsImpl.b.countSet48)
  val plan485193 = CountPlan(index = 485193, planInfo = "noai", set = CountSetsImpl.b.countSet48)
  val plan485192 = CountPlan(index = 485192, planInfo = "noah", set = CountSetsImpl.b.countSet48)
  val plan485191 = CountPlan(index = 485191, planInfo = "noag", set = CountSetsImpl.b.countSet48)
  val plan485190 = CountPlan(index = 485190, planInfo = "noaf", set = CountSetsImpl.b.countSet48)
  val plan485189 = CountPlan(index = 485189, planInfo = "noae", set = CountSetsImpl.b.countSet48)
  val plan485188 = CountPlan(index = 485188, planInfo = "noad", set = CountSetsImpl.b.countSet48)
  val plan485187 = CountPlan(index = 485187, planInfo = "noac", set = CountSetsImpl.b.countSet48)
  val plan485186 = CountPlan(index = 485186, planInfo = "noab", set = CountSetsImpl.b.countSet48)
  val plan485185 = CountPlan(index = 485185, planInfo = "noaa", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan485284,plan485283,plan485282,plan485281,plan485280,plan485279,plan485278,plan485277,plan485276,plan485275,plan485274,plan485273,plan485272,plan485271,plan485270,plan485269,plan485268,plan485267,plan485266,plan485265,plan485264,plan485263,plan485262,plan485261,plan485260,plan485259,plan485258,plan485257,plan485256,plan485255,plan485254,plan485253,plan485252,plan485251,plan485250,plan485249,plan485248,plan485247,plan485246,plan485245,plan485244,plan485243,plan485242,plan485241,plan485240,plan485239,plan485238,plan485237,plan485236,plan485235,plan485234,plan485233,plan485232,plan485231,plan485230,plan485229,plan485228,plan485227,plan485226,plan485225,plan485224,plan485223,plan485222,plan485221,plan485220,plan485219,plan485218,plan485217,plan485216,plan485215,plan485214,plan485213,plan485212,plan485211,plan485210,plan485209,plan485208,plan485207,plan485206,plan485205,plan485204,plan485203,plan485202,plan485201,plan485200,plan485199,plan485198,plan485197,plan485196,plan485195,plan485194,plan485193,plan485192,plan485191,plan485190,plan485189,plan485188,plan485187,plan485186,plan485185)
}
