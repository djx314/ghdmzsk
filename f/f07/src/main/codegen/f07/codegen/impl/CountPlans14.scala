package f07.codegen.impl
import f07._
object CountPlans14 {
  val plan519884 = CountPlan(index = 519884, planInfo = "spcf", set = CountSetsImpl.b.countSet47)
  val plan519883 = CountPlan(index = 519883, planInfo = "spce", set = CountSetsImpl.b.countSet47)
  val plan519882 = CountPlan(index = 519882, planInfo = "spcd", set = CountSetsImpl.b.countSet47)
  val plan519881 = CountPlan(index = 519881, planInfo = "spcc", set = CountSetsImpl.b.countSet47)
  val plan519880 = CountPlan(index = 519880, planInfo = "spcb", set = CountSetsImpl.b.countSet47)
  val plan519879 = CountPlan(index = 519879, planInfo = "spca", set = CountSetsImpl.b.countSet47)
  val plan519878 = CountPlan(index = 519878, planInfo = "spbs", set = CountSetsImpl.b.countSet47)
  val plan519877 = CountPlan(index = 519877, planInfo = "spbr", set = CountSetsImpl.b.countSet47)
  val plan519876 = CountPlan(index = 519876, planInfo = "spbq", set = CountSetsImpl.b.countSet47)
  val plan519875 = CountPlan(index = 519875, planInfo = "spbp", set = CountSetsImpl.b.countSet47)
  val plan519874 = CountPlan(index = 519874, planInfo = "spbo", set = CountSetsImpl.b.countSet47)
  val plan519873 = CountPlan(index = 519873, planInfo = "spbn", set = CountSetsImpl.b.countSet47)
  val plan519872 = CountPlan(index = 519872, planInfo = "spbm", set = CountSetsImpl.b.countSet47)
  val plan519871 = CountPlan(index = 519871, planInfo = "spbl", set = CountSetsImpl.b.countSet47)
  val plan519870 = CountPlan(index = 519870, planInfo = "spbk", set = CountSetsImpl.b.countSet47)
  val plan519869 = CountPlan(index = 519869, planInfo = "spbj", set = CountSetsImpl.b.countSet47)
  val plan519868 = CountPlan(index = 519868, planInfo = "spbi", set = CountSetsImpl.b.countSet47)
  val plan519867 = CountPlan(index = 519867, planInfo = "spbh", set = CountSetsImpl.b.countSet47)
  val plan519866 = CountPlan(index = 519866, planInfo = "spbg", set = CountSetsImpl.b.countSet47)
  val plan519865 = CountPlan(index = 519865, planInfo = "spbf", set = CountSetsImpl.b.countSet47)
  val plan519864 = CountPlan(index = 519864, planInfo = "spbe", set = CountSetsImpl.b.countSet47)
  val plan519863 = CountPlan(index = 519863, planInfo = "spbd", set = CountSetsImpl.b.countSet47)
  val plan519862 = CountPlan(index = 519862, planInfo = "spbc", set = CountSetsImpl.b.countSet47)
  val plan519861 = CountPlan(index = 519861, planInfo = "spbb", set = CountSetsImpl.b.countSet47)
  val plan519860 = CountPlan(index = 519860, planInfo = "spba", set = CountSetsImpl.b.countSet47)
  val plan519859 = CountPlan(index = 519859, planInfo = "spas", set = CountSetsImpl.b.countSet47)
  val plan519858 = CountPlan(index = 519858, planInfo = "spar", set = CountSetsImpl.b.countSet47)
  val plan519857 = CountPlan(index = 519857, planInfo = "spaq", set = CountSetsImpl.b.countSet47)
  val plan519856 = CountPlan(index = 519856, planInfo = "spap", set = CountSetsImpl.b.countSet47)
  val plan519855 = CountPlan(index = 519855, planInfo = "spao", set = CountSetsImpl.b.countSet47)
  val plan519854 = CountPlan(index = 519854, planInfo = "span", set = CountSetsImpl.b.countSet47)
  val plan519853 = CountPlan(index = 519853, planInfo = "spam", set = CountSetsImpl.b.countSet47)
  val plan519852 = CountPlan(index = 519852, planInfo = "spal", set = CountSetsImpl.b.countSet47)
  val plan519851 = CountPlan(index = 519851, planInfo = "spak", set = CountSetsImpl.b.countSet47)
  val plan519850 = CountPlan(index = 519850, planInfo = "spaj", set = CountSetsImpl.b.countSet47)
  val plan519849 = CountPlan(index = 519849, planInfo = "spai", set = CountSetsImpl.b.countSet47)
  val plan519848 = CountPlan(index = 519848, planInfo = "spah", set = CountSetsImpl.b.countSet47)
  val plan519847 = CountPlan(index = 519847, planInfo = "spag", set = CountSetsImpl.b.countSet47)
  val plan519846 = CountPlan(index = 519846, planInfo = "spaf", set = CountSetsImpl.b.countSet47)
  val plan519845 = CountPlan(index = 519845, planInfo = "spae", set = CountSetsImpl.b.countSet47)
  val plan519844 = CountPlan(index = 519844, planInfo = "spad", set = CountSetsImpl.b.countSet47)
  val plan519843 = CountPlan(index = 519843, planInfo = "spac", set = CountSetsImpl.b.countSet47)
  val plan519842 = CountPlan(index = 519842, planInfo = "spab", set = CountSetsImpl.b.countSet47)
  val plan519841 = CountPlan(index = 519841, planInfo = "spaa", set = CountSetsImpl.b.countSet47)
  val plan519840 = CountPlan(index = 519840, planInfo = "soss", set = CountSetsImpl.b.countSet47)
  val plan519839 = CountPlan(index = 519839, planInfo = "sosr", set = CountSetsImpl.b.countSet47)
  val plan519838 = CountPlan(index = 519838, planInfo = "sosq", set = CountSetsImpl.b.countSet47)
  val plan519837 = CountPlan(index = 519837, planInfo = "sosp", set = CountSetsImpl.b.countSet47)
  val plan519836 = CountPlan(index = 519836, planInfo = "soso", set = CountSetsImpl.b.countSet47)
  val plan519835 = CountPlan(index = 519835, planInfo = "sosn", set = CountSetsImpl.b.countSet47)
  val plan519834 = CountPlan(index = 519834, planInfo = "sosm", set = CountSetsImpl.b.countSet47)
  val plan519833 = CountPlan(index = 519833, planInfo = "sosl", set = CountSetsImpl.b.countSet47)
  val plan519832 = CountPlan(index = 519832, planInfo = "sosk", set = CountSetsImpl.b.countSet47)
  val plan519831 = CountPlan(index = 519831, planInfo = "sosj", set = CountSetsImpl.b.countSet47)
  val plan519830 = CountPlan(index = 519830, planInfo = "sosi", set = CountSetsImpl.b.countSet47)
  val plan519829 = CountPlan(index = 519829, planInfo = "sosh", set = CountSetsImpl.b.countSet47)
  val plan519828 = CountPlan(index = 519828, planInfo = "sosg", set = CountSetsImpl.b.countSet47)
  val plan519827 = CountPlan(index = 519827, planInfo = "sosf", set = CountSetsImpl.b.countSet47)
  val plan519826 = CountPlan(index = 519826, planInfo = "sose", set = CountSetsImpl.b.countSet47)
  val plan519825 = CountPlan(index = 519825, planInfo = "sosd", set = CountSetsImpl.b.countSet47)
  val plan519824 = CountPlan(index = 519824, planInfo = "sosc", set = CountSetsImpl.b.countSet47)
  val plan519823 = CountPlan(index = 519823, planInfo = "sosb", set = CountSetsImpl.b.countSet47)
  val plan519822 = CountPlan(index = 519822, planInfo = "sosa", set = CountSetsImpl.b.countSet47)
  val plan519821 = CountPlan(index = 519821, planInfo = "sors", set = CountSetsImpl.b.countSet47)
  val plan519820 = CountPlan(index = 519820, planInfo = "sorr", set = CountSetsImpl.b.countSet47)
  val plan519819 = CountPlan(index = 519819, planInfo = "sorq", set = CountSetsImpl.b.countSet47)
  val plan519818 = CountPlan(index = 519818, planInfo = "sorp", set = CountSetsImpl.b.countSet47)
  val plan519817 = CountPlan(index = 519817, planInfo = "soro", set = CountSetsImpl.b.countSet47)
  val plan519816 = CountPlan(index = 519816, planInfo = "sorn", set = CountSetsImpl.b.countSet47)
  val plan519815 = CountPlan(index = 519815, planInfo = "sorm", set = CountSetsImpl.b.countSet47)
  val plan519814 = CountPlan(index = 519814, planInfo = "sorl", set = CountSetsImpl.b.countSet47)
  val plan519813 = CountPlan(index = 519813, planInfo = "sork", set = CountSetsImpl.b.countSet47)
  val plan519812 = CountPlan(index = 519812, planInfo = "sorj", set = CountSetsImpl.b.countSet47)
  val plan519811 = CountPlan(index = 519811, planInfo = "sori", set = CountSetsImpl.b.countSet47)
  val plan519810 = CountPlan(index = 519810, planInfo = "sorh", set = CountSetsImpl.b.countSet47)
  val plan519809 = CountPlan(index = 519809, planInfo = "sorg", set = CountSetsImpl.b.countSet47)
  val plan519808 = CountPlan(index = 519808, planInfo = "sorf", set = CountSetsImpl.b.countSet47)
  val plan519807 = CountPlan(index = 519807, planInfo = "sore", set = CountSetsImpl.b.countSet47)
  val plan519806 = CountPlan(index = 519806, planInfo = "sord", set = CountSetsImpl.b.countSet47)
  val plan519805 = CountPlan(index = 519805, planInfo = "sorc", set = CountSetsImpl.b.countSet47)
  val plan519804 = CountPlan(index = 519804, planInfo = "sorb", set = CountSetsImpl.b.countSet47)
  val plan519803 = CountPlan(index = 519803, planInfo = "sora", set = CountSetsImpl.b.countSet47)
  val plan519802 = CountPlan(index = 519802, planInfo = "soqs", set = CountSetsImpl.b.countSet47)
  val plan519801 = CountPlan(index = 519801, planInfo = "soqr", set = CountSetsImpl.b.countSet47)
  val plan519800 = CountPlan(index = 519800, planInfo = "soqq", set = CountSetsImpl.b.countSet47)
  val plan519799 = CountPlan(index = 519799, planInfo = "soqp", set = CountSetsImpl.b.countSet47)
  val plan519798 = CountPlan(index = 519798, planInfo = "soqo", set = CountSetsImpl.b.countSet47)
  val plan519797 = CountPlan(index = 519797, planInfo = "soqn", set = CountSetsImpl.b.countSet47)
  val plan519796 = CountPlan(index = 519796, planInfo = "soqm", set = CountSetsImpl.b.countSet47)
  val plan519795 = CountPlan(index = 519795, planInfo = "soql", set = CountSetsImpl.b.countSet47)
  val plan519794 = CountPlan(index = 519794, planInfo = "soqk", set = CountSetsImpl.b.countSet47)
  val plan519793 = CountPlan(index = 519793, planInfo = "soqj", set = CountSetsImpl.b.countSet47)
  val plan519792 = CountPlan(index = 519792, planInfo = "soqi", set = CountSetsImpl.b.countSet47)
  val plan519791 = CountPlan(index = 519791, planInfo = "soqh", set = CountSetsImpl.b.countSet47)
  val plan519790 = CountPlan(index = 519790, planInfo = "soqg", set = CountSetsImpl.b.countSet47)
  val plan519789 = CountPlan(index = 519789, planInfo = "soqf", set = CountSetsImpl.b.countSet47)
  val plan519788 = CountPlan(index = 519788, planInfo = "soqe", set = CountSetsImpl.b.countSet47)
  val plan519787 = CountPlan(index = 519787, planInfo = "soqd", set = CountSetsImpl.b.countSet47)
  val plan519786 = CountPlan(index = 519786, planInfo = "soqc", set = CountSetsImpl.b.countSet47)
  val plan519785 = CountPlan(index = 519785, planInfo = "soqb", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan519884,plan519883,plan519882,plan519881,plan519880,plan519879,plan519878,plan519877,plan519876,plan519875,plan519874,plan519873,plan519872,plan519871,plan519870,plan519869,plan519868,plan519867,plan519866,plan519865,plan519864,plan519863,plan519862,plan519861,plan519860,plan519859,plan519858,plan519857,plan519856,plan519855,plan519854,plan519853,plan519852,plan519851,plan519850,plan519849,plan519848,plan519847,plan519846,plan519845,plan519844,plan519843,plan519842,plan519841,plan519840,plan519839,plan519838,plan519837,plan519836,plan519835,plan519834,plan519833,plan519832,plan519831,plan519830,plan519829,plan519828,plan519827,plan519826,plan519825,plan519824,plan519823,plan519822,plan519821,plan519820,plan519819,plan519818,plan519817,plan519816,plan519815,plan519814,plan519813,plan519812,plan519811,plan519810,plan519809,plan519808,plan519807,plan519806,plan519805,plan519804,plan519803,plan519802,plan519801,plan519800,plan519799,plan519798,plan519797,plan519796,plan519795,plan519794,plan519793,plan519792,plan519791,plan519790,plan519789,plan519788,plan519787,plan519786,plan519785)
}
