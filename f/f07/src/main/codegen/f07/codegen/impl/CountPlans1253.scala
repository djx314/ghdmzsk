package f07.codegen.impl
import f07._
object CountPlans1253 {
  val plan395984 = CountPlan(index = 395984, planInfo = "anre", set = CountSetsImpl.b.countSet47)
  val plan395983 = CountPlan(index = 395983, planInfo = "anrd", set = CountSetsImpl.b.countSet47)
  val plan395982 = CountPlan(index = 395982, planInfo = "anrc", set = CountSetsImpl.b.countSet47)
  val plan395981 = CountPlan(index = 395981, planInfo = "anrb", set = CountSetsImpl.b.countSet47)
  val plan395980 = CountPlan(index = 395980, planInfo = "anra", set = CountSetsImpl.b.countSet47)
  val plan395979 = CountPlan(index = 395979, planInfo = "anqs", set = CountSetsImpl.b.countSet47)
  val plan395978 = CountPlan(index = 395978, planInfo = "anqr", set = CountSetsImpl.b.countSet47)
  val plan395977 = CountPlan(index = 395977, planInfo = "anqq", set = CountSetsImpl.b.countSet47)
  val plan395976 = CountPlan(index = 395976, planInfo = "anqp", set = CountSetsImpl.b.countSet47)
  val plan395975 = CountPlan(index = 395975, planInfo = "anqo", set = CountSetsImpl.b.countSet47)
  val plan395974 = CountPlan(index = 395974, planInfo = "anqn", set = CountSetsImpl.b.countSet47)
  val plan395973 = CountPlan(index = 395973, planInfo = "anqm", set = CountSetsImpl.b.countSet47)
  val plan395972 = CountPlan(index = 395972, planInfo = "anql", set = CountSetsImpl.b.countSet47)
  val plan395971 = CountPlan(index = 395971, planInfo = "anqk", set = CountSetsImpl.b.countSet47)
  val plan395970 = CountPlan(index = 395970, planInfo = "anqj", set = CountSetsImpl.b.countSet47)
  val plan395969 = CountPlan(index = 395969, planInfo = "anqi", set = CountSetsImpl.b.countSet47)
  val plan395968 = CountPlan(index = 395968, planInfo = "anqh", set = CountSetsImpl.b.countSet47)
  val plan395967 = CountPlan(index = 395967, planInfo = "anqg", set = CountSetsImpl.b.countSet47)
  val plan395966 = CountPlan(index = 395966, planInfo = "anqf", set = CountSetsImpl.b.countSet47)
  val plan395965 = CountPlan(index = 395965, planInfo = "anqe", set = CountSetsImpl.b.countSet47)
  val plan395964 = CountPlan(index = 395964, planInfo = "anqd", set = CountSetsImpl.b.countSet47)
  val plan395963 = CountPlan(index = 395963, planInfo = "anqc", set = CountSetsImpl.b.countSet47)
  val plan395962 = CountPlan(index = 395962, planInfo = "anqb", set = CountSetsImpl.b.countSet47)
  val plan395961 = CountPlan(index = 395961, planInfo = "anqa", set = CountSetsImpl.b.countSet47)
  val plan395960 = CountPlan(index = 395960, planInfo = "anps", set = CountSetsImpl.b.countSet47)
  val plan395959 = CountPlan(index = 395959, planInfo = "anpr", set = CountSetsImpl.b.countSet47)
  val plan395958 = CountPlan(index = 395958, planInfo = "anpq", set = CountSetsImpl.b.countSet47)
  val plan395957 = CountPlan(index = 395957, planInfo = "anpp", set = CountSetsImpl.b.countSet47)
  val plan395956 = CountPlan(index = 395956, planInfo = "anpo", set = CountSetsImpl.b.countSet47)
  val plan395955 = CountPlan(index = 395955, planInfo = "anpn", set = CountSetsImpl.b.countSet47)
  val plan395954 = CountPlan(index = 395954, planInfo = "anpm", set = CountSetsImpl.b.countSet47)
  val plan395953 = CountPlan(index = 395953, planInfo = "anpl", set = CountSetsImpl.b.countSet47)
  val plan395952 = CountPlan(index = 395952, planInfo = "anpk", set = CountSetsImpl.b.countSet47)
  val plan395951 = CountPlan(index = 395951, planInfo = "anpj", set = CountSetsImpl.b.countSet47)
  val plan395950 = CountPlan(index = 395950, planInfo = "anpi", set = CountSetsImpl.b.countSet47)
  val plan395949 = CountPlan(index = 395949, planInfo = "anph", set = CountSetsImpl.b.countSet47)
  val plan395948 = CountPlan(index = 395948, planInfo = "anpg", set = CountSetsImpl.b.countSet47)
  val plan395947 = CountPlan(index = 395947, planInfo = "anpf", set = CountSetsImpl.b.countSet47)
  val plan395946 = CountPlan(index = 395946, planInfo = "anpe", set = CountSetsImpl.b.countSet47)
  val plan395945 = CountPlan(index = 395945, planInfo = "anpd", set = CountSetsImpl.b.countSet47)
  val plan395944 = CountPlan(index = 395944, planInfo = "anpc", set = CountSetsImpl.b.countSet47)
  val plan395943 = CountPlan(index = 395943, planInfo = "anpb", set = CountSetsImpl.b.countSet47)
  val plan395942 = CountPlan(index = 395942, planInfo = "anpa", set = CountSetsImpl.b.countSet47)
  val plan395941 = CountPlan(index = 395941, planInfo = "anos", set = CountSetsImpl.b.countSet47)
  val plan395940 = CountPlan(index = 395940, planInfo = "anor", set = CountSetsImpl.b.countSet47)
  val plan395939 = CountPlan(index = 395939, planInfo = "anoq", set = CountSetsImpl.b.countSet47)
  val plan395938 = CountPlan(index = 395938, planInfo = "anop", set = CountSetsImpl.b.countSet47)
  val plan395937 = CountPlan(index = 395937, planInfo = "anoo", set = CountSetsImpl.b.countSet47)
  val plan395936 = CountPlan(index = 395936, planInfo = "anon", set = CountSetsImpl.b.countSet47)
  val plan395935 = CountPlan(index = 395935, planInfo = "anom", set = CountSetsImpl.b.countSet47)
  val plan395934 = CountPlan(index = 395934, planInfo = "anol", set = CountSetsImpl.b.countSet47)
  val plan395933 = CountPlan(index = 395933, planInfo = "anok", set = CountSetsImpl.b.countSet47)
  val plan395932 = CountPlan(index = 395932, planInfo = "anoj", set = CountSetsImpl.b.countSet47)
  val plan395931 = CountPlan(index = 395931, planInfo = "anoi", set = CountSetsImpl.b.countSet47)
  val plan395930 = CountPlan(index = 395930, planInfo = "anoh", set = CountSetsImpl.b.countSet47)
  val plan395929 = CountPlan(index = 395929, planInfo = "anog", set = CountSetsImpl.b.countSet47)
  val plan395928 = CountPlan(index = 395928, planInfo = "anof", set = CountSetsImpl.b.countSet47)
  val plan395927 = CountPlan(index = 395927, planInfo = "anoe", set = CountSetsImpl.b.countSet47)
  val plan395926 = CountPlan(index = 395926, planInfo = "anod", set = CountSetsImpl.b.countSet47)
  val plan395925 = CountPlan(index = 395925, planInfo = "anoc", set = CountSetsImpl.b.countSet47)
  val plan395924 = CountPlan(index = 395924, planInfo = "anob", set = CountSetsImpl.b.countSet47)
  val plan395923 = CountPlan(index = 395923, planInfo = "anoa", set = CountSetsImpl.b.countSet47)
  val plan395922 = CountPlan(index = 395922, planInfo = "anns", set = CountSetsImpl.b.countSet47)
  val plan395921 = CountPlan(index = 395921, planInfo = "annr", set = CountSetsImpl.b.countSet47)
  val plan395920 = CountPlan(index = 395920, planInfo = "annq", set = CountSetsImpl.b.countSet47)
  val plan395919 = CountPlan(index = 395919, planInfo = "annp", set = CountSetsImpl.b.countSet47)
  val plan395918 = CountPlan(index = 395918, planInfo = "anno", set = CountSetsImpl.b.countSet47)
  val plan395917 = CountPlan(index = 395917, planInfo = "annn", set = CountSetsImpl.b.countSet47)
  val plan395916 = CountPlan(index = 395916, planInfo = "annm", set = CountSetsImpl.b.countSet47)
  val plan395915 = CountPlan(index = 395915, planInfo = "annl", set = CountSetsImpl.b.countSet47)
  val plan395914 = CountPlan(index = 395914, planInfo = "annk", set = CountSetsImpl.b.countSet47)
  val plan395913 = CountPlan(index = 395913, planInfo = "annj", set = CountSetsImpl.b.countSet47)
  val plan395912 = CountPlan(index = 395912, planInfo = "anni", set = CountSetsImpl.b.countSet47)
  val plan395911 = CountPlan(index = 395911, planInfo = "annh", set = CountSetsImpl.b.countSet47)
  val plan395910 = CountPlan(index = 395910, planInfo = "anng", set = CountSetsImpl.b.countSet47)
  val plan395909 = CountPlan(index = 395909, planInfo = "annf", set = CountSetsImpl.b.countSet47)
  val plan395908 = CountPlan(index = 395908, planInfo = "anne", set = CountSetsImpl.b.countSet47)
  val plan395907 = CountPlan(index = 395907, planInfo = "annd", set = CountSetsImpl.b.countSet47)
  val plan395906 = CountPlan(index = 395906, planInfo = "annc", set = CountSetsImpl.b.countSet47)
  val plan395905 = CountPlan(index = 395905, planInfo = "annb", set = CountSetsImpl.b.countSet47)
  val plan395904 = CountPlan(index = 395904, planInfo = "anna", set = CountSetsImpl.b.countSet47)
  val plan395903 = CountPlan(index = 395903, planInfo = "anms", set = CountSetsImpl.b.countSet47)
  val plan395902 = CountPlan(index = 395902, planInfo = "anmr", set = CountSetsImpl.b.countSet47)
  val plan395901 = CountPlan(index = 395901, planInfo = "anmq", set = CountSetsImpl.b.countSet47)
  val plan395900 = CountPlan(index = 395900, planInfo = "anmp", set = CountSetsImpl.b.countSet47)
  val plan395899 = CountPlan(index = 395899, planInfo = "anmo", set = CountSetsImpl.b.countSet47)
  val plan395898 = CountPlan(index = 395898, planInfo = "anmn", set = CountSetsImpl.b.countSet47)
  val plan395897 = CountPlan(index = 395897, planInfo = "anmm", set = CountSetsImpl.b.countSet47)
  val plan395896 = CountPlan(index = 395896, planInfo = "anml", set = CountSetsImpl.b.countSet47)
  val plan395895 = CountPlan(index = 395895, planInfo = "anmk", set = CountSetsImpl.b.countSet47)
  val plan395894 = CountPlan(index = 395894, planInfo = "anmj", set = CountSetsImpl.b.countSet47)
  val plan395893 = CountPlan(index = 395893, planInfo = "anmi", set = CountSetsImpl.b.countSet47)
  val plan395892 = CountPlan(index = 395892, planInfo = "anmh", set = CountSetsImpl.b.countSet47)
  val plan395891 = CountPlan(index = 395891, planInfo = "anmg", set = CountSetsImpl.b.countSet47)
  val plan395890 = CountPlan(index = 395890, planInfo = "anmf", set = CountSetsImpl.b.countSet47)
  val plan395889 = CountPlan(index = 395889, planInfo = "anme", set = CountSetsImpl.b.countSet47)
  val plan395888 = CountPlan(index = 395888, planInfo = "anmd", set = CountSetsImpl.b.countSet47)
  val plan395887 = CountPlan(index = 395887, planInfo = "anmc", set = CountSetsImpl.b.countSet47)
  val plan395886 = CountPlan(index = 395886, planInfo = "anmb", set = CountSetsImpl.b.countSet47)
  val plan395885 = CountPlan(index = 395885, planInfo = "anma", set = CountSetsImpl.b.countSet47)
  val sum: List[CountPlan] = List(plan395984,plan395983,plan395982,plan395981,plan395980,plan395979,plan395978,plan395977,plan395976,plan395975,plan395974,plan395973,plan395972,plan395971,plan395970,plan395969,plan395968,plan395967,plan395966,plan395965,plan395964,plan395963,plan395962,plan395961,plan395960,plan395959,plan395958,plan395957,plan395956,plan395955,plan395954,plan395953,plan395952,plan395951,plan395950,plan395949,plan395948,plan395947,plan395946,plan395945,plan395944,plan395943,plan395942,plan395941,plan395940,plan395939,plan395938,plan395937,plan395936,plan395935,plan395934,plan395933,plan395932,plan395931,plan395930,plan395929,plan395928,plan395927,plan395926,plan395925,plan395924,plan395923,plan395922,plan395921,plan395920,plan395919,plan395918,plan395917,plan395916,plan395915,plan395914,plan395913,plan395912,plan395911,plan395910,plan395909,plan395908,plan395907,plan395906,plan395905,plan395904,plan395903,plan395902,plan395901,plan395900,plan395899,plan395898,plan395897,plan395896,plan395895,plan395894,plan395893,plan395892,plan395891,plan395890,plan395889,plan395888,plan395887,plan395886,plan395885)
}
