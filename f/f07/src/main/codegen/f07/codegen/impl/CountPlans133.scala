package f07.codegen.impl
import f07._
object CountPlans133 {
  val plan507984 = CountPlan(index = 507984, planInfo = "rbcs", set = CountSetsImpl.b.countSet59)
  val plan507983 = CountPlan(index = 507983, planInfo = "rbcr", set = CountSetsImpl.b.countSet59)
  val plan507982 = CountPlan(index = 507982, planInfo = "rbcq", set = CountSetsImpl.b.countSet59)
  val plan507981 = CountPlan(index = 507981, planInfo = "rbcp", set = CountSetsImpl.b.countSet59)
  val plan507980 = CountPlan(index = 507980, planInfo = "rbco", set = CountSetsImpl.b.countSet59)
  val plan507979 = CountPlan(index = 507979, planInfo = "rbcn", set = CountSetsImpl.b.countSet59)
  val plan507978 = CountPlan(index = 507978, planInfo = "rbcm", set = CountSetsImpl.b.countSet59)
  val plan507977 = CountPlan(index = 507977, planInfo = "rbcl", set = CountSetsImpl.b.countSet59)
  val plan507976 = CountPlan(index = 507976, planInfo = "rbck", set = CountSetsImpl.b.countSet59)
  val plan507975 = CountPlan(index = 507975, planInfo = "rbcj", set = CountSetsImpl.b.countSet59)
  val plan507974 = CountPlan(index = 507974, planInfo = "rbci", set = CountSetsImpl.b.countSet59)
  val plan507973 = CountPlan(index = 507973, planInfo = "rbch", set = CountSetsImpl.b.countSet59)
  val plan507972 = CountPlan(index = 507972, planInfo = "rbcg", set = CountSetsImpl.b.countSet59)
  val plan507971 = CountPlan(index = 507971, planInfo = "rbcf", set = CountSetsImpl.b.countSet59)
  val plan507970 = CountPlan(index = 507970, planInfo = "rbce", set = CountSetsImpl.b.countSet59)
  val plan507969 = CountPlan(index = 507969, planInfo = "rbcd", set = CountSetsImpl.b.countSet59)
  val plan507968 = CountPlan(index = 507968, planInfo = "rbcc", set = CountSetsImpl.b.countSet59)
  val plan507967 = CountPlan(index = 507967, planInfo = "rbcb", set = CountSetsImpl.b.countSet59)
  val plan507966 = CountPlan(index = 507966, planInfo = "rbca", set = CountSetsImpl.b.countSet59)
  val plan507965 = CountPlan(index = 507965, planInfo = "rbbs", set = CountSetsImpl.b.countSet49)
  val plan507964 = CountPlan(index = 507964, planInfo = "rbbr", set = CountSetsImpl.b.countSet49)
  val plan507963 = CountPlan(index = 507963, planInfo = "rbbq", set = CountSetsImpl.b.countSet49)
  val plan507962 = CountPlan(index = 507962, planInfo = "rbbp", set = CountSetsImpl.b.countSet49)
  val plan507961 = CountPlan(index = 507961, planInfo = "rbbo", set = CountSetsImpl.b.countSet49)
  val plan507960 = CountPlan(index = 507960, planInfo = "rbbn", set = CountSetsImpl.b.countSet49)
  val plan507959 = CountPlan(index = 507959, planInfo = "rbbm", set = CountSetsImpl.b.countSet49)
  val plan507958 = CountPlan(index = 507958, planInfo = "rbbl", set = CountSetsImpl.b.countSet49)
  val plan507957 = CountPlan(index = 507957, planInfo = "rbbk", set = CountSetsImpl.b.countSet49)
  val plan507956 = CountPlan(index = 507956, planInfo = "rbbj", set = CountSetsImpl.b.countSet49)
  val plan507955 = CountPlan(index = 507955, planInfo = "rbbi", set = CountSetsImpl.b.countSet49)
  val plan507954 = CountPlan(index = 507954, planInfo = "rbbh", set = CountSetsImpl.b.countSet49)
  val plan507953 = CountPlan(index = 507953, planInfo = "rbbg", set = CountSetsImpl.b.countSet49)
  val plan507952 = CountPlan(index = 507952, planInfo = "rbbf", set = CountSetsImpl.b.countSet49)
  val plan507951 = CountPlan(index = 507951, planInfo = "rbbe", set = CountSetsImpl.b.countSet49)
  val plan507950 = CountPlan(index = 507950, planInfo = "rbbd", set = CountSetsImpl.b.countSet49)
  val plan507949 = CountPlan(index = 507949, planInfo = "rbbc", set = CountSetsImpl.b.countSet49)
  val plan507948 = CountPlan(index = 507948, planInfo = "rbbb", set = CountSetsImpl.b.countSet49)
  val plan507947 = CountPlan(index = 507947, planInfo = "rbba", set = CountSetsImpl.b.countSet49)
  val plan507946 = CountPlan(index = 507946, planInfo = "rbas", set = CountSetsImpl.b.countSet59)
  val plan507945 = CountPlan(index = 507945, planInfo = "rbar", set = CountSetsImpl.b.countSet59)
  val plan507944 = CountPlan(index = 507944, planInfo = "rbaq", set = CountSetsImpl.b.countSet59)
  val plan507943 = CountPlan(index = 507943, planInfo = "rbap", set = CountSetsImpl.b.countSet59)
  val plan507942 = CountPlan(index = 507942, planInfo = "rbao", set = CountSetsImpl.b.countSet59)
  val plan507941 = CountPlan(index = 507941, planInfo = "rban", set = CountSetsImpl.b.countSet59)
  val plan507940 = CountPlan(index = 507940, planInfo = "rbam", set = CountSetsImpl.b.countSet59)
  val plan507939 = CountPlan(index = 507939, planInfo = "rbal", set = CountSetsImpl.b.countSet59)
  val plan507938 = CountPlan(index = 507938, planInfo = "rbak", set = CountSetsImpl.b.countSet59)
  val plan507937 = CountPlan(index = 507937, planInfo = "rbaj", set = CountSetsImpl.b.countSet59)
  val plan507936 = CountPlan(index = 507936, planInfo = "rbai", set = CountSetsImpl.b.countSet59)
  val plan507935 = CountPlan(index = 507935, planInfo = "rbah", set = CountSetsImpl.b.countSet59)
  val plan507934 = CountPlan(index = 507934, planInfo = "rbag", set = CountSetsImpl.b.countSet59)
  val plan507933 = CountPlan(index = 507933, planInfo = "rbaf", set = CountSetsImpl.b.countSet59)
  val plan507932 = CountPlan(index = 507932, planInfo = "rbae", set = CountSetsImpl.b.countSet59)
  val plan507931 = CountPlan(index = 507931, planInfo = "rbad", set = CountSetsImpl.b.countSet59)
  val plan507930 = CountPlan(index = 507930, planInfo = "rbac", set = CountSetsImpl.b.countSet59)
  val plan507929 = CountPlan(index = 507929, planInfo = "rbab", set = CountSetsImpl.b.countSet59)
  val plan507928 = CountPlan(index = 507928, planInfo = "rbaa", set = CountSetsImpl.b.countSet59)
  val plan507927 = CountPlan(index = 507927, planInfo = "rass", set = CountSetsImpl.b.countSet47)
  val plan507926 = CountPlan(index = 507926, planInfo = "rasr", set = CountSetsImpl.b.countSet47)
  val plan507925 = CountPlan(index = 507925, planInfo = "rasq", set = CountSetsImpl.b.countSet47)
  val plan507924 = CountPlan(index = 507924, planInfo = "rasp", set = CountSetsImpl.b.countSet47)
  val plan507923 = CountPlan(index = 507923, planInfo = "raso", set = CountSetsImpl.b.countSet47)
  val plan507922 = CountPlan(index = 507922, planInfo = "rasn", set = CountSetsImpl.b.countSet47)
  val plan507921 = CountPlan(index = 507921, planInfo = "rasm", set = CountSetsImpl.b.countSet47)
  val plan507920 = CountPlan(index = 507920, planInfo = "rasl", set = CountSetsImpl.b.countSet47)
  val plan507919 = CountPlan(index = 507919, planInfo = "rask", set = CountSetsImpl.b.countSet47)
  val plan507918 = CountPlan(index = 507918, planInfo = "rasj", set = CountSetsImpl.b.countSet47)
  val plan507917 = CountPlan(index = 507917, planInfo = "rasi", set = CountSetsImpl.b.countSet47)
  val plan507916 = CountPlan(index = 507916, planInfo = "rash", set = CountSetsImpl.b.countSet47)
  val plan507915 = CountPlan(index = 507915, planInfo = "rasg", set = CountSetsImpl.b.countSet47)
  val plan507914 = CountPlan(index = 507914, planInfo = "rasf", set = CountSetsImpl.b.countSet47)
  val plan507913 = CountPlan(index = 507913, planInfo = "rase", set = CountSetsImpl.b.countSet47)
  val plan507912 = CountPlan(index = 507912, planInfo = "rasd", set = CountSetsImpl.b.countSet47)
  val plan507911 = CountPlan(index = 507911, planInfo = "rasc", set = CountSetsImpl.b.countSet47)
  val plan507910 = CountPlan(index = 507910, planInfo = "rasb", set = CountSetsImpl.b.countSet47)
  val plan507909 = CountPlan(index = 507909, planInfo = "rasa", set = CountSetsImpl.b.countSet47)
  val plan507908 = CountPlan(index = 507908, planInfo = "rars", set = CountSetsImpl.b.countSet48)
  val plan507907 = CountPlan(index = 507907, planInfo = "rarr", set = CountSetsImpl.b.countSet48)
  val plan507906 = CountPlan(index = 507906, planInfo = "rarq", set = CountSetsImpl.b.countSet48)
  val plan507905 = CountPlan(index = 507905, planInfo = "rarp", set = CountSetsImpl.b.countSet48)
  val plan507904 = CountPlan(index = 507904, planInfo = "raro", set = CountSetsImpl.b.countSet48)
  val plan507903 = CountPlan(index = 507903, planInfo = "rarn", set = CountSetsImpl.b.countSet48)
  val plan507902 = CountPlan(index = 507902, planInfo = "rarm", set = CountSetsImpl.b.countSet48)
  val plan507901 = CountPlan(index = 507901, planInfo = "rarl", set = CountSetsImpl.b.countSet48)
  val plan507900 = CountPlan(index = 507900, planInfo = "rark", set = CountSetsImpl.b.countSet48)
  val plan507899 = CountPlan(index = 507899, planInfo = "rarj", set = CountSetsImpl.b.countSet48)
  val plan507898 = CountPlan(index = 507898, planInfo = "rari", set = CountSetsImpl.b.countSet48)
  val plan507897 = CountPlan(index = 507897, planInfo = "rarh", set = CountSetsImpl.b.countSet48)
  val plan507896 = CountPlan(index = 507896, planInfo = "rarg", set = CountSetsImpl.b.countSet48)
  val plan507895 = CountPlan(index = 507895, planInfo = "rarf", set = CountSetsImpl.b.countSet48)
  val plan507894 = CountPlan(index = 507894, planInfo = "rare", set = CountSetsImpl.b.countSet48)
  val plan507893 = CountPlan(index = 507893, planInfo = "rard", set = CountSetsImpl.b.countSet48)
  val plan507892 = CountPlan(index = 507892, planInfo = "rarc", set = CountSetsImpl.b.countSet48)
  val plan507891 = CountPlan(index = 507891, planInfo = "rarb", set = CountSetsImpl.b.countSet48)
  val plan507890 = CountPlan(index = 507890, planInfo = "rara", set = CountSetsImpl.b.countSet48)
  val plan507889 = CountPlan(index = 507889, planInfo = "raqs", set = CountSetsImpl.b.countSet49)
  val plan507888 = CountPlan(index = 507888, planInfo = "raqr", set = CountSetsImpl.b.countSet48)
  val plan507887 = CountPlan(index = 507887, planInfo = "raqq", set = CountSetsImpl.b.countSet48)
  val plan507886 = CountPlan(index = 507886, planInfo = "raqp", set = CountSetsImpl.b.countSet48)
  val plan507885 = CountPlan(index = 507885, planInfo = "raqo", set = CountSetsImpl.b.countSet48)
  val sum: List[CountPlan] = List(plan507984,plan507983,plan507982,plan507981,plan507980,plan507979,plan507978,plan507977,plan507976,plan507975,plan507974,plan507973,plan507972,plan507971,plan507970,plan507969,plan507968,plan507967,plan507966,plan507965,plan507964,plan507963,plan507962,plan507961,plan507960,plan507959,plan507958,plan507957,plan507956,plan507955,plan507954,plan507953,plan507952,plan507951,plan507950,plan507949,plan507948,plan507947,plan507946,plan507945,plan507944,plan507943,plan507942,plan507941,plan507940,plan507939,plan507938,plan507937,plan507936,plan507935,plan507934,plan507933,plan507932,plan507931,plan507930,plan507929,plan507928,plan507927,plan507926,plan507925,plan507924,plan507923,plan507922,plan507921,plan507920,plan507919,plan507918,plan507917,plan507916,plan507915,plan507914,plan507913,plan507912,plan507911,plan507910,plan507909,plan507908,plan507907,plan507906,plan507905,plan507904,plan507903,plan507902,plan507901,plan507900,plan507899,plan507898,plan507897,plan507896,plan507895,plan507894,plan507893,plan507892,plan507891,plan507890,plan507889,plan507888,plan507887,plan507886,plan507885)
}
