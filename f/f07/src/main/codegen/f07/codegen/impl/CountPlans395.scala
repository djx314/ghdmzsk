package f07.codegen.impl
import f07._
object CountPlans395 {
  val plan481784 = CountPlan(index = 481784, planInfo = "nela", set = CountSetsImpl.b.countSet49)
  val plan481783 = CountPlan(index = 481783, planInfo = "neks", set = CountSetsImpl.b.countSet49)
  val plan481782 = CountPlan(index = 481782, planInfo = "nekr", set = CountSetsImpl.b.countSet49)
  val plan481781 = CountPlan(index = 481781, planInfo = "nekq", set = CountSetsImpl.b.countSet49)
  val plan481780 = CountPlan(index = 481780, planInfo = "nekp", set = CountSetsImpl.b.countSet49)
  val plan481779 = CountPlan(index = 481779, planInfo = "neko", set = CountSetsImpl.b.countSet49)
  val plan481778 = CountPlan(index = 481778, planInfo = "nekn", set = CountSetsImpl.b.countSet49)
  val plan481777 = CountPlan(index = 481777, planInfo = "nekm", set = CountSetsImpl.b.countSet49)
  val plan481776 = CountPlan(index = 481776, planInfo = "nekl", set = CountSetsImpl.b.countSet49)
  val plan481775 = CountPlan(index = 481775, planInfo = "nekk", set = CountSetsImpl.b.countSet49)
  val plan481774 = CountPlan(index = 481774, planInfo = "nekj", set = CountSetsImpl.b.countSet49)
  val plan481773 = CountPlan(index = 481773, planInfo = "neki", set = CountSetsImpl.b.countSet49)
  val plan481772 = CountPlan(index = 481772, planInfo = "nekh", set = CountSetsImpl.b.countSet49)
  val plan481771 = CountPlan(index = 481771, planInfo = "nekg", set = CountSetsImpl.b.countSet49)
  val plan481770 = CountPlan(index = 481770, planInfo = "nekf", set = CountSetsImpl.b.countSet49)
  val plan481769 = CountPlan(index = 481769, planInfo = "neke", set = CountSetsImpl.b.countSet49)
  val plan481768 = CountPlan(index = 481768, planInfo = "nekd", set = CountSetsImpl.b.countSet49)
  val plan481767 = CountPlan(index = 481767, planInfo = "nekc", set = CountSetsImpl.b.countSet49)
  val plan481766 = CountPlan(index = 481766, planInfo = "nekb", set = CountSetsImpl.b.countSet49)
  val plan481765 = CountPlan(index = 481765, planInfo = "neka", set = CountSetsImpl.b.countSet49)
  val plan481764 = CountPlan(index = 481764, planInfo = "nejs", set = CountSetsImpl.b.countSet49)
  val plan481763 = CountPlan(index = 481763, planInfo = "nejr", set = CountSetsImpl.b.countSet49)
  val plan481762 = CountPlan(index = 481762, planInfo = "nejq", set = CountSetsImpl.b.countSet49)
  val plan481761 = CountPlan(index = 481761, planInfo = "nejp", set = CountSetsImpl.b.countSet49)
  val plan481760 = CountPlan(index = 481760, planInfo = "nejo", set = CountSetsImpl.b.countSet49)
  val plan481759 = CountPlan(index = 481759, planInfo = "nejn", set = CountSetsImpl.b.countSet49)
  val plan481758 = CountPlan(index = 481758, planInfo = "nejm", set = CountSetsImpl.b.countSet49)
  val plan481757 = CountPlan(index = 481757, planInfo = "nejl", set = CountSetsImpl.b.countSet49)
  val plan481756 = CountPlan(index = 481756, planInfo = "nejk", set = CountSetsImpl.b.countSet49)
  val plan481755 = CountPlan(index = 481755, planInfo = "nejj", set = CountSetsImpl.b.countSet49)
  val plan481754 = CountPlan(index = 481754, planInfo = "neji", set = CountSetsImpl.b.countSet49)
  val plan481753 = CountPlan(index = 481753, planInfo = "nejh", set = CountSetsImpl.b.countSet49)
  val plan481752 = CountPlan(index = 481752, planInfo = "nejg", set = CountSetsImpl.b.countSet49)
  val plan481751 = CountPlan(index = 481751, planInfo = "nejf", set = CountSetsImpl.b.countSet49)
  val plan481750 = CountPlan(index = 481750, planInfo = "neje", set = CountSetsImpl.b.countSet49)
  val plan481749 = CountPlan(index = 481749, planInfo = "nejd", set = CountSetsImpl.b.countSet49)
  val plan481748 = CountPlan(index = 481748, planInfo = "nejc", set = CountSetsImpl.b.countSet49)
  val plan481747 = CountPlan(index = 481747, planInfo = "nejb", set = CountSetsImpl.b.countSet49)
  val plan481746 = CountPlan(index = 481746, planInfo = "neja", set = CountSetsImpl.b.countSet49)
  val plan481745 = CountPlan(index = 481745, planInfo = "neis", set = CountSetsImpl.b.countSet49)
  val plan481744 = CountPlan(index = 481744, planInfo = "neir", set = CountSetsImpl.b.countSet49)
  val plan481743 = CountPlan(index = 481743, planInfo = "neiq", set = CountSetsImpl.b.countSet49)
  val plan481742 = CountPlan(index = 481742, planInfo = "neip", set = CountSetsImpl.b.countSet49)
  val plan481741 = CountPlan(index = 481741, planInfo = "neio", set = CountSetsImpl.b.countSet49)
  val plan481740 = CountPlan(index = 481740, planInfo = "nein", set = CountSetsImpl.b.countSet49)
  val plan481739 = CountPlan(index = 481739, planInfo = "neim", set = CountSetsImpl.b.countSet49)
  val plan481738 = CountPlan(index = 481738, planInfo = "neil", set = CountSetsImpl.b.countSet49)
  val plan481737 = CountPlan(index = 481737, planInfo = "neik", set = CountSetsImpl.b.countSet49)
  val plan481736 = CountPlan(index = 481736, planInfo = "neij", set = CountSetsImpl.b.countSet49)
  val plan481735 = CountPlan(index = 481735, planInfo = "neii", set = CountSetsImpl.b.countSet49)
  val plan481734 = CountPlan(index = 481734, planInfo = "neih", set = CountSetsImpl.b.countSet49)
  val plan481733 = CountPlan(index = 481733, planInfo = "neig", set = CountSetsImpl.b.countSet49)
  val plan481732 = CountPlan(index = 481732, planInfo = "neif", set = CountSetsImpl.b.countSet49)
  val plan481731 = CountPlan(index = 481731, planInfo = "neie", set = CountSetsImpl.b.countSet49)
  val plan481730 = CountPlan(index = 481730, planInfo = "neid", set = CountSetsImpl.b.countSet49)
  val plan481729 = CountPlan(index = 481729, planInfo = "neic", set = CountSetsImpl.b.countSet49)
  val plan481728 = CountPlan(index = 481728, planInfo = "neib", set = CountSetsImpl.b.countSet49)
  val plan481727 = CountPlan(index = 481727, planInfo = "neia", set = CountSetsImpl.b.countSet49)
  val plan481726 = CountPlan(index = 481726, planInfo = "nehs", set = CountSetsImpl.b.countSet49)
  val plan481725 = CountPlan(index = 481725, planInfo = "nehr", set = CountSetsImpl.b.countSet49)
  val plan481724 = CountPlan(index = 481724, planInfo = "nehq", set = CountSetsImpl.b.countSet49)
  val plan481723 = CountPlan(index = 481723, planInfo = "nehp", set = CountSetsImpl.b.countSet49)
  val plan481722 = CountPlan(index = 481722, planInfo = "neho", set = CountSetsImpl.b.countSet49)
  val plan481721 = CountPlan(index = 481721, planInfo = "nehn", set = CountSetsImpl.b.countSet49)
  val plan481720 = CountPlan(index = 481720, planInfo = "nehm", set = CountSetsImpl.b.countSet49)
  val plan481719 = CountPlan(index = 481719, planInfo = "nehl", set = CountSetsImpl.b.countSet49)
  val plan481718 = CountPlan(index = 481718, planInfo = "nehk", set = CountSetsImpl.b.countSet49)
  val plan481717 = CountPlan(index = 481717, planInfo = "nehj", set = CountSetsImpl.b.countSet49)
  val plan481716 = CountPlan(index = 481716, planInfo = "nehi", set = CountSetsImpl.b.countSet49)
  val plan481715 = CountPlan(index = 481715, planInfo = "nehh", set = CountSetsImpl.b.countSet49)
  val plan481714 = CountPlan(index = 481714, planInfo = "nehg", set = CountSetsImpl.b.countSet49)
  val plan481713 = CountPlan(index = 481713, planInfo = "nehf", set = CountSetsImpl.b.countSet49)
  val plan481712 = CountPlan(index = 481712, planInfo = "nehe", set = CountSetsImpl.b.countSet49)
  val plan481711 = CountPlan(index = 481711, planInfo = "nehd", set = CountSetsImpl.b.countSet49)
  val plan481710 = CountPlan(index = 481710, planInfo = "nehc", set = CountSetsImpl.b.countSet49)
  val plan481709 = CountPlan(index = 481709, planInfo = "nehb", set = CountSetsImpl.b.countSet49)
  val plan481708 = CountPlan(index = 481708, planInfo = "neha", set = CountSetsImpl.b.countSet49)
  val plan481707 = CountPlan(index = 481707, planInfo = "negs", set = CountSetsImpl.b.countSet49)
  val plan481706 = CountPlan(index = 481706, planInfo = "negr", set = CountSetsImpl.b.countSet49)
  val plan481705 = CountPlan(index = 481705, planInfo = "negq", set = CountSetsImpl.b.countSet49)
  val plan481704 = CountPlan(index = 481704, planInfo = "negp", set = CountSetsImpl.b.countSet49)
  val plan481703 = CountPlan(index = 481703, planInfo = "nego", set = CountSetsImpl.b.countSet49)
  val plan481702 = CountPlan(index = 481702, planInfo = "negn", set = CountSetsImpl.b.countSet49)
  val plan481701 = CountPlan(index = 481701, planInfo = "negm", set = CountSetsImpl.b.countSet49)
  val plan481700 = CountPlan(index = 481700, planInfo = "negl", set = CountSetsImpl.b.countSet49)
  val plan481699 = CountPlan(index = 481699, planInfo = "negk", set = CountSetsImpl.b.countSet49)
  val plan481698 = CountPlan(index = 481698, planInfo = "negj", set = CountSetsImpl.b.countSet49)
  val plan481697 = CountPlan(index = 481697, planInfo = "negi", set = CountSetsImpl.b.countSet49)
  val plan481696 = CountPlan(index = 481696, planInfo = "negh", set = CountSetsImpl.b.countSet49)
  val plan481695 = CountPlan(index = 481695, planInfo = "negg", set = CountSetsImpl.b.countSet49)
  val plan481694 = CountPlan(index = 481694, planInfo = "negf", set = CountSetsImpl.b.countSet49)
  val plan481693 = CountPlan(index = 481693, planInfo = "nege", set = CountSetsImpl.b.countSet49)
  val plan481692 = CountPlan(index = 481692, planInfo = "negd", set = CountSetsImpl.b.countSet49)
  val plan481691 = CountPlan(index = 481691, planInfo = "negc", set = CountSetsImpl.b.countSet49)
  val plan481690 = CountPlan(index = 481690, planInfo = "negb", set = CountSetsImpl.b.countSet49)
  val plan481689 = CountPlan(index = 481689, planInfo = "nega", set = CountSetsImpl.b.countSet49)
  val plan481688 = CountPlan(index = 481688, planInfo = "nefs", set = CountSetsImpl.b.countSet49)
  val plan481687 = CountPlan(index = 481687, planInfo = "nefr", set = CountSetsImpl.b.countSet49)
  val plan481686 = CountPlan(index = 481686, planInfo = "nefq", set = CountSetsImpl.b.countSet49)
  val plan481685 = CountPlan(index = 481685, planInfo = "nefp", set = CountSetsImpl.b.countSet49)
  val sum: List[CountPlan] = List(plan481784,plan481783,plan481782,plan481781,plan481780,plan481779,plan481778,plan481777,plan481776,plan481775,plan481774,plan481773,plan481772,plan481771,plan481770,plan481769,plan481768,plan481767,plan481766,plan481765,plan481764,plan481763,plan481762,plan481761,plan481760,plan481759,plan481758,plan481757,plan481756,plan481755,plan481754,plan481753,plan481752,plan481751,plan481750,plan481749,plan481748,plan481747,plan481746,plan481745,plan481744,plan481743,plan481742,plan481741,plan481740,plan481739,plan481738,plan481737,plan481736,plan481735,plan481734,plan481733,plan481732,plan481731,plan481730,plan481729,plan481728,plan481727,plan481726,plan481725,plan481724,plan481723,plan481722,plan481721,plan481720,plan481719,plan481718,plan481717,plan481716,plan481715,plan481714,plan481713,plan481712,plan481711,plan481710,plan481709,plan481708,plan481707,plan481706,plan481705,plan481704,plan481703,plan481702,plan481701,plan481700,plan481699,plan481698,plan481697,plan481696,plan481695,plan481694,plan481693,plan481692,plan481691,plan481690,plan481689,plan481688,plan481687,plan481686,plan481685)
}
