package f07.codegen.impl
import f07._
object CountPlans1202 {
  val plan401084 = CountPlan(index = 401084, planInfo = "bjam", set = CountSetsImpl.b.countSet59)
  val plan401083 = CountPlan(index = 401083, planInfo = "bjal", set = CountSetsImpl.b.countSet59)
  val plan401082 = CountPlan(index = 401082, planInfo = "bjak", set = CountSetsImpl.b.countSet59)
  val plan401081 = CountPlan(index = 401081, planInfo = "bjaj", set = CountSetsImpl.b.countSet59)
  val plan401080 = CountPlan(index = 401080, planInfo = "bjai", set = CountSetsImpl.b.countSet59)
  val plan401079 = CountPlan(index = 401079, planInfo = "bjah", set = CountSetsImpl.b.countSet59)
  val plan401078 = CountPlan(index = 401078, planInfo = "bjag", set = CountSetsImpl.b.countSet59)
  val plan401077 = CountPlan(index = 401077, planInfo = "bjaf", set = CountSetsImpl.b.countSet59)
  val plan401076 = CountPlan(index = 401076, planInfo = "bjae", set = CountSetsImpl.b.countSet59)
  val plan401075 = CountPlan(index = 401075, planInfo = "bjad", set = CountSetsImpl.b.countSet59)
  val plan401074 = CountPlan(index = 401074, planInfo = "bjac", set = CountSetsImpl.b.countSet59)
  val plan401073 = CountPlan(index = 401073, planInfo = "bjab", set = CountSetsImpl.b.countSet59)
  val plan401072 = CountPlan(index = 401072, planInfo = "bjaa", set = CountSetsImpl.b.countSet59)
  val plan401071 = CountPlan(index = 401071, planInfo = "biss", set = CountSetsImpl.b.countSet59)
  val plan401070 = CountPlan(index = 401070, planInfo = "bisr", set = CountSetsImpl.b.countSet59)
  val plan401069 = CountPlan(index = 401069, planInfo = "bisq", set = CountSetsImpl.b.countSet59)
  val plan401068 = CountPlan(index = 401068, planInfo = "bisp", set = CountSetsImpl.b.countSet59)
  val plan401067 = CountPlan(index = 401067, planInfo = "biso", set = CountSetsImpl.b.countSet59)
  val plan401066 = CountPlan(index = 401066, planInfo = "bisn", set = CountSetsImpl.b.countSet59)
  val plan401065 = CountPlan(index = 401065, planInfo = "bism", set = CountSetsImpl.b.countSet59)
  val plan401064 = CountPlan(index = 401064, planInfo = "bisl", set = CountSetsImpl.b.countSet59)
  val plan401063 = CountPlan(index = 401063, planInfo = "bisk", set = CountSetsImpl.b.countSet59)
  val plan401062 = CountPlan(index = 401062, planInfo = "bisj", set = CountSetsImpl.b.countSet59)
  val plan401061 = CountPlan(index = 401061, planInfo = "bisi", set = CountSetsImpl.b.countSet59)
  val plan401060 = CountPlan(index = 401060, planInfo = "bish", set = CountSetsImpl.b.countSet59)
  val plan401059 = CountPlan(index = 401059, planInfo = "bisg", set = CountSetsImpl.b.countSet59)
  val plan401058 = CountPlan(index = 401058, planInfo = "bisf", set = CountSetsImpl.b.countSet59)
  val plan401057 = CountPlan(index = 401057, planInfo = "bise", set = CountSetsImpl.b.countSet59)
  val plan401056 = CountPlan(index = 401056, planInfo = "bisd", set = CountSetsImpl.b.countSet59)
  val plan401055 = CountPlan(index = 401055, planInfo = "bisc", set = CountSetsImpl.b.countSet59)
  val plan401054 = CountPlan(index = 401054, planInfo = "bisb", set = CountSetsImpl.b.countSet59)
  val plan401053 = CountPlan(index = 401053, planInfo = "bisa", set = CountSetsImpl.b.countSet59)
  val plan401052 = CountPlan(index = 401052, planInfo = "birs", set = CountSetsImpl.b.countSet59)
  val plan401051 = CountPlan(index = 401051, planInfo = "birr", set = CountSetsImpl.b.countSet59)
  val plan401050 = CountPlan(index = 401050, planInfo = "birq", set = CountSetsImpl.b.countSet59)
  val plan401049 = CountPlan(index = 401049, planInfo = "birp", set = CountSetsImpl.b.countSet59)
  val plan401048 = CountPlan(index = 401048, planInfo = "biro", set = CountSetsImpl.b.countSet59)
  val plan401047 = CountPlan(index = 401047, planInfo = "birn", set = CountSetsImpl.b.countSet59)
  val plan401046 = CountPlan(index = 401046, planInfo = "birm", set = CountSetsImpl.b.countSet59)
  val plan401045 = CountPlan(index = 401045, planInfo = "birl", set = CountSetsImpl.b.countSet59)
  val plan401044 = CountPlan(index = 401044, planInfo = "birk", set = CountSetsImpl.b.countSet59)
  val plan401043 = CountPlan(index = 401043, planInfo = "birj", set = CountSetsImpl.b.countSet59)
  val plan401042 = CountPlan(index = 401042, planInfo = "biri", set = CountSetsImpl.b.countSet59)
  val plan401041 = CountPlan(index = 401041, planInfo = "birh", set = CountSetsImpl.b.countSet59)
  val plan401040 = CountPlan(index = 401040, planInfo = "birg", set = CountSetsImpl.b.countSet59)
  val plan401039 = CountPlan(index = 401039, planInfo = "birf", set = CountSetsImpl.b.countSet59)
  val plan401038 = CountPlan(index = 401038, planInfo = "bire", set = CountSetsImpl.b.countSet59)
  val plan401037 = CountPlan(index = 401037, planInfo = "bird", set = CountSetsImpl.b.countSet59)
  val plan401036 = CountPlan(index = 401036, planInfo = "birc", set = CountSetsImpl.b.countSet59)
  val plan401035 = CountPlan(index = 401035, planInfo = "birb", set = CountSetsImpl.b.countSet59)
  val plan401034 = CountPlan(index = 401034, planInfo = "bira", set = CountSetsImpl.b.countSet59)
  val plan401033 = CountPlan(index = 401033, planInfo = "biqs", set = CountSetsImpl.b.countSet59)
  val plan401032 = CountPlan(index = 401032, planInfo = "biqr", set = CountSetsImpl.b.countSet59)
  val plan401031 = CountPlan(index = 401031, planInfo = "biqq", set = CountSetsImpl.b.countSet59)
  val plan401030 = CountPlan(index = 401030, planInfo = "biqp", set = CountSetsImpl.b.countSet59)
  val plan401029 = CountPlan(index = 401029, planInfo = "biqo", set = CountSetsImpl.b.countSet59)
  val plan401028 = CountPlan(index = 401028, planInfo = "biqn", set = CountSetsImpl.b.countSet59)
  val plan401027 = CountPlan(index = 401027, planInfo = "biqm", set = CountSetsImpl.b.countSet59)
  val plan401026 = CountPlan(index = 401026, planInfo = "biql", set = CountSetsImpl.b.countSet59)
  val plan401025 = CountPlan(index = 401025, planInfo = "biqk", set = CountSetsImpl.b.countSet59)
  val plan401024 = CountPlan(index = 401024, planInfo = "biqj", set = CountSetsImpl.b.countSet59)
  val plan401023 = CountPlan(index = 401023, planInfo = "biqi", set = CountSetsImpl.b.countSet59)
  val plan401022 = CountPlan(index = 401022, planInfo = "biqh", set = CountSetsImpl.b.countSet59)
  val plan401021 = CountPlan(index = 401021, planInfo = "biqg", set = CountSetsImpl.b.countSet59)
  val plan401020 = CountPlan(index = 401020, planInfo = "biqf", set = CountSetsImpl.b.countSet59)
  val plan401019 = CountPlan(index = 401019, planInfo = "biqe", set = CountSetsImpl.b.countSet59)
  val plan401018 = CountPlan(index = 401018, planInfo = "biqd", set = CountSetsImpl.b.countSet59)
  val plan401017 = CountPlan(index = 401017, planInfo = "biqc", set = CountSetsImpl.b.countSet59)
  val plan401016 = CountPlan(index = 401016, planInfo = "biqb", set = CountSetsImpl.b.countSet59)
  val plan401015 = CountPlan(index = 401015, planInfo = "biqa", set = CountSetsImpl.b.countSet59)
  val plan401014 = CountPlan(index = 401014, planInfo = "bips", set = CountSetsImpl.b.countSet59)
  val plan401013 = CountPlan(index = 401013, planInfo = "bipr", set = CountSetsImpl.b.countSet59)
  val plan401012 = CountPlan(index = 401012, planInfo = "bipq", set = CountSetsImpl.b.countSet59)
  val plan401011 = CountPlan(index = 401011, planInfo = "bipp", set = CountSetsImpl.b.countSet59)
  val plan401010 = CountPlan(index = 401010, planInfo = "bipo", set = CountSetsImpl.b.countSet59)
  val plan401009 = CountPlan(index = 401009, planInfo = "bipn", set = CountSetsImpl.b.countSet59)
  val plan401008 = CountPlan(index = 401008, planInfo = "bipm", set = CountSetsImpl.b.countSet59)
  val plan401007 = CountPlan(index = 401007, planInfo = "bipl", set = CountSetsImpl.b.countSet59)
  val plan401006 = CountPlan(index = 401006, planInfo = "bipk", set = CountSetsImpl.b.countSet59)
  val plan401005 = CountPlan(index = 401005, planInfo = "bipj", set = CountSetsImpl.b.countSet59)
  val plan401004 = CountPlan(index = 401004, planInfo = "bipi", set = CountSetsImpl.b.countSet59)
  val plan401003 = CountPlan(index = 401003, planInfo = "biph", set = CountSetsImpl.b.countSet59)
  val plan401002 = CountPlan(index = 401002, planInfo = "bipg", set = CountSetsImpl.b.countSet59)
  val plan401001 = CountPlan(index = 401001, planInfo = "bipf", set = CountSetsImpl.b.countSet59)
  val plan401000 = CountPlan(index = 401000, planInfo = "bipe", set = CountSetsImpl.b.countSet59)
  val plan400999 = CountPlan(index = 400999, planInfo = "bipd", set = CountSetsImpl.b.countSet59)
  val plan400998 = CountPlan(index = 400998, planInfo = "bipc", set = CountSetsImpl.b.countSet59)
  val plan400997 = CountPlan(index = 400997, planInfo = "bipb", set = CountSetsImpl.b.countSet59)
  val plan400996 = CountPlan(index = 400996, planInfo = "bipa", set = CountSetsImpl.b.countSet59)
  val plan400995 = CountPlan(index = 400995, planInfo = "bios", set = CountSetsImpl.b.countSet59)
  val plan400994 = CountPlan(index = 400994, planInfo = "bior", set = CountSetsImpl.b.countSet59)
  val plan400993 = CountPlan(index = 400993, planInfo = "bioq", set = CountSetsImpl.b.countSet59)
  val plan400992 = CountPlan(index = 400992, planInfo = "biop", set = CountSetsImpl.b.countSet59)
  val plan400991 = CountPlan(index = 400991, planInfo = "bioo", set = CountSetsImpl.b.countSet59)
  val plan400990 = CountPlan(index = 400990, planInfo = "bion", set = CountSetsImpl.b.countSet59)
  val plan400989 = CountPlan(index = 400989, planInfo = "biom", set = CountSetsImpl.b.countSet59)
  val plan400988 = CountPlan(index = 400988, planInfo = "biol", set = CountSetsImpl.b.countSet59)
  val plan400987 = CountPlan(index = 400987, planInfo = "biok", set = CountSetsImpl.b.countSet59)
  val plan400986 = CountPlan(index = 400986, planInfo = "bioj", set = CountSetsImpl.b.countSet59)
  val plan400985 = CountPlan(index = 400985, planInfo = "bioi", set = CountSetsImpl.b.countSet59)
  val sum: List[CountPlan] = List(plan401084,plan401083,plan401082,plan401081,plan401080,plan401079,plan401078,plan401077,plan401076,plan401075,plan401074,plan401073,plan401072,plan401071,plan401070,plan401069,plan401068,plan401067,plan401066,plan401065,plan401064,plan401063,plan401062,plan401061,plan401060,plan401059,plan401058,plan401057,plan401056,plan401055,plan401054,plan401053,plan401052,plan401051,plan401050,plan401049,plan401048,plan401047,plan401046,plan401045,plan401044,plan401043,plan401042,plan401041,plan401040,plan401039,plan401038,plan401037,plan401036,plan401035,plan401034,plan401033,plan401032,plan401031,plan401030,plan401029,plan401028,plan401027,plan401026,plan401025,plan401024,plan401023,plan401022,plan401021,plan401020,plan401019,plan401018,plan401017,plan401016,plan401015,plan401014,plan401013,plan401012,plan401011,plan401010,plan401009,plan401008,plan401007,plan401006,plan401005,plan401004,plan401003,plan401002,plan401001,plan401000,plan400999,plan400998,plan400997,plan400996,plan400995,plan400994,plan400993,plan400992,plan400991,plan400990,plan400989,plan400988,plan400987,plan400986,plan400985)
}
